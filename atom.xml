<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>
      ThingsILearned y Dave Fowler
    </title>
        <link href="/atom.xml" rel="self" />
    
        <link href="/"/>
    
        
    <updated>2014-08-29T15:58:38Z</updated>

    <id>/atom.xml</id>

            <entry>
            <title type="html">Introducing the Data Pipeline</title>
            <author><name>dave</name></author>
            <link href="/things/data-pipeline"/>
            <updated>2014-08-19</updated>
            <published>2014-08-19</published>
            <id>/things/data-pipeline</id>
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">Meet Your Personal Chartio Teammate</title>
            <author><name>dave</name></author>
            <link href="/things/chartio-teammate"/>
            <updated>2014-06-12</updated>
            <published>2014-06-12</published>
            <id>/things/chartio-teammate</id>
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">Dashboard and Data Source Level Access Controls</title>
            <author><name>dave</name></author>
            <link href="/things/permission-controls"/>
            <updated>2014-05-20</updated>
            <published>2014-05-20</published>
            <id>/things/permission-controls</id>
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">Blending, Formulas, Services and Funding</title>
            <author><name>dave</name></author>
            <link href="/things/blending"/>
            <updated>2014-04-03</updated>
            <published>2014-04-03</published>
            <id>/things/blending</id>
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">An Interview with Scott Murray, Code Artist</title>
            <author><name>dave</name></author>
            <link href="/things/scott-murray"/>
            <updated>2014-04-03</updated>
            <published>2014-04-03</published>
            <id>/things/scott-murray</id>
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">A Logo Page for Chartio</title>
            <author><name>dave</name></author>
            <link href="/things/chartio-logo"/>
            <updated>2014-02-04</updated>
            <published>2014-02-04</published>
            <id>/things/chartio-logo</id>
            
            <content type="html">
                             &lt;p&gt;Chartio has a relatively new logo, and isn&#39;t the most obvious to find.  Frequently we&#39;ll be listed at an event or web site with an old logo, and I have a hard time blaming anyone for the oversight.&lt;/p&gt;
&lt;p&gt;Last night I thought it would be interesting to make an entire page of the Chartio website dedicated to the &lt;a href=&#34;http://chartio.com/logo/&#34; title=&#34;Chartio Logo Download Page&#34;&gt;Chartio Logo&lt;/a&gt;.  I included the logo in many different formats, shapes, and color schemes for easy download and distribution.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://chartio.com/logo/&#34; title=&#34;Chartio Logo Download Page&#34;&gt;&lt;img alt=&#34;Official Chartio Logo&#34; src=&#34;http://chartio.com/logo/logo.png&#34; title=&#34;Chartio Logo&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Besides a logo we also have an icon.  The icon and logo are never used together.  The icon is simply used in instances where the image would be too small for the Chartio text to be displayed well.&lt;/p&gt;
&lt;p&gt;It is rendered in SVG so is easily scalable to any size without increasing the size of the image.  Everything on the dashboards in Chartio are rendered in SVG so we thought it&#39;d be cool to make our &lt;a href=&#34;http://chartio.com/logo/icon.svg&#34; title=&#34;Chartio Icon&#34;&gt;icon&lt;/a&gt; that way as well.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://chartio.com/logo/icon.svg&#34;&gt;&lt;img src=&#34;http://chartio.com/logo/icon.svg&#34; title=&#34;Chartio Icon&#34; width=200&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The page ended up looking pretty cool:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://chartio.com/logo/&#34; title=&#34;Chartio Logo Download Page&#34;&gt;&lt;img alt=&#34;Logo Page Screenshot&#34; src=&#34;/media/images/logosite.png&#34; title=&#34;Chartio Logo Page Screenshot&#34; /&gt;&lt;/a&gt;&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Graph it with a Bullet</title>
            <author><name>dave</name></author>
            <link href="/things/bullet-graphs"/>
            <updated>2014-01-08</updated>
            <published>2014-01-08</published>
            <id>/things/bullet-graphs</id>
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">Business Intelligence Predictions</title>
            <author><name>dave</name></author>
            <link href="/things/business-intelligence-predictions"/>
            <updated>2014-01-02</updated>
            <published>2014-01-02</published>
            <id>/things/business-intelligence-predictions</id>
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">2014 Resolutions</title>
            <author><name>dave</name></author>
            <link href="/things/2014-resolutions"/>
            <updated>2014-01-01</updated>
            <published>2014-01-01</published>
            <id>/things/2014-resolutions</id>
            
            <content type="html">
                             &lt;p&gt;I&#39;m not a fan of New Years Eve, but I do enjoy setting and sticking to resolutions.  I&#39;ve found that the ticket is to set definite, reasonable, written out goals.  It also helps to not start them all at once but aspire to reach them all by the end of the year.&lt;/p&gt;
&lt;p&gt;Last year I had 3 resolutions and stuck to each one.  They were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;write down everything I eat&lt;/li&gt;
&lt;li&gt;stay off diet coke&lt;/li&gt;
&lt;li&gt;no illegal downloading&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This year I&#39;ve made the following resolutions for the following reasons.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;write down what I eat before I eat it&lt;/h3&gt;
&lt;p&gt;This is an extension of last year&#39;s resolution.  A year ago I read in the excellent book &#34;The Power of Habit&#34; that writing down what you eat is the only data proven weight loss plan.  Its crazy to think that the billions of dollars spent on weight loss every year are all on methods that have no proven results.  So I resolved and started writing down the items I&#39;ve eaten in a small Molskine notebook I carry in my back pocket.  I tried using iPhone apps, and calorie counters but it was just too annoying and too detailed.  All I wanted to do was write down the things I ate, not necessarily how much and how many calories were in the items.  I use a page a day and it makes me much more conscious about what I&#39;ve eaten.
  &lt;br&gt;&lt;br&gt;
  To make myself even more conscious of what I eat, and to eliminate my tendency to mindlessly snack on whatever is in front of me, I&#39;ve decided to take a step further and try to write what I&#39;m going to eat down before I eat it.  I like the idea of forcing myself to think about what I&#39;m going to eat and give myself permission first.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;exercise at least once every week&lt;/h3&gt;
&lt;p&gt;I fall in and out (mostly out) of the habit of exercise.  To keep myself from completely falling out of the habit I&#39;ve decided to set a goal to work out at least once a week.  I&#39;ll keep track of my workouts in my food notebook to ensure that I&#39;m not missing a week.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;run at least two 5k races&lt;/h3&gt;
&lt;p&gt;I&#39;ve always thought of myself as a terrible runner and never enjoyed that exercise.  Two and a half years ago however I ran a 5k and then a 10k and started to really enjoy it.  I don&#39;t think I&#39;ve had a higher high than I did after completing that 10k.  It was a lot more attainable than I thought it would be.  After the 10k I didn&#39;t sign up for another race and got out of the habit.  I wish I hadn&#39;t.  This year I resolve to start that up again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;get out of the city at least two nights or full days every month&lt;/h3&gt;
&lt;p&gt;I live in San Francisco now and I often get a bit claustrophobic and also lazy about doing anything about it.  Whenever I do travel to any of the amazing parks, vineyards, or towns outside of the city its always amazing and I always think &#34;I really need to do this more often!&#34;.  So I&#39;ve set a resolution to do so, and with a more definite objective of staying outside of the city two nights or full days every month.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;re-type all misspelled words&lt;/h3&gt;
&lt;p&gt;I use spell check way to heavily and it has made me a lazy and poor speller.  I resolve to not to use the auto-fix spell check option but to re-type the words that I misspell.  I hope it will break my habit of misspelling the same words over and over again.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Those are my lofty but reasonable personal resolutions for the year.  I also have some work related goals and resolutions but those I keep to myself.  I&#39;m excited about 2014 and hope everyone&#39;s 2013 was as great as mine!&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">1 year since launch = 500,000 charts per week</title>
            <author><name>dave</name></author>
            <link href="/things/a-year-since-launch"/>
            <updated>2013-11-06</updated>
            <published>2013-11-06</published>
            <id>/things/a-year-since-launch</id>
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">An Interview with Riley Newman, Head of Analytics at Airbnb</title>
            <author><name>dave</name></author>
            <link href="/things/riley-newman-interview"/>
            <updated>2013-09-26</updated>
            <published>2013-09-26</published>
            <id>/things/riley-newman-interview</id>
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">The New Man</title>
            <author><name>dave</name></author>
            <link href="/things/the-new-man"/>
            <updated>2013-09-01</updated>
            <published>2013-09-01</published>
            <id>/things/the-new-man</id>
            
            <content type="html">
                             &lt;p&gt;I just finished Reading Eric Fromm&#39;s &lt;a href=&#34;http://en.wikipedia.org/wiki/To_Have_or_to_Be%3F&#34; title=&#34;To Have or to Be Wikipedia&#34;&gt;To Have or To Be&lt;/a&gt;, which is a fantastic book discussing the differences in a having based existence and one based on being.  Fromm proposes that almost all of us live a having focused life, and that its hard not to do while growing up in the rules our current society raises us in.  He suggests the being mode of living as superior, with several chapters explaining the differences and virtues of the being based lifestyle.&lt;/p&gt;
&lt;p&gt;He then lists a set of requirements that would be needed for a new society that would cultivate being based people and suggests a set of first steps that are just as relevant today as they were when he wrote them 38 years ago.&lt;/p&gt;
&lt;p&gt;The following description of what a being based person consists of is probably the best list of life goals and guidelines that I have come across.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;h4&gt;The New Man&lt;/h4&gt;
&lt;p&gt;The function of the new society is to encourage the emergence of a new Man, beings whose character structure will exhibit the following qualities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Willingness to give up all forms of having, in order to fully be.&lt;/li&gt;
&lt;li&gt;Security, sense of identity, and confidence based on  faith in what one is, on one&#39;s need for relatedness, interest, love, solidarity with the world around one, instead of on one&#39;s desire to have, to posses, to control the world, and thus become the slave of one&#39;s possessions.&lt;/li&gt;
&lt;li&gt;Acceptance of the fact that nobody and nothing outside oneself give meaning to life, but that this radical independence and no-thingness can become the condition for the fullest activity devoted to caring and sharing.&lt;/li&gt;
&lt;li&gt;Being fully present where one is.&lt;/li&gt;
&lt;li&gt;Joy that comes from giving and sharing, not from hoarding and exploiting.&lt;/li&gt;
&lt;li&gt;Love and respect for life in all its manifestations, in the knowledge that not things, power, all that is dead, but life and everything that pertains to its growth are sacred.&lt;/li&gt;
&lt;li&gt;Trying to reduce greed, hate, and illusions as much as one is capable.&lt;/li&gt;
&lt;li&gt;Living without worshiping idols and without illusions, because one has reached a state that does not require illusions.&lt;/li&gt;
&lt;li&gt;Developing one&#39;s capacity for love, together with one&#39;s capacity for critical, unsentimental thought.&lt;/li&gt;
&lt;li&gt;Shedding one&#39;s narcissism and accepting the tragic limitations inherent in human existence.&lt;/li&gt;
&lt;li&gt;Making the full growth of oneself and of one&#39;s fellow beings the supreme goal of living.&lt;/li&gt;
&lt;li&gt;Knowing that to reach this goal discipline and respect for reality are necessary.&lt;/li&gt;
&lt;li&gt;Knowing, also, that no growth is healthy that does not occur in a structure, but knowing, too, the difference between structure as an attribute of life and &#34;order&#34; as an attribute of no-life, of the dead.&lt;/li&gt;
&lt;li&gt;Developing one&#39;s imagination, not as an escape from intolerable circumstances but as the anticipation of real possibilities, as a means to do away with intolerable circumstances.&lt;/li&gt;
&lt;li&gt;Not deceiving others, but also not being deceived by others; one may be called innocent, but not naive.&lt;/li&gt;
&lt;li&gt;Knowing oneself, not only the self one knows, but also the self one does not know--even though one has a slumbering knowledge of what one does not know.&lt;/li&gt;
&lt;li&gt;Sensing one&#39;s oneness with all life, hence giving up the aim of conquering nature, subduing it, exploiting it, raping it, destroying it, but trying, rather, to understand and cooperate with nature.&lt;/li&gt;
&lt;li&gt;Freedom that is not arbitrariness but the possibility to be oneself, not as a bundle of greedy desires, but as a delicately balanced structure that all any moment is confronted with the alternative of growth or decay, life or death.&lt;/li&gt;
&lt;li&gt;Knowing that evil and destructiveness are necessary consequences of failure to grow.&lt;/li&gt;
&lt;li&gt;Knowing that only a few have reached perfection in all these qualities, but being without the ambition to &#34;reach the goal,&#34; in the knowledge that such ambition is only another form of greed, of having.&lt;/li&gt;
&lt;li&gt;Happiness in the process of ever-growing aliveness, whatever the furthest point is that fate permits one to reach, for living as fully as one can is so satisvfactory that the concern for what one might or might not attain has little chance to develop.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Put a fork in &#39;big data&#39; - it&#39;s done</title>
            <author><name>dave</name></author>
            <link href="/things/putaforkinbigdata"/>
            <updated>2013-08-13</updated>
            <published>2013-08-13</published>
            <id>/things/putaforkinbigdata</id>
            
            <content type="html">
                             &lt;p&gt;This is an opinion piece I wrote for VentureBeat&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Information Dashboard Design (2nd Edition)</title>
            <author><name>dave</name></author>
            <link href="/things/informationdashboarddesign"/>
            <updated>2013-08-09</updated>
            <published>2013-08-09</published>
            <id>/things/informationdashboarddesign</id>
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">CSV as a Data Source</title>
            <author><name>dave</name></author>
            <link href="/things/chartio-csv"/>
            <updated>2013-08-01</updated>
            <published>2013-08-01</published>
            <id>/things/chartio-csv</id>
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">Drawn to Write</title>
            <author><name>dave</name></author>
            <link href="/things/drawn-to-write"/>
            <updated>2013-07-26</updated>
            <published>2013-07-26</published>
            <id>/things/drawn-to-write</id>
            
            <content type="html">
                             &lt;p&gt;I constantly get the urge to write.  Every time I read or learn something I imagine myself finding my notebook or computer and writing about it.  Its not so much because I think I have something especially novel to say, or because I think anyone will read it.  Mostly I like to write about the &lt;em&gt;things I learn&lt;/em&gt; as a way of engaging and as a process of solidifying the thoughts so they can be built on top of.&lt;/p&gt;
&lt;p&gt;Rarely do I ever act on this urge, and when I do it is typically a disappointing experience as what ends up on the paper is never close to the impressive work I&#39;d fantasized.&lt;/p&gt;
&lt;p&gt;Which reminds me of point 5 of a great essay I read recently on &lt;a href=&#34;http://chronicle.com/article/10-Tips-on-How-to-Write-Less/124268/&#34;&gt;How to Write Less Badly&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;h4&gt;5. Everyone&#39;s unwritten work is brilliant.&lt;/h4&gt;
&lt;p&gt;And the more unwritten it is, the more brilliant it is. We have all met those glib, intimidating graduate students or faculty members. They are at their most dangerous holding a beer in one hand and a cigarette in the other, in some bar or at an office party. They have all the answers. They can tell you just what they will write about, and how great it will be.&lt;/p&gt;
&lt;p&gt;Years pass, and they still have the same pat, 200-word answer to &#34;What are you working on?&#34; It never changes, because they are not actually working on anything, except that one little act.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Often I blame my lack of writing on the lack of good software to manage my files and work with my abstract thought.  I&#39;ve got numerous plans and half started projects for writing my own unique static site generator, a better WYSIWYG interface and easier methods to create and display related non-sequential content.&lt;/p&gt;
&lt;p&gt;At the end of grad school I even &lt;a href=&#34;/2007/05/20/starting-toward-probable-failure/&#34;&gt;spent a summer building many of those features&lt;/a&gt; and trying to launch it, under the name of this site, as a blogging and thought platform.  Now it&#39;s evolved (read: failed) into a &lt;a href=&#34;/things/static-site&#34;&gt;hyde&lt;/a&gt; generated site with the hardly approximate tagline of &#34;Something new every day... or so&#34;.&lt;/p&gt;
&lt;p&gt;The truth is I&#39;m not a good writer.  I don&#39;t spend much time on it, and my vocabulary has much to be desired.  My thoughts are there, but enjoy staying abstract and have trouble solidifying themselves.&lt;/p&gt;
&lt;p&gt;And not being a great writer, and the the thoughts I&#39;m wanting to write not being all that concrete yet, will usually keep me from publishing to the permanent and public internet out of the fear of embarrassment.&lt;/p&gt;
&lt;p&gt;I&#39;d really like to be a good writer though.  Writing will help me solidify more thoughts and create new ones.  Getting better at writing also helps with speaking, and in conjunction leadership.&lt;/p&gt;
&lt;p&gt;And there in lies a catch-22.  To become good at writing you have to write more and to some extend put yourself out there.  But until I&#39;m good at it I&#39;m inclined not to embarrass myself.  When starting this site I was so fearless in what and who I wrote about!  Then I had the advantage of no career, reputation, or really even any professional experience. Now I don&#39;t think I can or should do the same.&lt;/p&gt;
&lt;p&gt;Perhaps I&#39;ll find a middle ground and take a class on writing or just read (and write) more about it.  Maybe I just need better software...&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">The State of SQL Education</title>
            <author><name>dave</name></author>
            <link href="/things/sql-education"/>
            <updated>2013-07-16</updated>
            <published>2013-07-16</published>
            <id>/things/sql-education</id>
            
            <content type="html">
                             &lt;p&gt;This is an opinion piece I wrote on the sad state of &lt;a href=&#34;http://chartio.com/blog/2013/07/the-state-of-sql-education&#34;&gt;SQL Education&lt;/a&gt;.  I published it on the Chartio Blog.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Sock Bankruptcy</title>
            <author><name>dave</name></author>
            <link href="/things/sock-bankruptcy"/>
            <updated>2013-07-07</updated>
            <published>2013-07-07</published>
            <id>/things/sock-bankruptcy</id>
            
            <content type="html">
                             &lt;p&gt;Over the past several years my sock drawer had become a stuffed archive of non-matching singles.  I dislike throwing one sock away just because its pair got a hole.  My thought was that since the socks were bought in 6 packs eventually another single in a pair would fail and then it would again have a match!&lt;/p&gt;
&lt;p&gt;Its great logic, but in the long run it doesn&#39;t end up working out as I rarely buy the same 6 pack of socks again.  The net result after a few years is my stuffed drawer of singles and frequent comments from friends pointing out both the mismatches and my age.&lt;/p&gt;
&lt;p&gt;So a few weeks ago, off of the usually excellent advice of my friend and co-worker Justin Davis, I committed what he called sock bankruptcy.  I&#39;d thought about the idea before, and he&#39;d actually gone through with it and highly recommended it.&lt;/p&gt;
&lt;p&gt;The idea simply is to throw all of your socks away, and buy around $80 of new socks.  Another important aspect is that you buy those socks online and save that link for later.  I ended up going with &lt;a href=&#34;http://www.amazon.com/Hanes-Mens-Pack-Cushion-Black/dp/B001OAMTQI/?keywords=black+socks&amp;amp;qid=1368654625&amp;amp;ref=sr_1_1&amp;amp;ie=UTF8&amp;amp;sr=8-1&#34;&gt;this pair of Hanes socks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&#39;ve been quite happy with them and it seems like this sock should continue to be produced for quite a while.  I&#39;ve also been quite happy with not having to worry about pairing my socks after watching, nor walking around with mismatches.&lt;/p&gt;
&lt;p&gt;Justin and I are of course not the only ones who&#39;ve come up with or even named this brilliant idea.  There&#39;s already a website on it - &lt;a href=&#34;http://sockbankruptcy.com/&#34; title=&#34;Sock Bankruptcy&#34;&gt;sockbackruptcy.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also, there&#39;s an entire service designed to keep your essentials steadily stocked.  I haven&#39;t used them but I know a few people who really like it.  If interested checkout &lt;a href=&#34;http://www.manpacks.com/&#34;&gt;Manpacks&lt;/a&gt;&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Importing Excel into MySQL</title>
            <author><name>dave</name></author>
            <link href="/things/excel-to-mysql"/>
            <updated>2013-06-02</updated>
            <published>2013-06-02</published>
            <id>/things/excel-to-mysql</id>
            
            <content type="html">
                             &lt;p&gt;This is a nice tutorial I wrote on importing data from &lt;a href=&#34;https://chartio.com/education/databases/excel-to-mysql&#34;&gt;excel into a MySQL database&lt;/a&gt;.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Javascript Controlled Pin Button for Images and Videos</title>
            <author><name>dave</name></author>
            <link href="/things/pin-button"/>
            <updated>2013-05-29</updated>
            <published>2013-05-29</published>
            <id>/things/pin-button</id>
            
            <content type="html">
                             &lt;p&gt;My sister is making a great new site called &lt;a href=&#34;http://almostathirdgrader.com&#34; title=&#34;Almost A Third Grader&#34;&gt;Almost A Third Grader&lt;/a&gt; where during the summer she posts 3 videos a week for students between 2nd and 3rd grade to keep their skills fresh.&lt;/p&gt;
&lt;p&gt;She wants to share them on pinterest and make it easy for others to do the same by adding an embedded button to pin the videos.  Pinterest has a great &lt;a href=&#34;http://business.pinterest.com/widget-builder/#do_pin_it_button&#34;&gt;tool for manually creating the widgets&lt;/a&gt; but it was a bit unclear on how to do it programatically, and how to do it for video.&lt;/p&gt;
&lt;h2&gt;Pin Button for Images&lt;/h2&gt;
&lt;p&gt;For each Pin you need to get the pin&#39;s url, image, and description.  In the following code snippet I&#39;ve broken out each of those into seperate variables for ease of use.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/davefowler/5668507.js&#34;&gt;&lt;/script&gt;

&lt;h2&gt;Youtube Pins&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://www.almostathirdgrader.com/odd-and-even.html&#34;&gt;&lt;img src=&#34;/media/images/pin.png&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you&#39;re pinning YouTube videos things are slightly different.  You need to grab the YouTube video code from the video link and use that to grab the video&#39;s thumbnail from the YouTube API.  If the image you pin is from the YouTube API, Pinterest is smart enough to automatically make that pin a video share.  Basically you want to replace line 2 from the above code snippet with these lines.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/davefowler/5668548.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Note that this code assumes you&#39;re using the new YouTube embed format (with the path /embed/ in it&#39;s URL).  Use the commented out example in line 2 instead of 3 if you&#39;re using the old embed format.&lt;/p&gt;
&lt;h2&gt;Placing it in the Page&lt;/h2&gt;
&lt;p&gt;Finally you&#39;ll need to place the code held in the &lt;em&gt;button&lt;/em&gt; variable into the page somewhere.  If you&#39;re using jquery you can embed simply using&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&#39;#placeholder&#39;).append(button);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Where &lt;em&gt;#placeholder&lt;/em&gt; is the &lt;a href=&#34;http://api.jquery.com/selector/&#34;&gt;jquery selector&lt;/a&gt; for the dom node you&#39;d like to place the button in.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Cherry Picking With Mercurial</title>
            <author><name>dave</name></author>
            <link href="/things/cherry-picking-with-mercurial"/>
            <updated>2013-05-23</updated>
            <published>2013-05-23</published>
            <id>/things/cherry-picking-with-mercurial</id>
            
            <content type="html">
                             &lt;p&gt;Merging a full branch in mercurial is quite easy.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hg update &amp;lt;target branch name&amp;gt;
hg merge &amp;lt;merging branch name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But if you would like to just merge in a few of the revisions from a branch and not the whole thing you need to what is called cherry picking in git, but transplanting in mercurial.  Transplanting isn&#39;t a default action in mercurial, but the extension to enable it does come by default.  To enable the &lt;a href=&#34;http://mercurial.selenic.com/wiki/TransplantExtension&#34; title=&#34;Transplant Extensions&#34;&gt;transplant extension&lt;/a&gt; open your hg config file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;emacs .hg/hgrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And add the line &lt;em&gt;transplant=&lt;/em&gt; under your [extensions]&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[extensions]
transplant=
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now take a look at your logs to get the numbers for the revisions you&#39;d like to move.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hg log -b &amp;lt;merging branch name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Take note of which you&#39;d like to merge and run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hg update &amp;lt;target branch name&amp;gt;
hg transplant -b &amp;lt;merging branch name&amp;gt; &amp;lt;rev1&amp;gt; &amp;lt;rev2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As an example if we&#39;d like to merge revisions 1156, 1157 and 1162 from the &lt;em&gt;customers&lt;/em&gt; branch into &lt;em&gt;default&lt;/em&gt; we&#39;d use the following&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hg update default
hg transplant -b customers 1156 1157 1162
&lt;/code&gt;&lt;/pre&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">SQL Joins Explained</title>
            <author><name>dave</name></author>
            <link href="/things/sql-joins-explained"/>
            <updated>2013-05-12</updated>
            <published>2013-05-12</published>
            <id>/things/sql-joins-explained</id>
            
            <content type="html">
                             &lt;p&gt;This is a piece about my experience with &lt;a href=&#34;http://chartio.com/blog/2013/04/10-reasons-to-not-build-your-own-dashboard&#34;&gt;companies building dashboards themselves&lt;/a&gt;.  I published it on the Chartio Blog.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Directory String Replace</title>
            <author><name>dave</name></author>
            <link href="/things/directory-replace"/>
            <updated>2013-04-19</updated>
            <published>2013-04-19</published>
            <id>/things/directory-replace</id>
            
            <content type="html">
                             &lt;p&gt;Yesterday I discovered that many of the old posts on the &lt;a href=&#34;http://chartio.com/blog/&#34;&gt;Chartio Blog&lt;/a&gt; used odd unicode versions of quotes that were being rendered terribly.  So I needed to do a find-replace for an entire directory.&lt;/p&gt;
&lt;p&gt;The tool for doing so is the &lt;em&gt;sed&lt;/em&gt; command line utility, and not using it has a &lt;a href=&#34;http://harthur.wordpress.com/2013/01/24/771/&#34;&gt;history of getting you ridiculed.&lt;/a&gt;  After over an hour of reading &lt;a href=&#34;http://unixhelp.ed.ac.uk/CGI/man-cgi?sed&#34; title=&#34;SED man pages&#34;&gt;man pages&lt;/a&gt; and online examples I discovered that I really hate sed.  I asked around about other&#39;s experiences and it everyone that I talked to who had tried it has their own horror stories to go along with it.&lt;/p&gt;
&lt;p&gt;Its probably a great tool, and I&#39;m probably just too dumb to make it work for me and my odd unicode quote replacement job, but I ended up just writing/&lt;a href=&#34;http://stackoverflow.com/questions/4205854/python-way-to-recursively-find-and-replace-string-in-text-files&#34; title=&#34;Replace String in Driectory Script&#34;&gt;modifying&lt;/a&gt; a simple python script to do string replacing on a directory level.  Its not a command line tool, or replacement for SED.  Just a script that I found useful and am sharing for others that may as well.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/davefowler/5422045.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;It takes 4 parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;directory&lt;/strong&gt; - the root directory to do the string replace in&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;find&lt;/strong&gt; - the string that you would like to find&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rep&lt;/strong&gt; - the string that you would like to replace the found string with&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;filePattern&lt;/strong&gt; - a pattern to match the files you would like searched (eg. &#39;*.html&#39; or &#39;*.py&#39;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following example will replace all instances of the word &lt;em&gt;&#34;old&#34;&lt;/em&gt; with &lt;em&gt;&#34;new&#34;&lt;/em&gt; in files ending in &lt;em&gt;&#34;.html&#34;&lt;/em&gt; located in the &lt;em&gt;~/some/directory/&lt;/em&gt; directory&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;findReplace(&#39;~/some/directory/&#39;, &#34;old&#34;, &#34;new&#34;, &#39;*.html&#39;)
&lt;/code&gt;&lt;/pre&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">10 Reasons Not To Build Your Own Dashboards From Scratch</title>
            <author><name>dave</name></author>
            <link href="/things/10-reasons-to-not-build-your-own-dashboard"/>
            <updated>2013-04-16</updated>
            <published>2013-04-16</published>
            <id>/things/10-reasons-to-not-build-your-own-dashboard</id>
            
            <content type="html">
                             &lt;p&gt;This is a piece about my experience with &lt;a href=&#34;http://chartio.com/blog/2013/04/10-reasons-to-not-build-your-own-dashboard&#34;&gt;companies building dashboards themselves&lt;/a&gt;.  I published it on the Chartio Blog.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">You and Your Startup</title>
            <author><name>dave</name></author>
            <link href="/things/you-and-your-startup"/>
            <updated>2013-04-09</updated>
            <published>2013-04-09</published>
            <id>/things/you-and-your-startup</id>
            
            <content type="html">
                             &lt;p&gt;I just watched the following fantastic video entitled &lt;em&gt;You and Your Research&lt;/em&gt; by the famous Dr Richard Hamming.  If you prefer reading you can instead get the &lt;a href=&#34;http://www.cs.virginia.edu/~robins/YouAndYourResearch.html&#34; title=&#34;You and Your Research&#34;&gt;full text here&lt;/a&gt;.&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;http://www.youtube.com/embed/a1zDuOPkMSw&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;I found it incredibly applicable to life in startups.  To accomplish greatness you have to observe and question greatness around you.  Surround yourself with incredibly smart people and learn from them.  He promotes an incredible amount of relflection and self awareness during a constant pursuit of greatness.  A few highlights:&lt;/p&gt;
&lt;p&gt;summary:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When I came to Bell Labs, I came into a very productive department. Bode was the department head at the time; Shannon was there, and there were other people. I continued examining the questions, &#34;Why?&#34; and &#34;What is the difference?&#34; I continued subsequently by reading biographies, autobiographies, asking people questions such as: &#34;How did you come to do this?&#34; I tried to find out what are the differences. And that&#39;s what this talk is about.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;on courage:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the characteristics of successful scientists is having courage. Once you get your courage up and believe that you can do important problems, then you can. If you think you can&#39;t, almost surely you are not going to.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;on drive:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now for the matter of drive. You observe that most great scientists have tremendous drive. I worked for ten years with John Tukey at Bell Labs. He had tremendous drive. One day about three or four years after I joined, I discovered that John Tukey was slightly younger than I was. John was a genius and I clearly was not. Well I went storming into Bode&#39;s office and said, &#34;How can anybody my age know as much as John Tukey does?&#34; He leaned back in his chair, put his hands behind his head, grinned slightly, and said, &#34;You would be surprised Hamming, how much you would know if you worked as hard as he did that many years.&#34; I simply slunk out of the office!&lt;/p&gt;
&lt;/blockquote&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">exitwp: Wordpress Export Script for Hyde</title>
            <author><name>dave</name></author>
            <link href="/things/exitwp"/>
            <updated>2013-03-30</updated>
            <published>2013-03-30</published>
            <id>/things/exitwp</id>
            
            <content type="html">
                             &lt;p&gt;There&#39;s a nice &lt;a href=&#34;https://github.com/thomasf/exitwp&#34;&gt;wordpress export script for Jeckyll&lt;/a&gt; on github.  I &lt;a href=&#34;https://github.com/davefowler/thingsilearned&#34;&gt;forked it&lt;/a&gt; and made it work for &lt;a href=&#34;https://github.com/hyde/hyde&#34;&gt;Hyde&lt;/a&gt; which is quite a similar format.  I made a few other changes based on these requirements I had&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Maintain the url structure of /YYYY/MM/DD/post-slug/&lt;/li&gt;
&lt;li&gt;Clean up a bunch of odd characters&lt;/li&gt;
&lt;li&gt;Maintain code highlighting&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unfortunately many of the code sections didn&#39;t work out, but almost everything else did.  I didn&#39;t actually have to change a lot to get it working.  If interested you can checkout the &lt;a href=&#34;https://github.com/davefowler/exitwp/commit/95584798feb2a2ef09e86817584754c9059d6616&#34;&gt;diff on github.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here are a few downsides of the script&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I couldn&#39;t export dates in the !!timestamp &#34;YYYY-MM-DD HH:MM:SS&#34; format that Hyde likes due to the yaml library used.&lt;/li&gt;
&lt;li&gt;I&#39;ve still been unable to get the wordpress comments imported into Livefyre or Disqus&lt;/li&gt;
&lt;li&gt;I wasn&#39;t able to get everything working with syntax highlighting&lt;/li&gt;
&lt;/ul&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Statically Generated</title>
            <author><name>dave</name></author>
            <link href="/things/static-site"/>
            <updated>2013-03-29</updated>
            <published>2013-03-29</published>
            <id>/things/static-site</id>
            
            <content type="html">
                             &lt;p&gt;I&#39;ve long wanted to move my blog from wordpress, and have been really into static site generators lately, and after trying several of them out and not having a lot of luck with the wordpress export tools provided by each I finally waited long enough that most of my blog content is so irrelevant that it doesn&#39;t matter anyway!&lt;/p&gt;
&lt;h2&gt;Explain...&lt;/h2&gt;
&lt;p&gt;For those who don&#39;t know, a static site generator is a bit of a different type of blogging system that programatically generates a copy of every page that the site will ever need to render ahead of time.  The advantage is spead and some simplicity.&lt;/p&gt;
&lt;p&gt;For example, when visitng a typical blog, such as wordpress, the server must make a few queries to a database to collect the information about the author, blog content, and whatever else is needed in order to return the HTML necessary.  Its bascially rendering the page for every visit to the website.&lt;/p&gt;
&lt;p&gt;For content that doesn&#39;t change based on who&#39;s viewing it that process doesn&#39;t actually make a lot of sense.  If there are a lot of people viewing the exact same content, the same queries are run, and the same content is mashed into the same HTML that&#39;s returned over and over again with each view.  A static site generator simply up front renders all possible pages and saves the html result.  Then when viewers come in, the flat HTML file is simply served up as a result.  Its much faster and much less server intensive!&lt;/p&gt;
&lt;h2&gt;Hyde&lt;/h2&gt;
&lt;p&gt;There are a number of static site generators out there.  This &lt;a href=&#34;https://news.ycombinator.com/item?id=4857473&#34; title=&#34;Popular static site generators.&#34;&gt;Hacker News Poll&lt;/a&gt; lists many of them and gives you a good indication of how popular they are.  I ended up choosing &lt;a href=&#34;https://github.com/hyde/hyde&#34;&gt;Hyde&lt;/a&gt; as its what I used to create the &lt;a href=&#34;http://chartio.com&#34; title=&#34;Data Interface&#34;&gt;Chartio&lt;/a&gt; content pages as it was the most popular python generator last year when I did that work.  It unfortunately has very little documentation, and hasn&#39;t been improved in over two years so I have a tough time recomending it to anyone right now.&lt;/p&gt;
&lt;p&gt;Its still really great, and if you want to clone this site and morph it to your own will, you can &lt;a href=&#34;https://github.com/davefowler/thingsilearned&#34;&gt;get the source&lt;/a&gt; any time.  If interested also be sure to take a look at this list of other &lt;a href=&#34;https://github.com/hyde/hyde/wiki/Hyde-Powered&#34; title=&#34;Sites powered by Hyde&#34;&gt;Hyde powered sites&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Exporting from Wordpress&lt;/h2&gt;
&lt;p&gt;The most popular Ruby static site generator is called Jekyll, and there&#39;s a nice &lt;a href=&#34;https://github.com/thomasf/exitwp&#34;&gt;python based Wordpress Exporter&lt;/a&gt; for it.  I made &lt;a href=&#34;https://github.com/davefowler/exitwp&#34;&gt;my own fork&lt;/a&gt; to port things to the Hyde format, and to maintain the URL structure of my previous posts.  This blog still gets a few hundred hits a day and I didn&#39;t feel like starting from scratch.  Unfortunately neither Livefyre or Disqus imported the wordpress.com comments properly and I had to drop all comments completely.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Blending, Formulas, Services and Funding</title>
            <author><name>dave</name></author>
            <link href="/things/blending-formulas"/>
            <updated>2013-01-22</updated>
            <published>2013-01-22</published>
            <id>/things/blending-formulas</id>
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">Chess in Javascript</title>
            <author><name>dave</name></author>
            <link href="/2012/11/22/javascript-chess-game/"/>
            <updated>2012-11-22</updated>
            <published>2012-11-22</published>
            <id>/2012/11/22/javascript-chess-game/</id>
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">Chess in Javascript</title>
            <author><name>dave</name></author>
            <link href="/projects/javascript-chess"/>
            <updated>2012-11-22</updated>
            <published>2012-11-22</published>
            <id>/projects/javascript-chess</id>
            
            <content type="html">
                             &lt;p&gt;The Chartio team has grown now and several months ago I had to stop coding completely and focus on CEO tasks. I&#39;ve missed programming a lot, and tonight, the night before Thanksgiving and one of the first breaks I&#39;ve gotten, I created a little javascript chess game and AI.&lt;/p&gt;
&lt;p&gt;If you&#39;re interested you can &lt;a href=&#34;/projects/chess/&#34;&gt;play the game here&lt;/a&gt; or checkout the &lt;a href=&#34;https://github.com/davefowler/chess&#34;&gt;source code here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I utilized &lt;a href=&#34;https://github.com/jhlywa/chess.js&#34;&gt;jhlywa&#39;s helpful chess.js library&lt;/a&gt; for some of the move intelligence and game status storage. It relies on the &lt;a href=&#34;http://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation&#34;&gt;Forsyth-Edwards Notation (FEN)&lt;/a&gt; and I found it quite simple to use. It has an odd implementation of an object constructor so extending the class was difficult, but typically only one instance of the chess object is used anyway so I just kept it simple and appended a few functions on to the instance for now.&lt;/p&gt;
&lt;p&gt;The chess.js files come with an ASCII output but no html interface. It was fairly quick to use the &lt;a href=&#34;http://en.wikipedia.org/wiki/Chess_symbols_in_Unicode&#34;&gt;chess unicode characters&lt;/a&gt; and the drag and drop from &lt;a href=&#34;http://jqueryui.com/droppable/&#34;&gt;jQuery-UI&lt;/a&gt; to make up a classic looking board and drag controls. Most of that code can be found in &lt;a href=&#34;https://github.com/davefowler/chess/blob/master/game.js&#34;&gt;game.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lastly, it wasn&#39;t fun at all to play myself so I made my first attempt in many years at writing an AI. I used an alpha beta search which is effectively a minmax algorithm with a few shortcuts. In theory the AI should work pretty well. In practice however its quite dumb. There are two main reasons&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;game status and potential moves are stored as strings&lt;/li&gt;
&lt;li&gt;I have no openers stored in memory&lt;/li&gt;
&lt;li&gt;the board score is only based on the pieces that remain&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To fix those I would have to write my own Bit based chart engine.  Right now the string based chart.js library can only search a depth of 2 before the wait time starts to get really annoying.  That&#39;s pretty bad. I read that typically a depth of 6 or 7 is desired for intelligent mid-game play. Many AI implementations also have some openers stored in memory. Mine does not and so it pretty much sabotages its game right away by continually choosing its first move (pushing the first pawn) until the game starts to get more interesting.&lt;/p&gt;
&lt;p&gt;Anyway, it was fun to get back into coding with a small project.  Especially one that I can play and share with others.  The code is free as in beer, but if you do anything with it please let me know as I&#39;d love to check it out!&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Lets Talk Your Data, Not Big Data</title>
            <author><name>dave</name></author>
            <link href="/essays/lets-talk-data-not-big-data"/>
            <updated>2012-11-14</updated>
            <published>2012-11-14</published>
            <id>/essays/lets-talk-data-not-big-data</id>
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">MailGun as an SMTP Server for Django Apps</title>
            <author><name>dave</name></author>
            <link href="/2011/06/07/mailgun-as-an-smtp-server-for-django-apps/"/>
            <updated>2011-06-07</updated>
            <published>2011-06-07</published>
            <id>/2011/06/07/mailgun-as-an-smtp-server-for-django-apps/</id>
            
            <content type="html">
                             &lt;p&gt;Gmail is a frequently used SMTP host for Django apps.  Its free and relatively simple to setup which is ideal for small apps.  There are a few significant downfalls. First, its limited to 500 emails a day with no option to upgrade.  Second, it limits and even re-writes all outgoing emails to the username of the connector.&lt;/p&gt;
&lt;p&gt;For example if you&#39;re trying to send an email from welcome@yourhost.com or support@yourhost.com you&#39;re out of luck because all of those emails will actually get sent at dave@yourhost.com or whatever email account you have configured. I&#39;m sure this saves millions of people from millions of spam but it adds a bit of annoyance to developer&#39;s lives.&lt;/p&gt;
&lt;p&gt;The recently launched &lt;a href=&#34;http://mailgun.net&#34;&gt;MailGun&lt;/a&gt;offers a great solution.  Its free for up to 200 emails per day and super cheap and dramatically scalable after that.  It also works as a drop in replacement for whatever service you were using for your django smtp server.  Changing will take you less time than reading this article.&lt;/p&gt;
&lt;h3&gt;The Steps:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://mailgun.net/&#34;&gt;Sign up for MailGun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Go to the &lt;a href=&#34;https://mailgun.net/cp&#34;&gt;control panel&lt;/a&gt; and click on the YOURHOST.mailgun.org server created for you.
&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2011/06/screen-shot-2011-06-07-at-1-32-03-am.png&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;http://thingsilearned.files.wordpress.com/2011/06/screen-shot-2011-06-07-at-1-32-03-am.png&#34; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;In the upper right you will find your &#34;SMTP Authentication&#34; credentials for this server.
&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2011/06/screen-shot-2011-06-07-at-1-33-38-am2.png&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;http://thingsilearned.files.wordpress.com/2011/06/screen-shot-2011-06-07-at-1-33-38-am2.png&#34; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the settings.py in your django app and configure your email with the given credentials.  It should look something like this.
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nv&#34;&gt;EMAIL_USE_TLS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; True&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nv&#34;&gt;EMAIL_HOST&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;smtp.mailgun.org&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nv&#34;&gt;EMAIL_HOST_USER&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;postmaster@YOURHOST.mailgun.org&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nv&#34;&gt;EMAIL_HOST_PASSWORD&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;SOMEPASSWORD&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nv&#34;&gt;EMAIL_PORT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 587&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Bash&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test it out!
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;./manage.py shell&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; from django.core.mail import send_mail&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; send_mail&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;MailGun works great!&amp;#39;&lt;/span&gt;, &lt;span class=&#34;s1&#34;&gt;&amp;#39;It really really does.&amp;#39;&lt;/span&gt;, &lt;span class=&#34;s1&#34;&gt;&amp;#39;tester@YOURHOST.com&amp;#39;&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;YOUREMAIL@gmail.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;fail_silently&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;False&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Bash&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">The PickledObjectField for Object Storage in Django</title>
            <author><name>dave</name></author>
            <link href="/2011/01/05/the-pickledobjectfield-for-object-storage-in-django/"/>
            <updated>2011-01-05</updated>
            <published>2011-01-05</published>
            <id>/2011/01/05/the-pickledobjectfield-for-object-storage-in-django/</id>
                        <category   scheme="/blog/tags/"
                        term="databases"
                        label="Databases" />
                        <category   scheme="/blog/tags/"
                        term="django"
                        label="Django" />
            
            <content type="html">
                             &lt;p&gt;I&#39;ve become a really big fan of the PickledObjectField provided by this &lt;a href=&#34;http://djangosnippets.org/snippets/1694/&#34;&gt;django snippet&lt;/a&gt;.  So much so that I use it in almost every django model I create these days.&lt;/p&gt;
&lt;p&gt;Basically it serves as the best way to do an object store in your database and perfectly translates in any JSON conversion.  Its an essential tool in any javascript heavy application.&lt;/p&gt;
&lt;p&gt;In my current project, Chart.io we&#39;re aspiring to be &lt;a href=&#34;http://chart.io&#34;&gt;google analytics for your database&lt;/a&gt;.  We&#39;re basically creating a system that will handle all of your dashboard/analytics needs in the easiest way possible.  This means that we have a LOT of different charts and more in the making.&lt;/p&gt;
&lt;p&gt;Its not feasible to put all of those extra parameters that each chart type requires into the model as different columns.  We would end up with an incredible mess in short order.  So I instead create a PickledObjectField called &#39;params&#39; in the model.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class Chart(models.Model):
    ...
    params = PickledObjectField(default={&#39;just&#39;: &#39;some&#39;, &#39;default&#39;: &#39;parameters&#39;} )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The params variable then takes most any dictionary of parameters and automatically converts it to string to be stored in the database.&lt;/p&gt;
&lt;p&gt;The following command for example will save a params value of something like &#34;KGRwMQpWa2V......&#34; to the database, but you can still use it just like any dict object.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; chart = Chart(params = {&#34;type&#34;: &#34;scatter&#34;, &#34;dot_size&#34;:, 4, &#34;color_list&#34;: [&#34;red&#34;, &#34;green&#34;, &#34;orange&#34;], });
&amp;gt;&amp;gt;&amp;gt; chart.save()
&amp;gt;&amp;gt;&amp;gt; chart.parms
{&#34;type&#34;: &#34;scatter&#34;, &#34;dot_size&#34;:, 4, &#34;color_list&#34;: [&#34;red&#34;, &#34;green&#34;, &#34;orange&#34;], }
#You can also treat the field just like a dict
&amp;gt;&amp;gt;&amp;gt; chart.parms[&#39;awesome&#39;] = &#39;for sure&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Its worth noting that there is a similar snippet to this that uses JSON object to string conversion instead of Pickle.  I find that when using Javascript so heavily its easier to use some other string conversion so as not to get confused and I&#39;ve been really impressed with the way that this particular snippet works.&lt;/p&gt;
&lt;p&gt;Its incredibly rare that a django snippet becomes such a major tool.  With the exception of my &lt;a href=&#34;http://thingsilearned.com/2009/01/05/using-subdomains-in-django/&#34;&gt;subdomain middleware&lt;/a&gt;, I can&#39;t think of another snippet that I use more regularly which leads me to think that it should really get moved into the core fields that django provides.  Object store is essential element to many applications and the PickledObjectField is the best way to do it.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">On Productivity, Organization and Tools</title>
            <author><name>dave</name></author>
            <link href="/2010/12/01/on-productivity-organization-and-tools/"/>
            <updated>2010-12-01</updated>
            <published>2010-12-01</published>
            <id>/2010/12/01/on-productivity-organization-and-tools/</id>
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;I&#39;ve been a fanatic about finding the best ways to organize my life and stay &#34;on top of things&#34;.  There are a million articles online on how to go about this. I&#39;ve read my fare share of these and tried a lot of the methods out.  Usually something ends up working decent for a while and then I either burn out or lose discipline in it.  So I pick up some other method or just deal with a more chaotic productivity schedule.&lt;/p&gt;
&lt;p&gt;I never get too disappointed when one doesn&#39;t work out as usually said method was proposed by some blogger who seemed to only have recently (and likely temporarily) gotten their shit together and decided to tell the world about it.  So there wasn&#39;t too much of an expectation going in, but its often a bit frustrating to me to have the advice and tips given out so confidently.&lt;/p&gt;
&lt;p&gt;The articles are usually written in a way that makes their method sound like the writer has been practicing this for years and achieved great success/peace with the workflow they deal with.  But I have never met a person who has found such success.&lt;/p&gt;
&lt;p&gt;There are a thousand different TODO apps on the web and for download.  Each one will tell you that their tool is the best to keep organized and productive.  There are even more authors and bloggers.&lt;/p&gt;
&lt;p&gt;In the end nothing has worked near as well for me as a blank notebook and a pen.  Sometimes a planner helps when my days are more about scheduled meetings and less about development time, but planners are just paper with a different set of lines.&lt;/p&gt;
&lt;p&gt;So I guess the thing that I learned hear is that keeping organized and on top of things is a constant struggle and there&#39;s no perfect fix for it.  Its just the nature of the game, and if you accept that it takes time and some effort then the whole process becomes a lot less frustrating and a lot less time is wasted trying out so many different tools.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Dynamically Calling Fancybox from Javascript</title>
            <author><name>dave</name></author>
            <link href="/2010/01/27/dynamically-calling-fancybox-from-javascript/"/>
            <updated>2010-01-27</updated>
            <published>2010-01-27</published>
            <id>/2010/01/27/dynamically-calling-fancybox-from-javascript/</id>
                        <category   scheme="/blog/tags/"
                        term="javascript"
                        label="Javascript" />
                        <category   scheme="/blog/tags/"
                        term="jQuery"
                        label="Jquery" />
            
            <content type="html">
                             &lt;p&gt;&lt;a href=&#34;http://fancybox.net&#34;&gt;Fancybox&lt;/a&gt; is a really nice jQuery library for creating lightboxes.  There are a few simple &lt;a href=&#34;http://fancybox.net/example&#34;&gt;examples&lt;/a&gt; and some &lt;a href=&#34;http://fancybox.net/howto&#34;&gt;documentation&lt;/a&gt; on their site but there seems to be no demonstrated method for loading a fancybox dynamically with javascript.  All of their examples require you to embed a link to the lightbox content somewhere in the page source.&lt;/p&gt;
&lt;p&gt;The following hack, mostly taken from the method described &lt;a href=&#34;http://outburst.jloop.com/2009/08/06/call-fancybox-from-flash/&#34;&gt;here&lt;/a&gt;, allows you to dynamically any web page into a fancybox straight from javascript.&lt;/p&gt;
&lt;p&gt;I&#39;ve documented the following example which should be fairly straight forward.  Basically it embeds a hidden link, that&#39;s controlled by the callFancyBox function.  Make sure you have the right things included and you can simply call&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nx&#34;&gt;callFancyBox&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;your&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;iframed&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;JavaScript&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--- These are the scripts and styles needed for fancybox to work ---&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://qwisk.com/sbmedia/scripts/libraries/jquery-1.3.2-mod.js&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://qwisk.com/sbmedia/scripts/libraries/jquery.fancybox-1.2.6.js&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://qwisk.com/sbmedia/css/jquery.fancybox-1.2.6.css&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;media=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;all&amp;quot;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-8&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-11&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt; Fancybox Test&lt;span class=&#34;nt&#34;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-13&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-14&#34;&gt;&lt;/a&gt;A fancybox will load in 3 seconds&lt;br /&gt;&lt;a name=&#34;line-15&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--- Currently fancybox only works on links in your page.  This div hides a link, who&amp;#39;s href we change dynamically ---&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;hidden_clicker&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;display:none&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;hiddenclicker&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://asdf.com&amp;quot;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;Hidden Clicker&lt;span class=&#34;nt&#34;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-20&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-21&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-22&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-23&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// Register all links with-flash as fancybox&amp;#39;s&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-25&#34;&gt;&lt;/a&gt; &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;a.overlay-flash&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fancybox&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-26&#34;&gt;&lt;/a&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;padding&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-27&#34;&gt;&lt;/a&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;zoomOpacity&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-28&#34;&gt;&lt;/a&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;zoomSpeedIn&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-29&#34;&gt;&lt;/a&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;zoomSpeedOut&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-30&#34;&gt;&lt;/a&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;overlayOpacity&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.75&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-31&#34;&gt;&lt;/a&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;frameWidth&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;530&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-32&#34;&gt;&lt;/a&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;frameHeight&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-33&#34;&gt;&lt;/a&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;hideOnContentClick&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-34&#34;&gt;&lt;/a&gt; &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-36&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-37&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// This function allows you to call the fancy box from javascript&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// origional source: http://outburst.jloop.com/2009/08/06/call-fancybox-from-flash/&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-39&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;callBoxFancy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;my_href&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-40&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;j1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;hiddenclicker&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-41&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nx&#34;&gt;j1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;href&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;my_href&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-42&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;#hiddenclicker&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;trigger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-44&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c1&#34;&gt;// Call the Fancy Box 3 seconds after the page loads&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-47&#34;&gt;&lt;/a&gt; &lt;span class=&#34;nb&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setTimeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;callFancyBox(&amp;#39;http://google.com&amp;#39;);&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-48&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-49&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-50&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-51&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-52&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;HTML&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">When Can I Stop Saving for Retirement?</title>
            <author><name>dave</name></author>
            <link href="/2010/01/11/when-can-i-stop-saving-for-retirement/"/>
            <updated>2010-01-11</updated>
            <published>2010-01-11</published>
            <id>/2010/01/11/when-can-i-stop-saving-for-retirement/</id>
                        <category   scheme="/blog/tags/"
                        term="finance"
                        label="Finance" />
                        <category   scheme="/blog/tags/"
                        term="life"
                        label="Life" />
            
            <content type="html">
                             &lt;p&gt;I learned some interesting things about financing retirement yesterday.&lt;/p&gt;
&lt;p&gt;I&#39;ve been reading a financial book a friend recommended to me preaching the common methods on &#34;how to get rich the safe way&#34; through managing your 401(k) and IRA&#39;s and such.  It&#39;s somewhat helpful in recommending what banks to use and laying out all of the details of each of the methods of saving and recommending a path.&lt;/p&gt;
&lt;p&gt;At the beginning of the book there&#39;s this table similar to many others I&#39;ve seen.  It looks like this:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Smart Sally&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dumb Dan&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When beginning to invest the person is&lt;/p&gt;
&lt;p&gt;25 years old&lt;/p&gt;
&lt;p&gt;35 years old&lt;/p&gt;
&lt;p&gt;Each person invests $100 for...&lt;/p&gt;
&lt;p&gt;10 years&lt;/p&gt;
&lt;p&gt;30 years&lt;/p&gt;
&lt;p&gt;At 8% interest at 65 they have&lt;/p&gt;
&lt;p&gt;$200,061&lt;/p&gt;
&lt;p&gt;$149,036&lt;/p&gt;
&lt;p&gt;The basic gist is, starting young is incredibly beneficial.  If the goal was to get to 200k Smart Sally could just stop saving for retirement at the age of 35 where Dumb Dan, at the same rate spent 30 years trying to make it and never did.&lt;/p&gt;
&lt;h3&gt;When can I be done?&lt;/h3&gt;
&lt;p&gt;Which got me thinking: what would I have to do to one day just be done saving for retirement?  I wrote a script to determine just that.  It ignores a few minor details which are probably negligible anyway when compared to the error margins in the assumption of inflation and assumed investment return, but gives good ballpark results.&lt;/p&gt;
&lt;p&gt;I assume I&#39;d like to retire on an income of today&#39;s equivalent of 50k after tax which is completely generated by the interest earned on my retirement savings.  I assume I can maintain an 8% average earnings and account for a 3% inflation rate.&lt;/p&gt;
&lt;p&gt;Without Further delays, here are the results.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Welcome to the Reverse Financial Calculator!

$50,000.00/year is $158,351.35/year when you are 65 assuming 3% inflation
To make that much money from an 8.00% interest you need $1,979,391.86

You can stop saving up if you reach a total savings of one of the
values in the STOP AT at the corresponding AGE.  If you want to hit
that goal starting from 0 you need to START PAYING the listed value per year.

AGE     STOP AT       START PAYING
26       $98,402.32  $98,402.32/year
27      $106,274.50  $51,093.51/year
28      $114,776.46  $35,355.00/year
29      $123,958.58  $27,508.99/year
30      $133,875.26  $22,819.90/year
31      $144,585.28  $19,709.20/year
32      $156,152.11  $17,500.34/year
33      $168,644.28  $15,855.05/year
34      $182,135.82  $14,585.38/year
35      $196,706.68  $13,578.56/year
36      $212,443.22  $12,762.81/year
37      $229,438.68  $12,090.27/year
38      $247,793.77  $11,527.81/year
39      $267,617.27  $11,051.75/year
40      $289,026.65  $10,644.72/year
41      $312,148.79  $10,293.69/year
42      $337,120.69  $9,988.69/year
43      $364,090.34  $9,721.98/year
44      $393,217.57  $9,487.41/year
45      $424,674.98  $9,280.09/year
46      $458,648.97  $9,096.04/year
47      $495,340.89  $8,932.02/year
48      $534,968.16  $8,785.34/year
49      $577,765.62  $8,653.75/year
50      $623,986.87  $8,535.38/year
51      $673,905.82  $8,428.63/year
52      $727,818.28  $8,332.13/year
53      $786,043.74  $8,244.74/year
54      $848,927.24  $8,165.44/year
55      $916,841.42  $8,093.36/year
56      $990,188.74  $8,027.74/year
57     $1,069,403.83  $7,967.93/year
58     $1,154,956.14  $7,913.33/year
59     $1,247,352.63  $7,863.45/year
60     $1,347,140.84  $7,817.81/year
61     $1,454,912.11  $7,776.03/year
62     $1,571,305.08  $7,737.74/year
63     $1,697,009.49  $7,702.62/year
64     $1,832,770.24  $7,670.38/year
65     $1,979,391.86  $7,640.77/year
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pretty cool right?  The results say that if I pay about 20k a year I can stop putting money away for retirement in just 6 years, making my last payment when I&#39;m 31.&lt;/p&gt;
&lt;h3&gt;When to Start&lt;/h3&gt;
&lt;p&gt;I also was interested in seeing what it would take to do that same 6 year goal if I put off starting the plan.    You can see from the following results that putting it off does have significant cost to it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;START      STOP    PAYMENTS
26           31    $19,709.20/year
27           32    $20,665.96/year
28           33    $21,669.16/year
29           34    $22,721.06/year
30           36    $23,824.02/year
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So the plan would cost about 1k more per year for every year I put it off.  That&#39;s a lot, but it doesn&#39;t necessarily mean you should put everything aside and go out and start saving ASAP.  As long as whatever you&#39;re doing, that&#39;s not allowing you to put significant money away is increasing your probable future income by atleast 3k (post tax) per year you should be in good shape.&lt;/p&gt;
&lt;p&gt;People who work towards a PhD or an for example MD are not able to save much but will be able to handle that extra 4k/year easily once they&#39;ve got a much higher paying job (schooling aside).&lt;/p&gt;
&lt;p&gt;Anyone interested in trying it out themselves or modifying the results slightly can &lt;a href=&#34;http://noext.com/files/calculator.py&#34;&gt;grab the source here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Fun Fact:&lt;/strong&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If your parents had gone cheap with your baby clothes, crib and stroller and instead put 10k a year away from the day you were born, you&#39;d be set for retiring at 65 on just your 2nd birthday!&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AGE    STOP AT
0       $28,691.65  $28,691.65/year
1       $30,986.98  $14,897.59/year
2       $33,465.94  $10,308.63/year
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Update Jan 1, 2014:&lt;/h3&gt;
&lt;p&gt;Some friends of mine have started a company that &lt;a href=&#34;http://futureadvisor.com&#34; title=&#34;Optimize for Retirement&#34;&gt;manages your retirement plan&lt;/a&gt;.  They&#39;re brillint guys who have created a fantastic interface and intelligent algorithms.  If you&#39;re interested in optimizing your retirement check out &lt;a href=&#34;http://futureadvisor.com&#34; title=&#34;Optimize for Retirement&#34;&gt;FutureAdvisor&lt;/a&gt;.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Comparing Github and BitBucket</title>
            <author><name>dave</name></author>
            <link href="/2010/01/07/github-and-bitbucket/"/>
            <updated>2010-01-07</updated>
            <published>2010-01-07</published>
            <id>/2010/01/07/github-and-bitbucket/</id>
                        <category   scheme="/blog/tags/"
                        term="revision control"
                        label="Revision Control" />
            
            <content type="html">
                             &lt;p&gt;There are a lot of advantages to using a distributed revision control system as opposed to centralized.  There are also some down sides, mostly in that it can be a bit more confusing to manage.  A centralized web interface however seems to solve that problem quite nicely.&lt;/p&gt;
&lt;p&gt;Currently there are two major competitors in that space, &lt;a href=&#34;http://github.com&#34;&gt;Github&lt;/a&gt; and &lt;a href=&#34;http://bitbucket.org/&#34;&gt;Bitbucket&lt;/a&gt;, that manage Git and Mercurial repositories respectively.  I&#39;ve used Github for a while and recently have really started using Bitbucket and I thought I&#39;d share some thoughts and comparisons of the two.  There are a lot of blogs that &lt;a href=&#34;http://importantshock.wordpress.com/2008/08/07/git-vs-mercurial/&#34;&gt;compare Git and Mercurial&lt;/a&gt;, but this is not one of those blogs.  I personally have a preference for mercurial, but for admittedly stupid reasons like it was written in python and the syntax more closely resembles SVN which I&#39;ve become used to.  To me, a major differentiator in choosing one over the other is the interface or &#39;hub&#39; that manages it.&lt;/p&gt;
&lt;p&gt;Below is my item by item lineup showing the differences between GitHub and Bitbucket&lt;/p&gt;
&lt;p&gt;GitHub
BitBucket&lt;/p&gt;
&lt;p&gt;pull requests&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;forking&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;command instructions&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;distributed revision control&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;network graph&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;no&lt;/p&gt;
&lt;p&gt;inline editing&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;no&lt;/p&gt;
&lt;p&gt;developer profiles&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;wiki&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;issues&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;rss feeds&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;source browser&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;yes&lt;/p&gt;
&lt;p&gt;monthly price&lt;/p&gt;
&lt;p&gt;cheap&lt;/p&gt;
&lt;p&gt;cheaper&lt;/p&gt;
&lt;p&gt;free private projects&lt;/p&gt;
&lt;p&gt;0&lt;/p&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;h1&gt;of users&lt;/h1&gt;
&lt;p&gt;lots&lt;/p&gt;
&lt;p&gt;not lots&lt;/p&gt;
&lt;p&gt;happy hours&lt;/p&gt;
&lt;p&gt;in SF&lt;/p&gt;
&lt;p&gt;no&lt;/p&gt;
&lt;p&gt;There really aren&#39;t a lot of differences.  Personally, I actively use both.  Learning both is easy as the syntax difference between the two revision control systems is minimal and both hub interfaces are very similar.&lt;/p&gt;
&lt;p&gt;I use git for open projects like &lt;a href=&#34;http://github.com/godavemon/TwitTornado&#34;&gt;TwitTornado&lt;/a&gt; where privacy is not an issue and where I&#39;d like to get more developers involved. Its really got a fantastic social network of hackers.&lt;/p&gt;
&lt;p&gt;I use bitbucket for my private repositories as it allows 1 free private repository (per user) and has cheaper monthly rates.&lt;/p&gt;
&lt;p&gt;I hope this helps others make a decision between the two and try both of them out.  Let me know in the comments if I&#39;ve left any parameters out of the table above and I&#39;ll add them in.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Initialize Django Tests</title>
            <author><name>dave</name></author>
            <link href="/2009/09/30/initialize-django-tests/"/>
            <updated>2009-09-30</updated>
            <published>2009-09-30</published>
            <id>/2009/09/30/initialize-django-tests/</id>
                        <category   scheme="/blog/tags/"
                        term="django"
                        label="Django" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;I use a lot of &lt;a href=&#34;http://docs.djangoproject.com/en/dev/topics/testing/#writing-doctests&#34;&gt;doctests&lt;/a&gt; for apps that all need to work on a set of initialized data.  I was hoping that there would be some kind of hook in Django for this but there is not.&lt;/p&gt;
&lt;p&gt;I could switch all of the doctests to unittests and use &lt;a href=&#34;http://docs.djangoproject.com/en/dev/topics/testing/#fixture-loading&#34;&gt;fixtures&lt;/a&gt; but that would be a lot of work and I prefer doctests.  I could also go through and paste some sort of init command at the beginning of each test that would ensure the data was loaded or do the loading but that&#39;s just plain bad practice.&lt;/p&gt;
&lt;p&gt;I came up with a method of creating a &#39;testsetup&#39; app that is always run before the other apps ensuring that whatever that app configures or loads into the database will be run first before any other apps preform their tests.  Here&#39;s how you can do it too.&lt;/p&gt;
&lt;p&gt;First create a &#39;testsetup&#39; app and edit its tests.py file&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;./manage.py startapp testsetup&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;open testsetup/tests.py&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Bash&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;__test__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;initialize tests&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;&amp;gt;&amp;gt;&amp;gt; your init code here&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Python&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;In the test.py file you can load the database, prime the cache, or setup whatever else you need initialized.  Then add the &#39;testapp&#39; as the first app to your settings.py&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;testsetup&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-6&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Python&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;Now whenever you run&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;./manage.py &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Bash&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;It will first run the tests for the &#39;testssetup&#39; script and everything will be primed.  If that&#39;s the only kind of test you run then that&#39;s all you&#39;ll need.  You&#39;re done with this tutorial.&lt;/p&gt;
&lt;p&gt;But if you run app level tests (ie. ./manage.py test someapp anotherapp ) then the above solution is not enough.  To ensure the testsuite is run before these apps we&#39;ll make our own TEST_RUNNER.  Create a file called &#39;testrunner.py&#39; with the following source.&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;run_tests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test_labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbosity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interactive&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;extra_tests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Given these test_labels&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_labels&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;With these extra_test&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;extra_tests&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.test.simple&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;run_tests&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;django_run_tests&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-7&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;c&#34;&gt;# Make sure &amp;#39;testsetup&amp;#39; is run first&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-8&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;n&#34;&gt;tl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;testsetup&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-9&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;n&#34;&gt;tl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;extend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test_labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-10&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;n&#34;&gt;test_labels&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-11&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Testing these apps:&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test_labels&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-12&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;django_run_tests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test_labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbosity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;extra_tests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Python&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;and then in your settings.py file set the TEST_RUNNER variable&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;TEST_RUNNER&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;testrunner.run_tests&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Python&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;This script simply wraps the django test runner to ensure that the testsetup app is tested before any other apps are.  It basically makes the django test runner think that you&#39;re running ./manage.py test testsetup someapp when you actually run ./manage.py test someapp.&lt;/p&gt;
&lt;h3&gt;Proposal&lt;/h3&gt;
&lt;p&gt;A note to the community: I think it&#39;d be great if the Django settings.py included a TEST_INIT variable which allowed you to point to a function that would be executed immediately before the first test was run.  The hook would make the setup process for doctests much easier.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Forwarding Naked Domains for Appengine with Apache</title>
            <author><name>dave</name></author>
            <link href="/2009/08/26/forwarding-naked-domains-for-appengine-with-apache/"/>
            <updated>2009-08-26</updated>
            <published>2009-08-26</published>
            <id>/2009/08/26/forwarding-naked-domains-for-appengine-with-apache/</id>
                        <category   scheme="/blog/tags/"
                        term="Apache"
                        label="Apache" />
                        <category   scheme="/blog/tags/"
                        term="appengine"
                        label="Appengine" />
            
            <content type="html">
                             &lt;p&gt;Google Appengine currently does not allow configuration of naked domains.  Meaning, if you&#39;re building something on Appengine you&#39;ll have to settle for a URL like &lt;em&gt;http://www.mysite.com&lt;/em&gt; or &lt;em&gt;http://whatever.mysite.com&lt;/em&gt; and you will not be able to use &lt;em&gt;http://mysite.com&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Its not so bad in most cases, but not having http://mysite.com isn&#39;t going to stop people from trying to go there.  So its important to set up some sort of device to forward the naked domain to the www.&lt;/p&gt;
&lt;p&gt;Unfortunately you&#39;re going to need a server and for this example it will need to be running Apache2.  The redirect is handled by placing the following line in an apache config file (/apache2/httpd.conf).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Redirect permanent / http://www.mysite.com/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Where &lt;em&gt;http://www.mysite.com&lt;/em&gt; is the example site being hosted on Appengine.&lt;/p&gt;
&lt;p&gt;Or, if your apache server is hosting other apps and domains you&#39;ll need to set up the redirect in a VirtualHost as shown here.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
ServerName mysite.com
 Redirect permanent / http://www.mysite.com/
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the &#39;permanent&#39; parameter in the Redirect command enforces a 301 or permanent redirect.  You can choose other forms of redirect by replacing the &#39;permanent&#39; with either the redirect number (ie 302) or the keywords from the following table I&#39;ve shamelessly &lt;a href=&#34;http://www.yolinux.com/TUTORIALS/ApacheRedirect.html#REDIRECT&#34;&gt;copied from here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;HTTP Code
Status
Description&lt;/p&gt;
&lt;p&gt;301&lt;/p&gt;
&lt;p&gt;permanent&lt;/p&gt;
&lt;p&gt;The resource has permanently moved&lt;/p&gt;
&lt;p&gt;302&lt;/p&gt;
&lt;p&gt;temp&lt;/p&gt;
&lt;p&gt;The resource has temporarily moved&lt;/p&gt;
&lt;p&gt;303&lt;/p&gt;
&lt;p&gt;seeother&lt;/p&gt;
&lt;p&gt;The resource has been replaced and refer to new resource&lt;/p&gt;
&lt;p&gt;305&lt;/p&gt;
&lt;p&gt;UseProxy&lt;/p&gt;
&lt;p&gt;Use proxy to access site&lt;/p&gt;
&lt;p&gt;307&lt;/p&gt;
&lt;p&gt;Temp&lt;/p&gt;
&lt;p&gt;The resource has temporarily moved&lt;/p&gt;
&lt;p&gt;410&lt;/p&gt;
&lt;p&gt;Tegone&lt;/p&gt;
&lt;p&gt;The resource has permanently removed&lt;/p&gt;
&lt;p&gt;Finally set your DNS to point the base domain to this apache server and in a few hours it should be permanently re-directing http://mysite.com/ to http://www.mysite.com/.&lt;/p&gt;
&lt;p&gt;If you&#39;re not using apache or are looking for more ideas here&#39;s a &lt;a href=&#34;http://www.yolinux.com/TUTORIALS/ApacheRedirect.html&#34;&gt;list of other techniques&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, please &lt;a href=&#34;http://code.google.com/p/googleappengine/issues/detail?id=113&#34;&gt;vote for Google to fix the issue here&lt;/a&gt; and &lt;a href=&#34;http://code.google.com/p/googleappengine/issues/detail?id=777&amp;amp;colspec=ID%20Type%20Status%20Priority%20Stars%20Owner%20Summary%20Log%20Component&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Socialbrowse in the StarTribune</title>
            <author><name>dave</name></author>
            <link href="/2009/08/11/socialbrowse-in-the-startribune/"/>
            <updated>2009-08-11</updated>
            <published>2009-08-11</published>
            <id>/2009/08/11/socialbrowse-in-the-startribune/</id>
            
            <content type="html">
                             &lt;p&gt;Yesterday I was on the cover of the Business section of the StarTribune.  Its a nice article that talks a bit about Socialbrowse and my path to what I&#39;m doing right now.&lt;/p&gt;
&lt;p&gt;It also talks about &lt;a href=&#34;http://luke.francl.org/&#34;&gt;Luke Francl&lt;/a&gt; and his awesome startup &lt;a href=&#34;http://fanchatter.com&#34;&gt;FanChatter&lt;/a&gt; which is also from Minnesota and also in YCombinator.  Here is a link to the article&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.startribune.com/business/52719012.html&#34;&gt;http://www.startribune.com/business/52719012.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The print version comes with pretty pictures of Luke and I which I think is worth the money :).&lt;/p&gt;
&lt;p&gt;Thanks &lt;a href=&#34;http://www.startribune.com/bios/10645266.html&#34;&gt;Thomas Lee&lt;/a&gt; for the nice coverage.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Log Observer using Python&#39;s subprocess</title>
            <author><name>dave</name></author>
            <link href="/2009/08/10/log-observer-using-pythons-subprocess/"/>
            <updated>2009-08-10</updated>
            <published>2009-08-10</published>
            <id>/2009/08/10/log-observer-using-pythons-subprocess/</id>
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;Today I needed to write a wrapper around a program that would examine the stdio and respond immediately to certain results.  The task was handled nicely with a python script using &lt;a href=&#34;http://pydoc.org/2.4.1/subprocess.html&#34;&gt;subprocess&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There isn&#39;t a lot of documentation examples on it so to figure it out I wrote this small test app and I thought I&#39;d share it here.&lt;/p&gt;
&lt;p&gt;To begin I wrote a simple script that prints out &#34;Program has run for x seconds.&#34; every x seconds to simulate a long running and noisy script that I might be observing.  Here is the code.&lt;/p&gt;
&lt;p&gt;sample.py&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import sys, time

class FlushFile(object):
   &#34;&#34;&#34;Write-only flushing wrapper for file-type objects.&#34;&#34;&#34;
   def __init__(self, f):
       self.f = f
   def write(self, x):
       self.f.write(x)
       self.f.flush()

# Replace stdout with an automatically flushing version
sys.stdout = FlushFile(sys.__stdout__)

for i in xrange(100):
   sys.stdout.write(&#34;Program has run for %d seconds.\n&#34; % i)
   time.sleep(1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The main part of the program is the last 3 lines where we write &#34;Program has run for %d seconds&#34; 100 times and pause for a second between each.&lt;/p&gt;
&lt;p&gt;The FlushFile object is simply a &lt;a href=&#34;http://stackoverflow.com/questions/527197/intercepting-stdout-of-a-subprocess-while-it-is-running&#34;&gt;nice hack&lt;/a&gt; to overwrite the default stdout object to ensure that the buffer is flushed every time it is written to.  Without the hack our log checker would simply be hung up until the task is fully completed instead of being able to read each line of the output as it is written.&lt;/p&gt;
&lt;p&gt;The output looks like this&lt;/p&gt;
&lt;blockquote&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;$ python sample.py
Program has run for 0 seconds.
Program has run for 1 seconds.
Program has run for 2 seconds.
.... # and on until 100 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Next I wrote the wrapper which executes the above sample.py script as a python subprocess and watches the output.  For this example I check whether a &#39;4&#39; exists in the output.  If it is I restart the script therefore creating a continual loop counting between 0 and 4 seconds.&lt;/p&gt;
&lt;p&gt;observer.py&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import subprocess, os, signal
cmnd = &#34;python sample.py&#34; #change this line to run your script
p, line = True, &#39;start&#39;

while True:
   p = subprocess.Popen(cmnd, shell=True, stdout=subprocess.PIPE)

   while line:
       line = p.stdout.readline()
       print &#34;line is:&#34;, line
       if line.count(&#39;4&#39;):
           print &#34;restarting the process&#34;
           os.kill(p.pid, signal.SIGUSR1)
           line = True
           break

   del p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output is continually checked in the &#39;while line:&#39; loop of line 8.  In this example its printed out for our convenience.  Like 11 checks for the character &#39;4&#39; somewhere in the output.  If it does exist it kills the process and the stdout reading loop.&lt;/p&gt;
&lt;p&gt;That loop is wrapped in another however that simply restarts the process all over again.  The resulting output is&lt;/p&gt;
&lt;blockquote&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;$ python observer.py
line is: Program has run for 0 seconds.
line is: Program has run for 1 seconds.
line is: Program has run for 2 seconds.
line is: Program has run for 3 seconds.
line is: Program has run for 4 seconds.
restarting the process
line is: Program has run for 0 seconds.
line is: Program has run for 1 seconds.
line is: Program has run for 2 seconds.
line is: Program has run for 3 seconds.
line is: Program has run for 4 seconds.
restarting the process
line is: Program has run for 0 seconds.
.....
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;So now we have a nice template for wrapping and responding to executables!&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Starting Out With Comet (Orbited) Part 3 - The Client</title>
            <author><name>dave</name></author>
            <link href="/2009/08/03/starting-out-with-comet-orbited-part-3-e28093-the-client/"/>
            <updated>2009-08-03</updated>
            <published>2009-08-03</published>
            <id>/2009/08/03/starting-out-with-comet-orbited-part-3-e28093-the-client/</id>
                        <category   scheme="/blog/tags/"
                        term="comet"
                        label="Comet" />
                        <category   scheme="/blog/tags/"
                        term="javascript"
                        label="Javascript" />
                        <category   scheme="/blog/tags/"
                        term="Orbited"
                        label="Orbited" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;Comet implementations require both server and client side components.  In &lt;a href=&#34;http://thingsilearned.com/2009/06/25/starting-out-with-comet-orbited-part-2-installation-and-stomp/&#34;&gt;Part 2&lt;/a&gt; of this series we installed and configured the server side component and then used the example STOMP Test client to test it out and get a feel for what was going on.&lt;/p&gt;
&lt;p&gt;In this part of the series we&#39;ll be covering the client side to make our custom interface to the comet server.  To demonstrate we&#39;ll go through the steps in creating an app I call EZChat which is basically a bare bones comet chat client.  The interface will allow you to choose a name and submit messages that will be broadcast to everyone viewing the page in real time.&lt;/p&gt;
&lt;p&gt;For it to work you will have to have the configuration of &lt;a href=&#34;http://thingsilearned.com/2009/06/25/starting-out-with-comet-orbited-part-2-installation-and-stomp/&#34;&gt;Part 2&lt;/a&gt; setup and your Orbited server running.  For reference I learned most of the client side code in this example by playing with the source of the example &lt;a href=&#34;http://localhost:9000/static/demos/stomp/&#34;&gt;STOMP Test client&lt;/a&gt;. I recommend taking a look at that source if you need more advanced options or another example.&lt;/p&gt;
&lt;h2&gt;Includes&lt;/h2&gt;
&lt;p&gt;At the top of the &lt;head&gt; you first need to include the libraries for the Orbited (/static/Orbited.js) and STOMP (/static/protocols/stomp/stomp.js) client-side implementations.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;document.domain=document.domain&amp;lt;/script&amp;gt;
 &amp;lt;script src=&#34;http://localhost:9000/static/Orbited.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;script&amp;gt;
 Orbited.settings.port = 9000;
 TCPSocket = Orbited.TCPSocket;
 &amp;lt;/script&amp;gt;
 &amp;lt;script src=&#34;http://localhost:9000/static/protocols/stomp/stomp.js&#34;&amp;gt;&amp;lt;/script&amp;gt;

 &amp;lt;script src=&#34;http://www.json.org/json2.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In between the scripts we&#39;ve set up a TCPScocket.  It must be don between the two script includes because the STOMP library needs the socket setup for its execution.  We&#39;ve also specified the Orbited port which is necessary especially if you change the port on which the orbited and stomp javascript files are hosted on (they can both be hosted on port 80 along with your other scripts).&lt;/p&gt;
&lt;p&gt;Lastly, we&#39;ve also included a popular &lt;a href=&#34;http://www.json.org/js.html&#34;&gt;JSON library&lt;/a&gt;.  Typically I use jquery-json but I&#39;ve kept this tutorial free of javascript frameworks so as not to add unneeded complexity.  If you&#39;d like you can of course switch to whatever JSON library you&#39;re used to; just replace the JSON.stringify and JSON.parse functions with your equivalents.&lt;/p&gt;
&lt;h2&gt;STOMP Setup&lt;/h2&gt;
&lt;p&gt;Because we&#39;re dealing with the setup we&#39;ll skip to the bottom of the page and add the following script just before the end tag of the body (&lt;/body&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&#34;text/javascript&#34;&amp;gt;
(function() { // set up stomp client.

stomp = new STOMPClient();

 stomp.onconnectedframe = function() {  // Run on initial connection to STOMP (comet) server
 stomp.ready = true;
 // subscribe to channel CHANNEL = &#34;/ezchat/&#34;
 var CHANNEL = &#39;/ezchat/&#39;
 stomp.subscribe(CHANNEL);
 };

 stomp.onmessageframe = function(frame) {  // Executed when a messge is received
 my_receive( JSON.parse(frame.body) );
 };

 // Everything is setup. Start the connection!
stomp.connect(document.domain, 61613); //, &#39;guest&#39;, &#39;guest&#39;);
})();
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;My apologies as always for the crappiness of the wordpress syntax parser.   Lets walk through what&#39;s happening.&lt;/p&gt;
&lt;p&gt;At the top, we initialize a new STOMPClient object.  The StompClient has the following hooks you can override to trigger your own events.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;onopen&lt;/strong&gt; - Called when the Transport is opened
&lt;strong&gt;onclose&lt;/strong&gt; - Called when the Transport has closed
&lt;strong&gt;onerror&lt;/strong&gt; - Called when the Stomp Client has errored
&lt;strong&gt;onerrorframe&lt;/strong&gt; - Called when there is an error in the message received
&lt;strong&gt;onconnectedframe&lt;/strong&gt; - Called when a the client is fully set up for sending/receiving
&lt;strong&gt;onmessageframe&lt;/strong&gt; - Called when a message is received&lt;/p&gt;
&lt;p&gt;The STOMP object also has these functions for connecting and resetting the connections.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;reset&lt;/strong&gt; - Resets the STOMP connection
&lt;strong&gt;connect&lt;/strong&gt; - Connects to the STOMP server
&lt;strong&gt;send&lt;/strong&gt; - Sends the object in the first argument to the channel specified by the second argument&lt;/p&gt;
&lt;p&gt;In our simple example only the onconnectedframe and onmessage frames need to be overwritten.&lt;/p&gt;
&lt;p&gt;The onconnectedframe function is called when the STOMP server has been connected to and everything is setup for sending and receiving messages.  Inside this function we simply need to subscribe/listen to the CHANNEL we&#39;ve setup for our chat.  For the example I&#39;ve chosen the channel &#39;/ezchat/&#39;.  Once subscribed our STOMP client will receive any messages sent to that channel in real time.  You can subscribe to multiple channels if you&#39;d like, and you can make clients with different channels if you&#39;d like to have different chat rooms.  But for this example we&#39;ll just stick with the hard coded &#39;/ezchat/&#39; channel.&lt;/p&gt;
&lt;p&gt;The onmesageframe function is called when a message has been received.  It is passed a frame object with the following structure&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;frame&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;body: &#34;{&#34;name&#34;:&#34;Dave&#34;,&#34;message&#34;:&#34;awesome this is working&#34;}&#34;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;headers: Object&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;content-encoding: &#34;utf-8&#34;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;content-length: &#34;51&#34;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;content-type: &#34;text/plain&#34;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;destination: &#34;/ezchat/&#34;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;message-id: &#34;/ezchat/_3&#34;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;type: &#34;MESSAGE&#34;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;where the body holds the information that has been sent.  The STOMP server and client add extra &#34;type&#34; and &#34;headers&#34; objects to communicate between each other.  The extra information can be very useful for more complicated applications but for our simple example we&#39;re only interested in the frame &#34;body&#34;.&lt;/p&gt;
&lt;p&gt;So you see that the onmessageframe is simply parsing the json object in frame.body of every received message and passing it to my_receive, a function we will soon create.&lt;/p&gt;
&lt;h2&gt;The Content&lt;/h2&gt;
&lt;p&gt;For EZChat we need a form where users can specify a name and type messages to send.  We also need an area to put the messages.  Plop this HTML in at the top of the &lt;body&gt; to handle all of that.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;h2&amp;gt;EZChat - Example Comet Client!&amp;lt;/h2&amp;gt;
Everyone viewing this page will see the messsages you submit instantly.
&amp;lt;form action=&#34;#&#34; id=&#34;message_form&#34;&amp;gt;
 Name:
 &amp;lt;input type=&#34;text&#34; name=&#34;chat_name&#34; id=&#34;chat_name&#34;&amp;gt;&amp;lt;/input&amp;gt;
 Message:
 &amp;lt;textarea rows=&#34;4&#34; cols=&#34;40&#34; name=&#34;message&#34; id=&#34;message&#34;&amp;gt;&amp;lt;/textarea&amp;gt;
 &amp;lt;input type=&#34;submit&#34; name=&#34;Send&#34; onclick=&#34;return my_send(); return false&#34;&amp;gt;&amp;lt;/input&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;div id=&#34;messages&#34;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are a few things to notice here.  First, the important elements in the form have ids &#39;chat_name&#39; and &#39;message&#39; and the area that will be containing all the received messages is called &#39;messages&#39;.  The names don&#39;t matter except that we&#39;ll use them in the functions we create later.&lt;/p&gt;
&lt;p&gt;Second, the onclick event of the submit button is overridden with instead calling the my_send function.  We&#39;ll make this function in the next step.&lt;/p&gt;
&lt;h2&gt;The Functions&lt;/h2&gt;
&lt;p&gt;Lastly we need to make the custom my_send and my_receive functions that get called to send and receive messages.  Insert these functions into the head after the includes.&lt;/p&gt;
&lt;h3&gt;my_send&lt;/h3&gt;
&lt;p&gt;The my_send function will get the values from the &#39;chat_name&#39; and &#39;message&#39; form elements, combine them in an object, convert the object to json, and then sends it to the &#39;/ezchat/&#39; channel.  The sending is handled using the stomp.send command which takes as input the object to send and second, the channel to send it to.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var CHANNEL = &#39;/ezchat/&#39;;
function my_send() {

// Get the values to send from the form
 var name = document.getElementById(&#39;chat_name&#39;).value;
 var message = document.getElementById(&#39;message&#39;).value;

 var msg = {&#39;name&#39;: name, &#39;message&#39;: message};

 var json_msg = JSON.stringify(msg);
 stomp.send(json_msg, CHANNEL)
 return false;
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;my_receive&lt;/h3&gt;
&lt;p&gt;As discussed earlier the my_receive function gets the JSON parsed version of whatever was sent in &#39;frame.body&#39;.  In the case of our app its always an object of the format&lt;/p&gt;
&lt;p&gt;msg = {&#39;name&#39;: &lt;some name&gt;, &#39;message&#39;: &lt;some message&gt;}&lt;/p&gt;
&lt;p&gt;The my_receive function simply takes this object and converts it into a prettier HTML format and appends it to the top of the message list we created in the HTML.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function my_receive( msg ) {
 console.log(&#39;received message&#39;, msg);
 // append the &amp;lt;msg&amp;gt; to the top of the list of messages.
 var messages_el = document.getElementById(&#39;messages&#39;);
 var new_message = &#34;
&amp;lt;div&amp;gt;&amp;lt;strong&amp;gt;&#34; + msg[&#39;name&#39;] + &#34;:&amp;lt;/strong&amp;gt; &#34; + msg[&#39;message&#39;] + &#34;&amp;lt;/div&amp;gt;
&#34;;
 messages_el.innerHTML = new_message + messages_el.innerHTML;
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&#39;s it for the code.  Scroll to the bottom of the page for the full version of the source.&lt;/p&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;Ensure that your Orbited server is running as described in Part 2 of the series.  Then load up the page we&#39;ve made in two or more separate windows.  Choose a different name for each window and start sending each other messages.  You&#39;ll notice that both windows will receive the submitted messages almost instantaneously!  The beauty of Comet!&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;ezchat&#34; src=&#34;http://thingsilearned.files.wordpress.com/2009/08/ezchat1.png&#34; /&gt;If you open your &lt;a href=&#34;http://localhost:9000/static/demos/stomp/&#34;&gt;STOMP Test Client&lt;/a&gt; and subscribe to the &#39;/ezchat/&#39; channel you&#39;ll see a more raw input on what&#39;s actually being received by the STOMP clients as you chat.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;ezchatstomp&#34; src=&#34;http://thingsilearned.files.wordpress.com/2009/08/ezchatstomp.png&#34; /&gt;You can see how the STOMP Test client is incredibly handy for debugging.&lt;/p&gt;
&lt;p&gt;That&#39;s it for this part of the Tutorial!  There are still parts to come including writing a data handler on the server side and hopefully a much requested post on Django integration.&lt;/p&gt;
&lt;h2&gt;Full Source&lt;/h2&gt;
&lt;p&gt;For your convenience here&#39;s the full index.html file for this example.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; &amp;lt;html&amp;gt;

&amp;lt;head&amp;gt;
 &amp;lt;script&amp;gt;document.domain=document.domain&amp;lt;/script&amp;gt;
 &amp;lt;script src=&#34;http://localhost:9000/static/Orbited.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;script&amp;gt;
 Orbited.settings.port = 9000;
 TCPSocket = Orbited.TCPSocket;
 &amp;lt;/script&amp;gt;
 &amp;lt;script src=&#34;http://localhost:9000/static/protocols/stomp/stomp.js&#34;&amp;gt;&amp;lt;/script&amp;gt;

 &amp;lt;script src=&#34;http://www.json.org/json2.js&#34;&amp;gt;&amp;lt;/script&amp;gt;

 &amp;lt;script type=&#34;text/javascript&#34;&amp;gt;
 // These are our custom functions for sending and receiving STOMP messages.
 // They will be sent in the format msg = {&#39;name&#39;: somename, &#39;message&#39;: somemessage}

 var CHANNEL = &#39;/ezchat/&#39;;

 function my_receive( msg ) {
 console.log(&#39;received message&#39;, msg);
 // append the &amp;lt;msg&amp;gt; to the top of the list of messages.
 var messages_el = document.getElementById(&#39;messages&#39;);
 var new_message = &#34;
&amp;lt;div&amp;gt;&amp;lt;strong&amp;gt;&#34; + msg[&#39;name&#39;] + &#34;:&amp;lt;/strong&amp;gt; &#34; + msg[&#39;message&#39;] + &#34;&amp;lt;/div&amp;gt;
&#34;;
 messages_el.innerHTML = new_message + messages_el.innerHTML;
 }
 function my_send() {
 // Get the values to send from the form

 var name = document.getElementById(&#39;chat_name&#39;).value;
 var message = document.getElementById(&#39;message&#39;).value;

 var msg = {&#39;name&#39;: name, &#39;message&#39;: message};
 console.log(msg);

 var json_msg = JSON.stringify(msg);
 console.log(json_msg);
 stomp.send(json_msg, CHANNEL)
 return false;
 }       
 &amp;lt;/script&amp;gt;

&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
&amp;lt;h2&amp;gt;EZChat - Example Comet Client!&amp;lt;/h2&amp;gt;
&amp;lt;div&amp;gt;Everyone viewing this page will see the messsages you submit instantly.&amp;lt;/div&amp;gt;
&amp;lt;form action=&#34;#&#34; id=&#34;message_form&#34;&amp;gt;
 Name:
 &amp;lt;input type=&#34;text&#34; name=&#34;chat_name&#34; id=&#34;chat_name&#34;&amp;gt;&amp;lt;/input&amp;gt;
 Message:
 &amp;lt;textarea rows=&#34;4&#34; cols=&#34;40&#34; name=&#34;message&#34; id=&#34;message&#34;&amp;gt;&amp;lt;/textarea&amp;gt;
 &amp;lt;input type=&#34;submit&#34; name=&#34;Send&#34; onclick=&#34;return my_send(); return false&#34;&amp;gt;&amp;lt;/input&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;div id=&#34;messages&#34;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script type=&#34;text/javascript&#34;&amp;gt;
(function() { // set up stomp client.
 stomp = new STOMPClient();
 stomp.onconnectedframe = function() {  // Run on initial connection to STOMP (comet) server
 stomp.ready = true;
 // subscribe to channel CHANNEL = &#34;/ezchat/&#34;
 stomp.subscribe(CHANNEL);          
 };

 stomp.onmessageframe = function(frame) {  // Executed when a messge is received
 console.log(&#39;frame is&#39;, frame);
 my_receive( JSON.parse(frame.body) );
 };

 // Everything is setup. Start the connection!
 stomp.connect(document.domain, 61613); //, &#39;guest&#39;, &#39;guest&#39;);
})();
&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As usual, if there are corrections or questions please be sure to leave them in the comments.  And remember to &lt;a href=&#34;http://thingsilearned.com/feed/&#34;&gt;subscribe&lt;/a&gt; to catch the rest of the series.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Appengine Example: Quick Thoughts</title>
            <author><name>dave</name></author>
            <link href="/2009/07/21/appengine-example-quick-thoughts/"/>
            <updated>2009-07-21</updated>
            <published>2009-07-21</published>
            <id>/2009/07/21/appengine-example-quick-thoughts/</id>
                        <category   scheme="/blog/tags/"
                        term="appengine"
                        label="Appengine" />
                        <category   scheme="/blog/tags/"
                        term="django"
                        label="Django" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;I&#39;ve made a few apps on &lt;a href=&#34;http://appengine.google.com/&#34;&gt;Google&#39;s Appengine&lt;/a&gt; now and am getting to the point where I can pump them out fairly quickly.  I really love that they make user authentication (my least favorite part of web applications) incredibly simplified.&lt;/p&gt;
&lt;p&gt;I wrote this app in less than an hour as a simple tool for myself and to test out the authentication tools which I hadn&#39;t gotten a chance to use yet.  I&#39;m sharing the source here in case its of any use to others.&lt;/p&gt;
&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;The app is called &lt;a href=&#34;http://quoughts.appspot.com/&#34;&gt;Quick Thoughts&lt;/a&gt; and its a very simple private micro blog (a private twitter).  Basically you log in and can record quick notes to yourself.  They&#39;re dated and only you can see them.&lt;/p&gt;
&lt;p&gt;Its all on one page.  You can get a good idea of what it is from this screen shot.  You can also just try it out yourself by logging into: &lt;a href=&#34;http://quoughts.appspot.com/&#34;&gt;http://quoughts.appspot.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;quickthoughts&#34; src=&#34;http://thingsilearned.files.wordpress.com/2009/07/quickthoughts.gif?w=300&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There are a lot of &lt;a href=&#34;http://www.google.com/search?q=appengine+tutorial&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;aq=t&amp;amp;rls=org.mozilla:en-US:official&amp;amp;client=firefox-a&#34;&gt;other Appengine tutorials&lt;/a&gt; including the &lt;a href=&#34;http://code.google.com/appengine/docs/python/gettingstarted/&#34;&gt;official tutorial&lt;/a&gt; that do a very thorough job of explaining setting up a development environment and deploying.  I&#39;m just going to share some more example code with some helpful comments.&lt;/p&gt;
&lt;p&gt;I know looking at code is not pretty, but I&#39;ve included a lot of comments for each part.  It should be easiest to understand in that format.  Ugh: and I&#39;m sorry that the crappy Wordpress syntax highlighting has totally f&#39;d the format.  That pretty much makes python code useless, but hopefully you&#39;ll be able to sift through.&lt;/p&gt;
&lt;h2&gt;Template&lt;/h2&gt;
&lt;p&gt;There are only three files for this app.  The first is the HTML template for the single page that is used.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;index.html&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Quick Thoughts&lt;/h2&gt;
&lt;p&gt;By &amp;#123;&amp;#123; user.nickname &amp;#125;&amp;#125;&lt;/p&gt;
&lt;p&gt;This is all pretty straightforward especially if you come from the Django world.  Appengine wisely uses Django&#39;s templating system to render its HTML pages.  For more details on the templates view the &lt;a href=&#34;http://www.djangoproject.com/documentation/0.96/templates/&#34;&gt;Django .96 Template Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Request Handling&lt;/h2&gt;
&lt;p&gt;The second file is the python WSGI handler.  You can ofcourse use Django on Appengine and have the advantage of the nice url parser and the Django views format but here I just stuck with the WSGI RequestHandlers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;thoughts.py&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from google.appengine.api.urlfetch import fetch as urlfetch, GET, POST
from google.appengine.ext import db
from google.appengine.ext.webapp import RequestHandler, WSGIApplication
from google.appengine.ext.webapp import template
from google.appengine.api import users

import os

from wsgiref.handlers import CGIHandler

class Thought(db.Model):
 &#34;&#34;&#34;
 This is the Database Model that stores the different Thought objects that the user submits
 Each entry in the database stores a thought, date and the user who wrote it.
 &#34;&#34;&#34;
 thought = db.TextProperty()
 date = db.DateTimeProperty(auto_now_add=True)
 # The auto_now_add setting automatically adds the date that the object was created so you don&#39;t have to.
 user = db.UserProperty()  # Google handles the user for you.  Great!

class ThoughtHandler(RequestHandler):

 def get(self):
 user = users.get_current_user() # Get the user
 if not user:
 # If they are not logged in, ask google to authenticate them.
 self.redirect(users.create_login_url(self.request.uri))

 # These are the variables that will be sent to the template
 template_values = {
 # This is a GQL query for the appengine datastore.  
 # Here we&#39;re finding all Thoughts for the given User and ordering them by Date descending
 # More info on GQL: http://code.google.com/appengine/docs/python/datastore/gqlreference.html
 &#39;thoughts&#39;:  Thought.all().filter(&#34;user =&#34;, user).order(&#39;-date&#39;),  
 &#39;user&#39;: user,
 }

 # Gather the full path to the template
 path = os.path.join(os.path.dirname(__file__), &#39;index.html&#39;)

 # Render the template with the template_values we collected above
 html = template.render(path, template_values)

 # Write out the result
 self.response.out.write(html)

 def post(self):
 &#34;&#34;&#34;
 A Thought has been submitted via POST.
 Create a new Thought object and re-direct back to the front page.
 &#34;&#34;&#34;
 user = users.get_current_user() # Get the user
 if not user:
 # If they are not logged in, ask google to authenticate them.
 self.redirect(users.create_login_url(self.request.uri))

 # Get the &#39;thought&#39; POST data from the request
 thought = self.request.get(&#39;thought&#39;)

 # Create a new thought object using the POST data and the authed user
 t = Thought( thought = thought, user = user )
 # Save the object
 t.put()

 # Now re-direct back to the front page
 self.redirect(&#39;/&#39;)

def main():
 &#34;&#34;&#34;
 This simple function is the URL parser
 There&#39;s only one URL for this app, so its a pretty bad example for this ;)
 &#34;&#34;&#34;
 application = WSGIApplication([

 (&#39;/&#39;, ThoughtHandler),

 ], debug=True)

 CGIHandler().run(application)

if __name__ == &#39;__main__&#39;:
 main()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are a few major highlights in this code: the Thought Datastore Model, the Query for your Thoughts, and the simple Google Authentication.  I LOVE these three lines of code (yes, I know how nerdy that sounds):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;user = users.get_current_user() # Get the user
if not user:
    self.redirect(users.create_login_url(self.request.uri))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In those 3 lines we&#39;ve requested the User object and asked Google to authenticate them and send them back if they&#39;re not logged in!  Super simple!  No more login/signup/change password/change username crap to deal with here.  The authentication is done for you.&lt;/p&gt;
&lt;p&gt;Toward the top is the Thought model that is a subclass of db.Model.  For those of you who&#39;re familiar with Django this format will look familiar.  The Thought model contains the text of the thought, the date it was recorded and the user who recorded it.&lt;/p&gt;
&lt;p&gt;In the &#39;get&#39; Request we query for all of the thoughts of the given user and order them by descending date.  The objects are fetched using GQL, the query interface for the Datastore.  You can handle most queries by playing with the format of the above example, but here is &lt;a href=&#34;http://code.google.com/appengine/docs/python/datastore/gqlreference.html&#34;&gt;more information on GQL&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Finally we need the configuration file for our app.  Its called app.yaml and it tells appengine what App we&#39;ve registered as, and how to handle the URLs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;app.yaml&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;application: YOURAPPNAME
version: 1
runtime: python
api_version: 1

handlers:

- url: /.*
 script: thoughts.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;http://code.google.com/appengine/docs/python/gettingstarted/staticfiles.html&#34;&gt;Other tutorials&lt;/a&gt; explain this file well.  You can expand it to include other scripts and serve static files.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Now you have your own private micro-blog on Google&#39;s datastore!  That means it&#39;s theoretically infinitely scalable without you ever having to worry about a thing.  You can grow to the size of twitter and never blink an eye :).&lt;/p&gt;
&lt;p&gt;Hope it helped some people.  Feel free to use this code in any way you&#39;d like and feel free to leave questions, comments or corrections.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Starting Out With Comet (Orbited) Part 2 - Installation and STOMP</title>
            <author><name>dave</name></author>
            <link href="/2009/06/25/starting-out-with-comet-orbited-part-2-installation-and-stomp/"/>
            <updated>2009-06-25</updated>
            <published>2009-06-25</published>
            <id>/2009/06/25/starting-out-with-comet-orbited-part-2-installation-and-stomp/</id>
                        <category   scheme="/blog/tags/"
                        term="comet"
                        label="Comet" />
                        <category   scheme="/blog/tags/"
                        term="Orbited"
                        label="Orbited" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;In this part of the tutorial we will install and setup the server side of a Comet installation using the Orbited implementation.  We&#39;ll also be using the MorbitQ STOMP server to handle message passing and we&#39;ll play around with STOMP/Comet setup using Orbited&#39;s STOMP Test demo.  If you have not read the &lt;a href=&#34;http://thingsilearned.com/2009/06/09/starting-out-with-comet-orbited-part-1/&#34;&gt;first blog post&lt;/a&gt; in this series I advise you do so.  I will be assuming you have an understanding of those terms and concepts of the previous post for this tutorial.&lt;/p&gt;
&lt;p&gt;Before we start I&#39;d like to quote my source.  I&#39;ve learned most of what I&#39;m sharing from &lt;a href=&#34;http://cometdaily.com/2008/10/10/scalable-real-time-web-architecture-part-2-a-live-graph-with-orbited-morbidq-and-jsio/&#34;&gt;Michael Carter&#39;s Tutorial&lt;/a&gt; and many hours of playing around.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;We will need to install the latest version of Orbited and also some Stomp tools.  The stomp tools aren&#39;t required for this step but will be for anything else you want to do with comet so I&#39;ve included them in the installation steps here as well.  Conveniently Orbited is setup in the Cheeseshop.  You need &lt;a href=&#34;http://www.python.org/download/&#34;&gt;python2.5+&lt;/a&gt; and if you have not installed the &lt;a href=&#34;http://peak.telecommunity.com/DevCenter/EasyInstall&#34;&gt;python setup-tools&lt;/a&gt; do so now.&lt;/p&gt;
&lt;p&gt;Installation simply consists of the following commands.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;easy_install twisted
easy_install orbited
easy_install stompservice
easy_install simplejson
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To test if it works enter your python shell and test importing the libraries.  The following should load without any errors&lt;/p&gt;
&lt;p&gt;$ python&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;import twisted
import orbited
import stompservice
import simplejson&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you have any troubles there is more info on the &lt;a href=&#34;http://www.orbited.org/wiki/Installation&#34;&gt;Orbited Installation Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Orbited is configured with a &#39;.cfg&#39; file. Lets call ours example.cfg.  Make a directory anywhere for your project and paste the following into example.cfg&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[global]
session.ping_interval = 300

[listen]
http://:9000
stomp://:61613

[access]
* -&amp;gt; localhost:61613
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lets go through the different parts.&lt;/p&gt;
&lt;p&gt;The ping interval is a number of seconds for the backend to wait before it pings the client.  We&#39;ve got it set up for 5 minutes.  Good comet implementations have some sort of pinging system.  This is a necessary step as due to current HTTP protocols the client cannot tell if something has gone wrong on the server end.  It simply waits happily all day for some sort of response for the server.  But with a pinging system setup we can tell the client to refresh its connection if it hasn&#39;t heard from the server in the last 300 seconds, and the server will make sure to ping the client at least every 300 seconds, letting it know that the connection is still alive.&lt;/p&gt;
&lt;p&gt;The listen parameters tell the orbited server which ports to listen to and who to proxy requests to.  In our configuration port 9000 will be serving static html files, and port 61613 will be a proxy for our STOMP server.&lt;/p&gt;
&lt;p&gt;And finally, the access parameter gives permission to proxy to the stomp server.&lt;/p&gt;
&lt;h2&gt;Lets Run It&lt;/h2&gt;
&lt;p&gt;To run enter your project directory and type&lt;/p&gt;
&lt;p&gt;orbited - -config example.cfg&lt;/p&gt;
&lt;p&gt;It should look something like this:&lt;/p&gt;
&lt;p&gt;06/24/09 21:05:24:651 INFO   orbited.start    proxy protocol active
06/24/09 21:05:24:511 INFO   orbited.start    Listening http@9000
06/24/09 21:05:24:525 INFO   orbited.start    Listening stomp@61613&lt;/p&gt;
&lt;h2&gt;STOMP Test&lt;/h2&gt;
&lt;p&gt;Orbited comes with a really nice STOMP demo that also serves as a nice tool for debugging your setup later.  We&#39;ll use it to play around with Comet and understand the concepts behind STOMP.&lt;/p&gt;
&lt;p&gt;While your orbited server is running visit the following URL.&lt;/p&gt;
&lt;p&gt;http://localhost:9000/static/demos/stomp/&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;cometwindow&#34; src=&#34;http://thingsilearned.files.wordpress.com/2009/06/cometwindow1.png&#34; /&gt;There are 3 important tools/rows we&#39;ll be using here: Connect, Subscribe and Send.&lt;/p&gt;
&lt;p&gt;First click on &#34;Connect&#34; to connect to the orbited and stomp servers.  We&#39;re using MorbitQ has the stomp client, which doesn&#39;t deal with authentication, so any name and password will work.  Notice that the STOMP test shell will now say.&lt;/p&gt;
&lt;p&gt;→ Transport openned
→ Connected as user guest&lt;/p&gt;
&lt;p&gt;Second change the &#34;destination&#34; in the &#34;Subscribe&#34; row to be &#34;/channel/1/&#34; and click Subscribe.  You have now created and subscribed to a channel called &#34;/channel/1/&#34;.&lt;/p&gt;
&lt;p&gt;Next we&#39;ll send something to that channel using the Send tool.  Again change the destination to &#34;/channel/1/&#34; and type something into the message box replacing &#34;hello&#34;.  In the image above I&#39;ve chosen &#34;comet is working!&#34;.  Now hit Send and notice that your message shows up in your STOMP shell!&lt;/p&gt;
&lt;p&gt;Try sending to other destinations and notice that only messages sent to &#34;/channel/1/&#34; will show up in the stomp shell.  We can change that however by subscribing to additional channels.  Try subscribing to &#34;/anotherchannel/&#34; and then send it a message.  Notice that this setup can handle being subscribed to many different channels at once.&lt;/p&gt;
&lt;h2&gt;The Real Power&lt;/h2&gt;
&lt;p&gt;All of the things we&#39;ve tried so far could have been fairly easily implemented with simple AJAX.  The real power of comet is that it can push information to the client without having to submit a request.  Also, the real power of STOMP is that it smoothly handles message passing between clients.  Lets demonstrate both of these now by opening up multiple browser windows all pointing to our STOMP Test.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;stompmultiple&#34; src=&#34;http://thingsilearned.files.wordpress.com/2009/06/stompmultiple.png&#34; /&gt;Open up 3 windows and &#34;Connect&#34; them each to the server.  Now subscribe the second window to &#34;/channel/1/&#34;, the third window to &#34;/channel/2/&#34; and the first window to both.&lt;/p&gt;
&lt;p&gt;Once setup, using the first window send a message &#34;Message to Channel 1&#34; to &#34;/channel/1/&#34;.  You&#39;ll notice that it not only showed up instantly in window 1 (where you submitted), but also in window 2 (where you did nothing)!  The STOMP server has passed the message all clients listening to &#34;/channel/1/&#34; and the Comet server has pushed it to the client without it having to poll for updates!&lt;/p&gt;
&lt;p&gt;Now send a message to &#34;/channel/2/&#34; and notice that it shows up in windows 1 and 3, but not 2.&lt;/p&gt;
&lt;p&gt;Play around with this setup more to become familiar.  Each window can subscribe to any number of channels, and each can send messages to any channel, whether it is subscribed to it or not.&lt;/p&gt;
&lt;h2&gt;Whats Next&lt;/h2&gt;
&lt;p&gt;We&#39;ve now setup and tested a Comet implementation.  You can see its benefits and understand how it works with STOMP.  In the next example we&#39;ll work on the client side of the Comet implementation and write a python STOMP client to handle processing and sending the data on a comet server.&lt;/p&gt;
&lt;p&gt;In the mean time you may want to look at the &lt;a href=&#34;http://localhost:9000/static/demos/&#34;&gt;other demo&#39;s&lt;/a&gt; that came with Orbited or &lt;a href=&#34;http://cometdaily.com/2008/10/10/scalable-real-time-web-architecture-part-2-a-live-graph-with-orbited-morbidq-and-jsio/&#34;&gt;Michael&#39;s Demo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; &lt;a href=&#34;http://thingsilearned.com/2009/08/03/starting-out-with-comet-orbited-part-3-e28093-the-client/&#34;&gt;Part 3 - The Client&lt;/a&gt; is now available.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Starting Out With Comet (Orbited) Part 1</title>
            <author><name>dave</name></author>
            <link href="/2009/06/09/starting-out-with-comet-orbited-part-1/"/>
            <updated>2009-06-09</updated>
            <published>2009-06-09</published>
            <id>/2009/06/09/starting-out-with-comet-orbited-part-1/</id>
                        <category   scheme="/blog/tags/"
                        term="comet"
                        label="Comet" />
                        <category   scheme="/blog/tags/"
                        term="Orbited"
                        label="Orbited" />
            
            <content type="html">
                             &lt;p&gt;This is the first article in a series I&#39;m creating to ease developers into using Comet.  The documentation is severely lacking on every comet implementation I&#39;ve come across which I think is Comet&#39;s biggest limitation at the moment. Hopefully this will help those interested in Comet to struggle less with their implementations than I did/do.&lt;/p&gt;
&lt;p&gt;The series will specifically focus on using the &lt;a href=&#34;http://orbited.org/&#34;&gt;Orbited&lt;/a&gt; implementation of Comet, but many of the concepts will apply to other Comet implementations as well.&lt;/p&gt;
&lt;p&gt;This first post will explain some terms and concepts you need to become familiar with.&lt;/p&gt;
&lt;h2&gt;Comet&lt;/h2&gt;
&lt;p&gt;Comet is a term referring to a set of techniques (hacks) that enable the server to push data to the client whenever it wants.  Traditionally the client has to initiate all requests.  If the server wants to send something to the client it has to wait until the client chooses to connect again.&lt;/p&gt;
&lt;p&gt;Comet is a set of methods for the server to ping the client.&lt;/p&gt;
&lt;p&gt;As a definition, Comet is as arbitrary as the word AJAX.  Try not to get hung up on the word any more than you&#39;d get hung up on defining what AJAX is.&lt;/p&gt;
&lt;h2&gt;What and Why Orbited&lt;/h2&gt;
&lt;p&gt;Orbited is a Python based implementation of Comet using the Twisted framework.  There&#39;s not a lot out there discussing the pro&#39;s and cons of the different comet services so its hard to tell which implementation is better than another.  There is clearly not yet a dominant implementation.&lt;/p&gt;
&lt;p&gt;I basically chose Orbited because it was the first one I could get up and running thanks to &lt;a href=&#34;http://cometdaily.com/2008/10/10/scalable-real-time-web-architecture-part-2-a-live-graph-with-orbited-morbidq-and-jsio/&#34;&gt;this tutorial&lt;/a&gt;, because I love python, and because my implementation will be working with Django.&lt;/p&gt;
&lt;p&gt;Orbited is built on the Twisted framework and is event based, so in theory it should scale just fine.&lt;/p&gt;
&lt;p&gt;Its important to note that Orbited has both a server side component and a JavaScript library for dealing with the client side of Comet connections as well.&lt;/p&gt;
&lt;h2&gt;Long-Polling&lt;/h2&gt;
&lt;p&gt;Long-polling is the technique Orbited uses to maintain a consistent real-time connection between the server and the client, enabling the server to push data to the client whenever it wants. Put simply the client makes a request that is kept open (no immediate response is returned).  The server can continue to send data to the client through this open connection until it is terminated by the client.&lt;/p&gt;
&lt;h2&gt;Streaming&lt;/h2&gt;
&lt;p&gt;Streaming is another Comet technique.  Michael Carter, one of Orbited&#39;s main contributors has a &lt;a href=&#34;http://cometdaily.com/2007/11/16/more-on-long-polling/&#34;&gt;nice article&lt;/a&gt; on the advantages of the two techniques.&lt;/p&gt;
&lt;h2&gt;STOMP&lt;/h2&gt;
&lt;p&gt;Short for &lt;em&gt;Streaming Text Orientated Messaging Protocol&lt;/em&gt;, STOMP is is a message passing protocol commonly used in Comet implementations.  It enables a publish/subscribe (pub/sub) model that comes in handy in many real-time applications.&lt;/p&gt;
&lt;p&gt;STOMP isn&#39;t a required part of a Comet implementation, but we&#39;re going to be using it in this series.&lt;/p&gt;
&lt;h2&gt;MorbidQ&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://www.morbidq.com/&#34;&gt;MorbidQ&lt;/a&gt; is a STOMP server that comes with Orbited.  Think of it as Apache, but for STOMP instead of web apps.  Its great in that its easy to set up and work with, but its not robust enough for a significant load.  When deploying you should instead use &lt;a href=&#34;http://www.rabbitmq.com/&#34;&gt;RabbitMQ&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Pub/Sub&lt;/h2&gt;
&lt;p&gt;In the following posts we will be using a publish/subscribe model thanks to the help of STOMP.  With this model you can create channels and both publish and subscribe to them.  This model works great when multiple clients are listening to the same thing, such as a group chat or a game.&lt;/p&gt;
&lt;p&gt;I like to think of it as a telegraphy system.  A whole bunch of people can hook up to the wire, and if they do they hear everything everyone else is broadcasting, and can broadcast their own messages as well.&lt;/p&gt;
&lt;p&gt;So subscribing is like hooking up your headphones to the transmission lines and publishing is like sending out a signal with your &lt;a href=&#34;http://en.wikipedia.org/wiki/File:L-Telegraph1.png&#34;&gt;morse key&lt;/a&gt;.  A different channel would correspond to a different wire.&lt;/p&gt;
&lt;h2&gt;Orbited Server&lt;/h2&gt;
&lt;p&gt;Comet requires an event based server to deal with the long requests.  Typical servers like Apache for instance were designed to handle a request as quickly as possible.  They allocate memory to returning a response as soon as a request is received, and maintain that memory until a response is returned.&lt;/p&gt;
&lt;p&gt;An event-based server such as Orbited can chop up the different components of the request/response process.  It can accept a request and then forget about it while allocating its memory elsewhere until at some later point something needs to be done (a response returned or data transmitted).  For this reason it can handle dramatically more open connections than Apache.&lt;/p&gt;
&lt;p&gt;Lets use an example.  Pretend we have a typical Apache hosted site that attracts 10,000 people every hour.  Lets say with that amount of traffic we get on average 50 new page requests every second and it takes about a second to return each page.  That means Apache has at any given time about 50 open connections.  That&#39;s what it is designed to do.&lt;/p&gt;
&lt;p&gt;But if we now put Comet on that site, all 10,000 of those users need to have a long connection open with our server.  Similar to the first estimate lets say only 50 of them are really receiving any data at any point.  Our Comet server will only assign memory to the tasks of those 50 connections, where Apache would attempt to assign an equal amount of memory to all 10,000 open connections.&lt;/p&gt;
&lt;p&gt;That&#39;s why its important in Comet to separate connections from events, or why we use Orbited (or equivalent comet server) instead of Apache.&lt;/p&gt;
&lt;h2&gt;Continuing...&lt;/h2&gt;
&lt;p&gt;That&#39;s it for my explanations/intro post.  I&#39;m fairly new to the Comet scene myself and am very busy with my startup.  I&#39;m sure there are a lot of additions or corrections, please leave them in the comments and I will try to keep up with corrections..&lt;/p&gt;
&lt;p&gt;I&#39;ll put more time in this depending on how much interest there is in the comments and &lt;a href=&#34;http://thingsilearned.com/feed/&#34;&gt;subscribriptions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The next post will be an example implementation.&lt;/p&gt;
&lt;p&gt;Update:  Continue to the next post in the series: &lt;a href=&#34;http://thingsilearned.com/2009/06/25/starting-out-with-comet-orbited-part-2-installation-and-stomp/&#34;&gt;Starting Out With Comet (Orbited) Part 2 - Installation and STOMP&lt;/a&gt;&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">New Blog Design By Amanda Scharlemann</title>
            <author><name>dave</name></author>
            <link href="/2009/06/08/new-blog-design-by-amanda-scharlemann/"/>
            <updated>2009-06-08</updated>
            <published>2009-06-08</published>
            <id>/2009/06/08/new-blog-design-by-amanda-scharlemann/</id>
                        <category   scheme="/blog/tags/"
                        term="Design"
                        label="Design" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;A few weeks ago I published a request for a &lt;a href=&#34;http://thingsilearned.com/2009/04/12/wanted-generous-blog-designer/&#34;&gt;generous designer&lt;/a&gt; to create a unique look for this blog.  &lt;a href=&#34;http://gustaf.blc.edu/~ascharlemann08/Mandyland/Mandyland.html&#34;&gt;Amanda Scharlemann&lt;/a&gt; was the first to respond and was a pleasure to work with!&lt;/p&gt;
&lt;p&gt;Amanda is a design student at Bethany Lutheran College and shows great potential.  She had never worked with customizing Wordpress Templates and the annoying restrictions that come with that, but was eager and quick to learn.  We went through several iterations to narrow down exactly what I was looking for and she spent a lot of time examining the example sites I gave her to get a feel for what I would like.  At each iteration she had significant improvements, helpful advice, and most importantly was open and attentive to feedback.&lt;/p&gt;
&lt;p&gt;I dislike design processes where the designer is stubbornly biased in certain directions and completes 90% of the work before you&#39;re allowed to review.  Amanda was not that way at all.  I&#39;m not sure if they teach client-design relationships at Bethany or not, but she was a pleasure to work with.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://gustaf.blc.edu/~ascharlemann08/Mandyland/Mandyland.html&#34;&gt;Check out her resume&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The custom design was launched last week, and so far the results have been great.  I&#39;ve seen a doubling in traffic, and several more comments than usual.  Perhaps  the most impressive statistic so far is that a &lt;a href=&#34;http://thingsilearned.com/2009/06/02/tictactoe-in-jquery/#comments&#34;&gt;friend I hadn&#39;t talked to in a while&lt;/a&gt; came across my blog while goggling an issue he was having.  My article apparently helped him and he was excited to notice (thanks to the personalized sidebar) that the blog belonged to me!&lt;/p&gt;
&lt;p&gt;Over time I will probably tweak things here and there as is my nature but I&#39;m over all very pleased with the new look.&lt;/p&gt;
&lt;p&gt;Thanks again Amanda!&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Find RSS Feed Links With jQuery</title>
            <author><name>dave</name></author>
            <link href="/2009/06/03/find-rss-feed-links-with-jquery/"/>
            <updated>2009-06-03</updated>
            <published>2009-06-03</published>
            <id>/2009/06/03/find-rss-feed-links-with-jquery/</id>
                        <category   scheme="/blog/tags/"
                        term="feeds"
                        label="Feeds" />
                        <category   scheme="/blog/tags/"
                        term="javascript"
                        label="Javascript" />
                        <category   scheme="/blog/tags/"
                        term="jQuery"
                        label="Jquery" />
            
            <content type="html">
                             &lt;p&gt;This took me a little while to figure out so I thought I&#39;d share.  You can use a &lt;a href=&#34;http://docs.jquery.com/Selectors&#34;&gt;jQuery selector&lt;/a&gt; to find any RSS links on a page very easily.&lt;/p&gt;
&lt;p&gt;The following line will return a list of the RSS link elements.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var link_elements = $(&#39;link[type=&#34;application/rss+xml&#34;]&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following snippet will create an array of all the urls to the RSS feeds on the page.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var links = [];
$(&#39;link[type=&#34;application/rss+xml&#34;]&#39;).each(function() { links[links.length] = this.href; });
&lt;/code&gt;&lt;/pre&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Google AJAX Feed API Example with Socialbrowse</title>
            <author><name>dave</name></author>
            <link href="/2009/06/03/google-ajax-feed-api-example/"/>
            <updated>2009-06-03</updated>
            <published>2009-06-03</published>
            <id>/2009/06/03/google-ajax-feed-api-example/</id>
                        <category   scheme="/blog/tags/"
                        term="api"
                        label="Api" />
                        <category   scheme="/blog/tags/"
                        term="feeds"
                        label="Feeds" />
                        <category   scheme="/blog/tags/"
                        term="javascript"
                        label="Javascript" />
                        <category   scheme="/blog/tags/"
                        term="socialbrowse"
                        label="Socialbrowse" />
            
            <content type="html">
                             &lt;p&gt;Today I learned that Google has a really awesome &lt;a href=&#34;http://code.google.com/apis/ajaxfeeds/documentation/&#34;&gt;AJAX API for RSS and Atom feeds&lt;/a&gt;.  It allows you to access RSS or Atom feeds using JavaScript in both JSON and XML format without having to setup your own proxy or deal with anything on the server side.&lt;/p&gt;
&lt;p&gt;They have a lot of great &lt;a href=&#34;http://code.google.com/apis/ajaxfeeds/examples.html&#34;&gt;examples&lt;/a&gt;, but I thought I&#39;d share mine with the usecase of showing the feed of my &lt;a href=&#34;http://socialbrowse.com&#34;&gt;Socialbrowse&lt;/a&gt; shares.  In your Socialbrowse settings you can &lt;a href=&#34;http://socialbrowse.com/profile/edit/sharing/&#34;&gt;specify a public share name&lt;/a&gt;.  Once added 3 feeds will be created for you&lt;/p&gt;
&lt;p&gt;profile:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://socialbrowse.com/shares/dave/&#34;&gt;http://socialbrowse.com/shares/PUBLIC_NAME/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;shares rss:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://socialbrowse.com/rss/uname/dave/&#34;&gt;http://socialbrowse.com/rss/uname/PUBLIC_NAME/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;feed rss:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://socialbrowse.com/rss/socialfeed/dave/&#34;&gt;http://socialbrowse.com/rss/socialfeed/PUBLIC_NAME/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;where PUBLIC_NAME is the share name you chose.&lt;/p&gt;
&lt;p&gt;For this example we&#39;re going to fetch and display the &#34;shares rss&#34; feed using the Google AJAX Feeds API.  The example is simulating the &lt;a href=&#34;http://socialbrowse.com/blog/2009/jan/6/embed-new-socialbrowse-blog-widget-get-some-link-l/&#34;&gt;Socialbrowse blog widget&lt;/a&gt; Zack created a few months ago.&lt;/p&gt;
&lt;p&gt;To use the Feeds API you need to &lt;a href=&#34;http://code.google.com/apis/ajaxfeeds/signup.html&#34;&gt;get a key&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now we have everything we need.  Create an HTML file and paste in the following code.  Make sure to change YOUR_API_KEY, and the feed_title and feed_url variables to your values.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;

    &amp;lt;script&amp;gt;
      var feed_title = &#34;Dave&#39;s Socialbrowse Feed&#34;;
      var feed_url = &#34;http://socialbrowse.com/rss/uname/PUBLIC_NAME/&#34;;
    &amp;lt;/script&amp;gt;

    &amp;lt;script src=&#34;http://www.google.com/jsapi?key=ABQIAAAAmcnSI-mFmfJW8bidL13qfRQHElLAWyCZ_TZ_pzrAvWp3ncTV5hRgCPRM76Ub8GIqowNBQZMVWYastg&#34; type=&#34;text/javascript&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script type=&#34;text/javascript&#34;&amp;gt;

      google.load(&#34;feeds&#34;, &#34;1&#34;);

      function initialize() {
        var feedControl = new google.feeds.FeedControl();
        feedControl.addFeed(feed_url, feed_title);
        feedControl.draw(document.getElementById(&#34;feedControl&#34;));
      }
      google.setOnLoadCallback(initialize);

    &amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;

  &amp;lt;body&amp;gt;
    &amp;lt;div id=&#34;feedControl&#34;&amp;gt;Loading&amp;lt;/div&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Viewing the page in a browser will result in something that looks like this&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;feed&#34; src=&#34;http://thingsilearned.files.wordpress.com/2009/06/feed1.gif&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Its not very pretty but its easy enough to style it however you like using CSS.  This code can be added anywhere you&#39;d like to display your Socialbrowse shares.&lt;/p&gt;
&lt;p&gt;Finally, note that this code can be used with any feed, not just Socialbrowse.  If you want to display the latest &lt;a href=&#34;http://news.google.com&#34;&gt;Google News&lt;/a&gt; for example simply change the feed variables to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;      var feed_title = &#34;Google News&#34;;
      var feed_url = &#34;http://news.google.com/news?pz=1&amp;amp;ned;=us&amp;amp;hl;=en&amp;amp;topic;=h&amp;amp;num;=3&amp;amp;output;=rss&#34;;
&lt;/code&gt;&lt;/pre&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">TicTacToe in jQuery</title>
            <author><name>dave</name></author>
            <link href="/2009/06/02/tictactoe-in-jquery/"/>
            <updated>2009-06-02</updated>
            <published>2009-06-02</published>
            <id>/2009/06/02/tictactoe-in-jquery/</id>
                        <category   scheme="/blog/tags/"
                        term="games"
                        label="Games" />
                        <category   scheme="/blog/tags/"
                        term="javascript"
                        label="Javascript" />
                        <category   scheme="/blog/tags/"
                        term="jQuery"
                        label="Jquery" />
            
            <content type="html">
                             &lt;p&gt;As a demo application for a project of mine I wrote &lt;a href=&#34;http://tictac.appjet.net&#34;&gt;TicTacToe&lt;/a&gt; in Javascript using the jQuery framework.&lt;/p&gt;
&lt;p&gt;I&#39;ve added excessive comments to the code to provide an easy walk-through example on the jQuery/Javascript game.  I&#39;m in no way a JavaScript expert, there are a hundred different ways to program TicTacToe, and this code is far from clean but here it is!&lt;/p&gt;
&lt;p&gt;There are just two files, the HTML page, and a page holding the javascript.&lt;/p&gt;
&lt;h4&gt;tictactoe.html&lt;/h4&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;src=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;src=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;tictactoe.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-6&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-8&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;.board&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-10&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1px&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;solid&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;green&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-11&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;600px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-12&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;600px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-14&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-15&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-16&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;center&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-17&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;n&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;center&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-19&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;td&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-21&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;200px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-22&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;200px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-23&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;center&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-24&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;vertical-align&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;middle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-25&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;100px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-26&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;font-weight&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;bold&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-27&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;green&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-28&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;font-family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;geniva&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verdana&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;helvetica&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-29&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1px&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;solid&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;green&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-31&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;#menu&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-33&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;text-align&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;center&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-34&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;absolute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-35&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-36&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-37&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;margin-left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;100px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-38&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;margin-top&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;100px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-39&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5px&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;red&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-40&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;none&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-41&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;vertical-align&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;middle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-42&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;white&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-44&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-45&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nf&#34;&gt;#play_again&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-46&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;20px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-47&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;green&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-48&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-49&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-50&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-51&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-52&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-53&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-54&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-55&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-56&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;table&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;align=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;center&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;border=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;0px&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-57&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-58&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;menu&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-59&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;board&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-60&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-61&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-62&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-63&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;HTML&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;h4&gt;tictactoe.js&lt;/h4&gt;
&lt;p&gt;&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cm&#34;&gt;/&lt;em&gt; Main Game Handling class &lt;/em&gt;/&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TicTacToe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;nx&#34;&gt;turn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;O&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// Keeps a record of who&amp;#39;s turn it is&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;nx&#34;&gt;board&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// Keeps a record of the TicTacToe Board&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;nx&#34;&gt;win&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// records who won if the game is over&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-6&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-7&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cm&#34;&gt;/&lt;em&gt; Clears and starts a new game with a new board &lt;/em&gt;/&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-8&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;nx&#34;&gt;restartGame&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-9&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;c1&#34;&gt;// Draw the board&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-10&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;board_table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;table cellpadding=&amp;quot;0px&amp;quot; cellspacing=&amp;quot;0px&amp;quot; align=&amp;quot;center&amp;quot; border=&amp;quot;0px&amp;quot; class=&amp;quot;board&amp;quot;&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td id=&amp;quot;ttt0&amp;quot;&amp;gt; &amp;lt;/td&amp;gt;&amp;lt;td id=&amp;quot;ttt1&amp;quot;&amp;gt; &amp;lt;/td&amp;gt;&amp;lt;td id=&amp;quot;ttt2&amp;quot;&amp;gt; &amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td id=&amp;quot;ttt3&amp;quot;&amp;gt; &amp;lt;/td&amp;gt;&amp;lt;td id=&amp;quot;ttt4&amp;quot;&amp;gt; &amp;lt;/td&amp;gt;&amp;lt;td id=&amp;quot;ttt5&amp;quot;&amp;gt; &amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td id=&amp;quot;ttt6&amp;quot;&amp;gt; &amp;lt;/td&amp;gt;&amp;lt;td id=&amp;quot;ttt7&amp;quot;&amp;gt; &amp;lt;/td&amp;gt;&amp;lt;td id=&amp;quot;ttt8&amp;quot;&amp;gt; &amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-11&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;#board&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;board_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-12&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;#menu&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;hide&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-13&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-14&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;c1&#34;&gt;// clear the board&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-15&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;board&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-16&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-17&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;c1&#34;&gt;// Add on-click events to each of the boxes of the board&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-18&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;#board td&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-19&#34;&gt;&lt;/a&gt;          &lt;span class=&#34;nx&#34;&gt;TicTacToe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;move&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-20&#34;&gt;&lt;/a&gt;         &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-21&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-22&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-23&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-24&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cm&#34;&gt;/&lt;em&gt; Handles clicks spaces on the board &lt;/em&gt;/&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-25&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;nx&#34;&gt;move&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-26&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;space&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// Board space table element&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-27&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;ttt&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// # representing the space on the board&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-28&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-29&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;c1&#34;&gt;// If no one&amp;#39;s gone there, and the game isn&amp;#39;t over, go there!&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-30&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;board&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;win&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-31&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;nx&#34;&gt;space&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;turn&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-32&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;board&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;turn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-33&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nextTurn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// End turn&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-34&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-35&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-36&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-37&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cm&#34;&gt;/&lt;em&gt; Iterate turn and check if anyone one yet &lt;/em&gt;/&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-38&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;nx&#34;&gt;nextTurn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-39&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;turn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;turn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;O&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;X&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;O&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-40&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;win&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;check4Win&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-41&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;win&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-42&#34;&gt;&lt;/a&gt;          &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;endGame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-43&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-44&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-45&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-46&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cm&#34;&gt;/&lt;em&gt; Display who won and options for new games &lt;/em&gt;/&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-47&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;nx&#34;&gt;endGame&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-48&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-49&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;win&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Cat&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-50&#34;&gt;&lt;/a&gt;          &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;#menu&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Cats Game.&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-51&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-52&#34;&gt;&lt;/a&gt;          &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;#menu&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;win&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot; wins!&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-53&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-54&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;#menu&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;lt;div id=&amp;quot;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;play_again&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;gt;Play Again&amp;lt;/div&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-55&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-56&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;c1&#34;&gt;// Button for playing again.&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-57&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;#play_again&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TicTacToe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;restartGame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-58&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;#menu&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-59&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;win&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-60&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-61&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-62&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-63&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;c1&#34;&gt;// If any of these patters of board spaces have all X&amp;#39;s or all O&amp;#39;s somebody won!&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-64&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;nx&#34;&gt;wins&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-65&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-66&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cm&#34;&gt;/&lt;em&gt; Check for whether someone won the game of it was a Cat&amp;#39;s game. &lt;/em&gt;/&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-67&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;nx&#34;&gt;check4Win&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-68&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-69&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;c1&#34;&gt;// Loop through all possible winning combinations&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-70&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;wins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-71&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pattern&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;wins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-72&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;board&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;board&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;board&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]];&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-73&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;XXX&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-74&#34;&gt;&lt;/a&gt;              &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// X Won!&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-75&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;OOO&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-76&#34;&gt;&lt;/a&gt;              &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;O&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// O Won!&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-77&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-78&#34;&gt;&lt;/a&gt;          &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-79&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-80&#34;&gt;&lt;/a&gt;          &lt;span class=&#34;c1&#34;&gt;// Check if all spaces in the board are filled, then its a Cat&amp;#39;s game&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-81&#34;&gt;&lt;/a&gt;          &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-82&#34;&gt;&lt;/a&gt;          &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;board&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-83&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;board&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cnt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-84&#34;&gt;&lt;/a&gt;          &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-85&#34;&gt;&lt;/a&gt;          &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-86&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Cat&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// Cat&amp;#39;s game!&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-87&#34;&gt;&lt;/a&gt;          &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-88&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-89&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-90&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-91&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-92&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-93&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;c1&#34;&gt;// Start a game!&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-94&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;nx&#34;&gt;TicTacToe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;restartGame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-95&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;JavaScript&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;I&#39;d originally setup the game on &lt;a href=&#34;http://appjet.com&#34;&gt;AppJet&lt;/a&gt; but unfortunately today they &lt;a href=&#34;http://appjet.com/hosting&#34;&gt;announced&lt;/a&gt; that they are closing down their framework and free hosting for a while to focus on one of their successful apps &lt;a href=&#34;http://etherpad.com&#34;&gt;EtherPad&lt;/a&gt;.  For at least the next month however you can &lt;a href=&#34;http://tictac.appjet.net/&#34;&gt;play the game here&lt;/a&gt;, and &lt;a href=&#34;http://appjet.com/app/188579215/source&#34;&gt;play with the source code here&lt;/a&gt;.  Feel free to use my code in any way.&lt;/p&gt;
&lt;p&gt;If you do use the source for something, or have suggestions on improvements make sure to leave a comment.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">GNU Screen Basic Tutorial</title>
            <author><name>dave</name></author>
            <link href="/2009/05/26/gnu-screen-super-basic-tutorial/"/>
            <updated>2009-05-26</updated>
            <published>2009-05-26</published>
            <id>/2009/05/26/gnu-screen-super-basic-tutorial/</id>
                        <category   scheme="/blog/tags/"
                        term="deployment"
                        label="Deployment" />
            
            <content type="html">
                             &lt;p&gt;If you&#39;ve ever SSHed into a server, ran something, logged off and got frustrated because whatever you were running stopped running because you had to change coffee shops or go to class then you&#39;ve experienced the need for &lt;a href=&#34;http://www.kuro5hin.org/story/2004/3/9/16838/14935&#34;&gt;GNU Screen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Put simply it allows you to maintain a persistent session, a terminal that does not change or quit just because you logged out.  Installation is easy.  On a debian machine its simply&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install screen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Usage is straight forward as well.  Type the word &#34;screen&#34;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ screen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and you&#39;ll be shown a welcome window, press space to get through.  Now you&#39;ll simply see a standard shell.  You can execute whatever you want here and the session will not die until you tell it to.  You can start many different sessions and toggle between them.  Here&#39;s a table of the basic controls for screen.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Ctl-a Ctl-c&lt;/em&gt;,  create a new window&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Ctl-a Ctl-a&lt;/em&gt;,  switch between windows&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Ctl-a n&lt;/em&gt;, toggle to next window&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Ctl-a p&lt;/em&gt;, toggle to previous window&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Ctl-a 5&lt;/em&gt;, toggle to 5th window&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Ctl-a &#34;&lt;/em&gt;, get a menu listing all of the window&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Ctl-a A&lt;/em&gt;, tool for adding a name to your window, helpful for the menu view&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Ctl-a k&lt;/em&gt;, Kills the window&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Ctl-a d&lt;/em&gt;, Detach from the session&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another thing to note.  Once you detach from a screen, you need to re-attache the next time you run screen.  To do that simply specify the -r parameter.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ screen -r
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Update 6-3-2009:&lt;/strong&gt;&lt;/em&gt; A few fixes were made thanks to Ben Finney&#39;s comments&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Deploying MoinMoin on Ubuntu using Apache mod_wsgi</title>
            <author><name>dave</name></author>
            <link href="/2009/05/21/deploying-moinmoin-on-ubuntu-using-apache-mod_wsgi/"/>
            <updated>2009-05-21</updated>
            <published>2009-05-21</published>
            <id>/2009/05/21/deploying-moinmoin-on-ubuntu-using-apache-mod_wsgi/</id>
                        <category   scheme="/blog/tags/"
                        term="deployment"
                        label="Deployment" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
                        <category   scheme="/blog/tags/"
                        term="wiki"
                        label="Wiki" />
            
            <content type="html">
                             &lt;p&gt;I just went through a somewhat lengthy setup process to deploy a moinmoin wiki on Ubuntu.  There&#39;s a lot of documentation on it which actually makes it take a bit longer than I&#39;m used to for getting something running on Ubuntu.  I thought I&#39;d share my streamlined notes for this common deployment scenario.&lt;/p&gt;
&lt;p&gt;The first step is configuration.  Greater detail on all of this can be found &lt;a href=&#34;https://help.ubuntu.com/community/HelpOnInstalling/WikiInstanceCreation&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://static.moinmo.in/files/moin-1.8.3.tar.gz
tar -xzvf moin-1.8.3.tar.gz
cd moin-1.8.3

python setup.py install --prefix=&#39;/usr/local&#39; --record=install.log

#Setup the variables.
export PREFIX=/usr/local
export SHARE=$PREFIX/share/moin
export WIKILOCATION=&amp;lt;strong&amp;gt;/path/to/wikis&amp;lt;/strong&amp;gt;
export INSTANCE=&amp;lt;strong&amp;gt;your_wiki_name&amp;lt;/strong&amp;gt;
export GROUP=www-data
export USER=www-data

# Now it copies the default data
cd $WIKILOCATION
mkdir -P $INSTANCE                   # make a directory for this instance
cp -R $SHARE/data $INSTANCE       # copy template data directory
cp -R $SHARE/underlay $INSTANCE   # copy underlay data directory
cp $SHARE/config/wikiconfig.py $INSTANCE   # copy wiki configuration sample file

# Set the permissions
chown -R $USER.$GROUP $INSTANCE   # check that USER and GROUP are correct
chmod -R ug+rwX $INSTANCE         # USER.GROUP may read and write
chmod -R o-rwx $INSTANCE          # everybody else is rejected

# Copy over the server config files
cp/usr/local/share/moin/server/*.wsgi $INSTANCE
cp/usr/local/share/moin/server/*.cgi $INSTANCE

# If you want everyone (not just admins) to be able to edit it you need to run this command
# chmod -R a+rwX $INSTANCE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, if you haven&#39;t already install apache and mod_wsgi&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install apache2 libapache2-mod-wsgi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next edit your apache httpd.conf file ( /etc/apache2/httpd.conf ) and add the following to the end.  More help on this step can be found &lt;a href=&#34;https://help.ubuntu.com/community/HelpOnInstalling/ApacheWithModWSGI&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;LoadModule wsgi_module modules/mod_wsgi.so  # Loads mod_wsgi

&amp;lt;VirtualHost *&amp;gt;
ServerAdmin &amp;lt;strong&amp;gt;youremail@example.com&amp;lt;/strong&amp;gt;

ServerName &amp;lt;strong&amp;gt;wiki.example.com&amp;lt;/strong&amp;gt;

Alias /moin_static183/ &#34;/usr/local/share/moin/htdocs/&#34;
#ScriptAlias /developers &#34;&amp;lt;strong&amp;gt;/path/to/wikis/your_wiki_name&amp;lt;/strong&amp;gt;/moin.cgi&#34;

WSGIScriptAlias    / &amp;lt;strong&amp;gt;/path/to/wikis/your_wiki_name&amp;lt;/strong&amp;gt;/moin.wsgi
WSGIDaemonProcess developerwiki user=www-data group=www-data home=/root process=5 threads=10 maximum-requests=1000 umask=0007

WSGIProcessGroup developerwiki

&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And finally you need to add your wiki directory to the python path.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &#34;&amp;lt;strong&amp;gt;/path/to/wikis/your_wiki_name/&amp;lt;/strong&amp;gt;&#34; &amp;gt; /usr/lib/python2.5/site-packages/wikis.pth
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Restart Apache and you should be set up.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Using Arguments in a Shell Script</title>
            <author><name>dave</name></author>
            <link href="/2009/05/11/using-arguments-in-a-shell-script/"/>
            <updated>2009-05-11</updated>
            <published>2009-05-11</published>
            <id>/2009/05/11/using-arguments-in-a-shell-script/</id>
                        <category   scheme="/blog/tags/"
                        term="django"
                        label="Django" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;Within 5 seconds of looking at a shell script I&#39;m usually opening a new file in my text editor to re-write the ugliness into something that makes more visual sense.  To me at least python is highly preferable.&lt;/p&gt;
&lt;p&gt;Still I use shell scripts all the time to batch a group of commonly used sequential executions, or to abbreviate a commonly used but lengthy commands.&lt;/p&gt;
&lt;p&gt;Today I looked into going one step further into the complexities of shell scripts, probably my last step for a while, and discovered how to handle arguments.&lt;/p&gt;
&lt;p&gt;The inspiring work case was in using Django manager to run tests for the different apps&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./manage.py test --settings test_settings &amp;lt;optional app names&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following script will check if an argument exists and if it does it will use the argument in the tests command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if [ -n &#34;$1&#34; ]
# Test whether command-line argument is present (non-empty).
then
 ./manage.py test --settings test_settings $1
else
 ./manage.py test --settings test_settings
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that $1 refers to the first argument ($0 refers to the name of the executable and $5 refers to the 5th argument).&lt;/p&gt;
&lt;p&gt;Save the file as &#39;test&#39; and then modify it as an executable&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chmod +x test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And now I can run the tests on their own&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or with an argument app&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./test auth_user
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;Expanding&lt;/h5&gt;
&lt;p&gt;Note that the above example has a limitation of only dealing with the first argument and seems a bit redundant.  The entire script can indeed be shortened to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./manage.py test --settings test_settings $@
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As $@ represents all arguments after $0.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">&#39;drop&#39; Database Command for Django Manager</title>
            <author><name>dave</name></author>
            <link href="/2009/05/10/drop-database-command-for-django-manager/"/>
            <updated>2009-05-10</updated>
            <published>2009-05-10</published>
            <id>/2009/05/10/drop-database-command-for-django-manager/</id>
                        <category   scheme="/blog/tags/"
                        term="databases"
                        label="Databases" />
                        <category   scheme="/blog/tags/"
                        term="django"
                        label="Django" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;The Django manager is a really handy tool.  I wrote earlier about making your own custom managers and there is a lot of other great documentation on it.&lt;/p&gt;
&lt;p&gt;Django comes with a bunch of helpful management commands like &#39;flush&#39;, &#39;syncdb&#39;, &#39;test&#39;, etc.&lt;/p&gt;
&lt;p&gt;I&#39;ve created a generic &#39;drop&#39; command as I felt it was missing.  I often found myself going into mysql to drop and re-create a database.  This is needed whenever you significantly change your models and need to start over.  The &#39;drop&#39; command does that automatically using the database information in your settings file.&lt;/p&gt;
&lt;p&gt;The following code is from &lt;a href=&#34;http://dpaste.com/hold/42832/&#34;&gt;&#39;drop.py&#39;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.conf import settingsfrom django.conf import settings

from django.core.management.base import NoArgsCommand

class Command(NoArgsCommand):
 help = &#34;Drop and re-create the database&#34;
 def handle_noargs(self, **options):

 import MySQLdb

 print &#34;Connecting...&#34;
 db=MySQLdb.connect(host=settings.DATABASE_HOST or &#34;localhost&#34; ,user=settings.DATABASE_USER,
 passwd=settings.DATABASE_PASSWORD, port=int(settings.DATABASE_PORT or 3306))

 cursor = db.cursor()
 print &#34;Dropping database %s&#34; % settings.DATABASE_NAME
 cursor.execute(&#34;drop database %s; create database %s;&#34; % (settings.DATABASE_NAME, settings.DATABASE_NAME))
 print &#34;Dropped&#34;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To install simply place this code in a file called &#39;drop.py&#39; and add it to a management comands folder.  If you don&#39;t have a management command folder yet you simply need to create the following file structure in one of your app directories (MY-APP-DIR).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MY-APP-DIR/
  management/
    __init__.py
    commands/
      __init__.py
&amp;lt;strong&amp;gt;      drop.py

&amp;lt;/strong&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, whenever you&#39; need to whipe your database and start fresh you can simply run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./manage.py drop
&lt;/code&gt;&lt;/pre&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Testing AJAX Requests in Django</title>
            <author><name>dave</name></author>
            <link href="/2009/05/08/testing-ajax-requests-in-django/"/>
            <updated>2009-05-08</updated>
            <published>2009-05-08</published>
            <id>/2009/05/08/testing-ajax-requests-in-django/</id>
            
            <content type="html">
                             &lt;p&gt;Django has a really handy function on the request object that will determine if the request was an AJAX request (an XMLHttpRequest).&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is_ajax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Python&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;It simply checks whether the HTTP_X_REQUESTED_WITH header is equal to &#39;XMLHttpRequest&#39;, a standard that&#39;s supported by most javascript libraries.  You can read more about it and see the list of supporting frameworks &lt;a href=&#34;http://docs.djangoproject.com/en/dev/ref/request-response/#django.http.HttpRequest.is_ajax&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It&#39;d be great if the Django client had a simple client.ajax request in addition to its client.post and client.get requests, but alas it doesn&#39;t.  The tests can still be done however by changing the HTTP_X_REQUESTED_WITH header when sending  your test requests.&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.test.client&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Client&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://example.com&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;HTTP_X_REQUESTED_WITH&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;XMLHttpRequest&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Python&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;From there its fairly straight forward to create your own .ajax wrapper if you&#39;d like.&lt;/p&gt;
&lt;p&gt;Now you have no excuse for not having complete tests for all of your XMLHttpRequests :).&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Some Notes and Requests on Django Signals</title>
            <author><name>dave</name></author>
            <link href="/2009/05/06/some-notes-and-requests-on-django-signals/"/>
            <updated>2009-05-06</updated>
            <published>2009-05-06</published>
            <id>/2009/05/06/some-notes-and-requests-on-django-signals/</id>
                        <category   scheme="/blog/tags/"
                        term="django"
                        label="Django" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://www.swanniganandwright.com/3.0/test/phone-wires.jpg&#34; /&gt;I&#39;ve finally gotten around to playing with the &lt;a href=&#34;http://docs.djangoproject.com/en/dev/topics/signals/&#34;&gt;Django Signals&lt;/a&gt;.  I&#39;ve been pleased so far but I feel its currently missing a few key features.&lt;/p&gt;
&lt;p&gt;Some background: Django Signals allows developers to more easily break up their code into separate components which allows much greater freedom and organization.  Often as a web application expands you add more an more functionality to each of the events.  When a new user is created for example the program might need to spin off a few emails, maybe search for whether any of their friends are the site, store an extra statistic, etc...&lt;/p&gt;
&lt;p&gt;When adding or removing these features developers would previously have to paste more code into their create_new_user function.  Now however developers can creaet a Django Signal in creaet_new_user function and then build other functions (sending email, storing stats, etc) as seperate listeners for that signal.&lt;/p&gt;
&lt;p&gt;It makes everything more modular.  Lots of other languages have this.  If you&#39;re a hardware developer its similar to interupts, if you&#39;re a javascript developer its similar to events.&lt;/p&gt;
&lt;p&gt;So reading about them I&#39;ve been excited about the possibilities and have been looking forward to putting them to use.  I&#39;ve got to say its incredibly simple, works great and I&#39;m going to start using them all the time.&lt;/p&gt;
&lt;p&gt;That said there is a lot of growth yet to be done in this area.  With that in mind I&#39;m going to make two requests fully aware of the fact that most people will say &#34;add it yourself&#34; or &#34;just use the patch&#34; or &#34;roll your own&#34;.  Some of which I will ofcourse do, still I continue to blog...&lt;/p&gt;
&lt;h4&gt;Request: ManyToMany Signals&lt;/h4&gt;
&lt;p&gt;A great feature is that django automatically has signals set up for many of the common tasks.  There are signals fired when objects are saved and deleted and when requests are made and finished.  Currently there is no signals for ManyToMany relationships.  There is a &lt;a href=&#34;http://code.djangoproject.com/ticket/5390&#34;&gt;ticket&lt;/a&gt; and a &lt;a href=&#34;http://code.djangoproject.com/attachment/ticket/5390/complete-patch.diff&#34;&gt;patch&lt;/a&gt; on the issue but it has not been released in the trunk of yet.&lt;/p&gt;
&lt;p&gt;A simple example with &lt;a href=&#34;http://socialbrowse.com&#34;&gt;Socialbrowse&lt;/a&gt; is in following other people in the network.  In Django following someone is easy:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;userprofile.following.add( other_userprofile )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Man it&#39;d be great if there was a signal on that!  Unfortunately I had to make a wrapper funtion in UserProfile.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import django.dispatch
followed_signal = django.dispatch.Signal(providing_args=[&#34;followed&#34;, ])
def follow(self, dude_to_follow):
  &#34;&#34;&#34; follow the input &amp;lt;dude_to_follow&amp;gt; &#34;&#34;&#34;
  self.following.add( dude_to_follow )

  # Send out a django signal
  followed_signal.send(sender = self, followed = dude_to_follow)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I know, its not a big deal, I&#39;m a big baby, but that stuff does add up eventually.  Hopefully &lt;a href=&#34;http://code.djangoproject.com/ticket/5390&#34;&gt;Ticket #5390&lt;/a&gt; will be merged shortly.  The comments seem to suggest that its ready.&lt;/p&gt;
&lt;h4&gt;Request: Asynchronous Signals&lt;/h4&gt;
&lt;p&gt;It seems that I&#39;m &lt;a href=&#34;http://www.mercurytide.co.uk/news/article/django-signals/&#34;&gt;not the only one to assume&lt;/a&gt; that Django Signals created Asynchronous tasks.  If you come from a Javascript or Hardware world you would assume asycronous signals, as both JS events and hardware interrupts are asyncronous.&lt;/p&gt;
&lt;p&gt;Unfortunately Django Signals are not.  That&#39;s great in many cases, but I think it should support both. Sending emails for example tends to take a sigificant amount of time, mostly spent waiting around.  It would be great if the request could continue on and return, independant of the email task, instead of having to wait for it to complete.&lt;/p&gt;
&lt;p&gt;The result would be a much faster experience for the user, and I think Django Signals is the place to put that type of functionality in.   The ideal interface would be specifying an extra input &#39;async&#39; when registering a listener.  If true the process calling the signal would not wait for the listener to finish.&lt;/p&gt;
&lt;p&gt;Continuing with the follow example above the code would look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def email_follow_notification(sender, **kwargs):
...    # do some emailing here
followed_signal.connect(email_follow_notification, async = True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The email_follow_notification function would then be run in a seperate process, allowing everything else to continue on without waiting.&lt;/p&gt;
&lt;p&gt;Those are my notes for now.  I&#39;m sure I&#39;ll have more and maybe some contributions in the form of real code.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Road Bikes are Waaaay Better than Target Bikes</title>
            <author><name>dave</name></author>
            <link href="/2009/05/03/road-bikes-are-waaaay-better-than-target-bikes/"/>
            <updated>2009-05-03</updated>
            <published>2009-05-03</published>
            <id>/2009/05/03/road-bikes-are-waaaay-better-than-target-bikes/</id>
                        <category   scheme="/blog/tags/"
                        term="life"
                        label="Life" />
            
            <content type="html">
                             &lt;p&gt;Recently I bought a junky Road bike to hold me over for a while in Minnesota while I build my return to my beautiful road bike in California.  I&#39;m leaving it there for now for several reasons.  It costs a lot to ship, I&#39;m never sure how much longer I&#39;ll be in Minnesota, and I think its happier being periodically peddled around the Stanford Campus in beautiful Palo Alto than sitting in a garage most of the time here, even if its being peddled by legs that are not my own.&lt;/p&gt;
&lt;p&gt;But anyway, this new bike reminds me of why until last year I never really enjoyed biking.  I used to think it was because I didn&#39;t have good places to bike to, and that with the exception of a few extremists bicycling is a highly seasonal activity in Minnesota.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;old-rusty-bike1&#34; src=&#34;http://thingsilearned.files.wordpress.com/2009/05/old-rusty-bike1.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;But I was wrong.  Sure those things contribute but the main factor was the bike.  I always had cheap generic bikes from Target, Walmart, or some such place.  These bikes change gears horribly, are overweight, slow, and just ruin the overall biking experience.&lt;/p&gt;
&lt;p&gt;A road bike is lightweight, designed for going fast, and gears change with ease.  All of the gears are helpful, not just the highest and lowest.  There&#39;s no struggling painfully up heavy inclines or excessive pedaling due to gears not shifting.  &lt;img alt=&#34;&#34; src=&#34;http://www.abikestore.com/Merchant2/graphics/00000003/rb_rle18.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;On a road bike I&#39;ve never hopped off to walked up a hill because it was just a lot easier.  On my new crappy mountain bike I feel like doing that all the time.&lt;/p&gt;
&lt;p&gt;For these reasons I feel angry at Target and other similar stores.  Why do they make and sell such poorly designed bikes?  Why do you only sell mountain bikes and a few &#39;hybrids&#39;?  Shouldn&#39;t the large tires cost more?  How many people actually bike dirttrains anymore?  Is it that tough to get the whole shifting gears thing down?  Can I have those years of not enjoying biking back?&lt;/p&gt;
&lt;p&gt;At the same time I feel upset with the bike shops.  Why do road bikes have to be so expensive?  Why are they exclusive to your niche stores?  Can&#39;t you keep it under $300?&lt;/p&gt;
&lt;p&gt;I will probably never get an answer to those questions...&lt;/p&gt;
&lt;p&gt;I never would have bought a road bike had it not been my only means of transportation for a year and had I not run into such an amazing deal on a used one.  It angers me that I so closely missed out because bicycling is now one of my favorite hobbies and my preferred method of transportation assuming painful weather conditions and a reasonable distance.&lt;/p&gt;
&lt;p&gt;I wish there were reasonably priced ($200) road bikes for casual biking.  Around here I see garages full of bikes all the time and they&#39;re always big framed mountain bikes with fat tires.  I don&#39;t get it.  I think there&#39;s a missing market there.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Simple MySQLdb Example</title>
            <author><name>dave</name></author>
            <link href="/2009/05/03/simple-mysqldb-example/"/>
            <updated>2009-05-03</updated>
            <published>2009-05-03</published>
            <id>/2009/05/03/simple-mysqldb-example/</id>
                        <category   scheme="/blog/tags/"
                        term="example"
                        label="Example" />
                        <category   scheme="/blog/tags/"
                        term="mysqldb"
                        label="Mysqldb" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
                        <category   scheme="/blog/tags/"
                        term="sql"
                        label="Sql" />
            
            <content type="html">
                             &lt;p&gt;MySQLdb is a python interface to MySQL.  I wrote the following simple script for some database tests and thought it might be handy to others looking for tutorials or examples.&lt;/p&gt;
&lt;p&gt;It simply connects to MySQL, drops and creates a database called &#39;testdb&#39;, makes a table called &#39;waves&#39; with columns &#39;sin&#39;, &#39;cos&#39;, &#39;tan&#39;, and &#39;date&#39; and fills the table with a thousand data points of the trig functions performed on the date in 5 minute intervals leading up to the current date.&lt;/p&gt;
&lt;p&gt;The code and comments I think are fairly straight forward, so I will just paste and link to the &lt;a href=&#34;http://dpaste.com/hold/40714/&#34;&gt;text version&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_HOST&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_USER&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;root&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_NAME&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;testdb&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_PASSWD&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;YOUR PASSWORD HERE&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_PORT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3306&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-6&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;MySQLdb&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-8&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-9&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c&#34;&gt;# Connect to the Database&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MySQLdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_HOST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_USER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-11&#34;&gt;&lt;/a&gt; &lt;span class=&#34;n&#34;&gt;passwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_PASSWD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_PORT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-12&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c&#34;&gt;# Make the database cursor&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-15&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c&#34;&gt;# Drop and create the database&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-17&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;drop database &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;; create database &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DATABASE_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-18&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-19&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c&#34;&gt;# Re connect to database using db=DATABASE_NAME&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-20&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MySQLdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_HOST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_USER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-21&#34;&gt;&lt;/a&gt; &lt;span class=&#34;n&#34;&gt;passwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_PASSWD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATABASE_PORT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-22&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-23&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-24&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c&#34;&gt;# Create the table for the wave data&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-25&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;math&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tan&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-26&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&amp;quot;CREATE TABLE waves (&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-27&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;id INT NOT NULL AUTO_INCREMENT,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-28&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;PRIMARY KEY(id),&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-29&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;sin FLOAT,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-30&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;cos FLOAT,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-31&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;tan FLOAT,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-32&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;date INT);&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-33&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-34&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-35&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c&#34;&gt;# Insert the sine wave data&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-36&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-37&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-38&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;STAMP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-39&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot; turns a python datetime object into a unix time stamp (seconds) &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-40&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-41&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mktime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timetuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-42&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-43&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;STAMP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-44&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;five_mins&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-45&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-46&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;INSERT INTO waves (sin, cos, tan, date) VALUES (&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;);&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-47&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-48&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c&#34;&gt;# Insert the data into the table&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-49&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-50&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;five_mins&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-51&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Python&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;I really need to get some &lt;a href=&#34;http://dpaste.com/hold/40714/&#34;&gt;syntax highlighting&lt;/a&gt;...  More documentation on MySQLdb can be found &lt;a href=&#34;http://mysql-python.sourceforge.net/MySQLdb.html&#34;&gt;here&lt;/a&gt;.  If you have any questions leave them in the comments.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Socialbrowse On The News</title>
            <author><name>dave</name></author>
            <link href="/2009/04/14/socialbrowse-on-the-news/"/>
            <updated>2009-04-14</updated>
            <published>2009-04-14</published>
            <id>/2009/04/14/socialbrowse-on-the-news/</id>
            
            <content type="html">
                             &lt;p&gt;It happened a few weeks ago and we mentioned it on the &lt;a href=&#34;http://socialbrowse.com/blog/2009/mar/27/on-the-news/&#34;&gt;Socialbrowse Blog&lt;/a&gt; but I feel like mentioning it here as well. Socialbrowse was covered on the News!  Zack and I were interviewed by Ali Lucia and were really pleased with the coverage.  Unfortunately I can&#39;t embed the video in this wordpress blog so you&#39;ll have to follow the link:&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://socialbrowse.com/blog/2009/mar/27/on-the-news/&#34;&gt;Watch The Socialbrowse News Coverage&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;So what did I learn from being on the news?  A few things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It doesn&#39;t bring much traffic to a web site&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It brings substantial clout among friends/family who wonder what I&#39;m doing with my life&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You get some temporary local fame/recognition&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Its best to be prepared (our site was going down during our interview :)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;95% of what you say in an interview isn&#39;t used&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;So speaking in small poignant sentences helps&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Uninstalling the easy_install(ed)</title>
            <author><name>dave</name></author>
            <link href="/2009/04/13/easy_install-uninstalling/"/>
            <updated>2009-04-13</updated>
            <published>2009-04-13</published>
            <id>/2009/04/13/easy_install-uninstalling/</id>
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;Today I was switching from the Python Cheese Shop&#39;s version of the Twisted Web Framework to the trunk version.  I&#39;d previously installed Twisted with the handy&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;easy_install PackageName
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Worked great!  Unfortunately its not so obvious on how to uninstall...  After some research I &lt;a href=&#34;http://peak.telecommunity.com/DevCenter/EasyInstall#uninstalling-packages&#34;&gt;found it&lt;/a&gt; and am sharing it here so I wont&#39; forget.&lt;/p&gt;
&lt;p&gt;Simply use easy_install with the -m option&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;easy_install -m PackageName
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which will remove the installed dependencies.  Then you can delete the PackageName.egg file that easy_install left behind.  You may have to do some &#34;locate&#34;ing to find where it put the package as its different on every system.&lt;/p&gt;
&lt;p&gt;Another hint is that easy_install creates a file easy-install.pth in your site-packages directory.  That file lists the path to the various eggs you&#39;ve installed with easy_install.  In some cases you may simply be able to delete the path of your package in that file.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Wanted: Generous Blog Designer</title>
            <author><name>dave</name></author>
            <link href="/2009/04/12/wanted-generous-blog-designer/"/>
            <updated>2009-04-12</updated>
            <published>2009-04-12</published>
            <id>/2009/04/12/wanted-generous-blog-designer/</id>
            
            <content type="html">
                             &lt;p&gt;I&#39;m currently doing a lot of research and experimenting in Marketing as its my weakest skill as a startup founder.  I want to make it one of my strengths, or at least become moderately good at it.  One of the marketing tools I&#39;m going to be experimenting with is this blog.  To do that I really think it needs some sort of re-design, or rather a first-design as almost no design went into it in the first place.&lt;/p&gt;
&lt;p&gt;Lately I get between 30 and 80 views per day, numbers I hope to increase significantly.  I have various distribution methods in mind and am confident I can accomplish the task.&lt;/p&gt;
&lt;h2&gt;So here&#39;s the deal&lt;/h2&gt;
&lt;p&gt;I&#39;m a bootstrapping startup founder, so I have no money to spend on this.  I&#39;m hoping there&#39;s someone generous enough to design it for the experience and the portfolio builder.  Everyone starts somewhere.  Hairstylists give out a lot of free haircuts before they get paid.  Writers write a lot of free stories, and even engineers write a lot of software before someone ever pays us.&lt;/p&gt;
&lt;p&gt;Though I can&#39;t offer money,&lt;/p&gt;
&lt;h2&gt;Here is what I can offer&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Name and link of designer&#39;s site at the bottom of each page.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A blog article thanking, complimenting, and recommending the designer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Possible paid work on sites in the future&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I make a lot of websites and have alot of projects.  I won&#39;t always be poor.  I also know a lot of people who make a lot of web sites and are looking for good designers.  If I like your work, I&#39;m not shy to recomend people.&lt;/p&gt;
&lt;h2&gt;Here&#39;s what I want&lt;/h2&gt;
&lt;p&gt;This blog is about the Things I Learn, and most of that tends to be about technical stuff (but not all).  It should be modern, stylish, and clean.&lt;/p&gt;
&lt;p&gt;Here are some blogs, who&#39;s designs I really like.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://sethgodin.typepad.com&#34;&gt;http://sethgodin.typepad.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.37signals.com/svn/&#34;&gt;http://www.37signals.com/svn/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://wufoo.com/blog/&#34;&gt;http://wufoo.com/blog/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.avc.com/&#34;&gt;http://www.avc.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;//www.oswd.org/design/preview/id/3293&#34;&gt;http://www.oswd.org/design/preview/id/3293&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.posterous.com/&#34;&gt;http://blog.posterous.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&#39;d like a large RSS icon on a sidebar as well as some space to put the &lt;a href=&#34;http://socialbrowse.com/blog/2009/jan/6/embed-new-socialbrowse-blog-widget-get-some-link-l/&#34;&gt;Socialbrowse Blog Widget&lt;/a&gt; and other widgets that my hacker friends have made.  I&#39;d like a great font so that the post is fun to read on its own, without always needing a picture to support it.&lt;/p&gt;
&lt;p&gt;I&#39;d also like to keep the blog hosted on wordpress, which means the design is constrained to using one of the currently available themes (formats) and updating the css.  Here is more information about the &lt;a href=&#34;http://en.wordpress.com/products/custom-css/&#34;&gt;Custom CSS feature&lt;/a&gt; and a &lt;a href=&#34;http://support.wordpress.com/custom-css/&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you&#39;re interested or want more information contact me at dave [at] socialbrowse.com&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Paper or Plastic?</title>
            <author><name>dave</name></author>
            <link href="/2009/04/06/paper-or-plastic/"/>
            <updated>2009-04-06</updated>
            <published>2009-04-06</published>
            <id>/2009/04/06/paper-or-plastic/</id>
            
            <content type="html">
                             &lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://districtlimerick.files.wordpress.com/2009/02/paper-vs-plastic1.jpg&#34; /&gt;
I&#39;m probably the last person to look this up but I&#39;ve often wondered what the best answer to &#34;Paper or Plastic?&#34; really is.  The best answer ofcourse is neither.  I should bring my own bags, but I rarely preform ideally so that aside what&#39;s the best?&lt;/p&gt;
&lt;p&gt;It seems like paper would be more environmentally friendly because its renewable and degrades much faster.  Also its brown and reminds you of nature, so that has to be better environmentally right? Plastic bags use up a lot of oil, which we know is not nonrenewable.  But then how much oil is used to make paper bags?  Cutting down all those trees, shipping them, printing, gluing, etc.  The more extensive manufacturing process must take a considerable amount of oil right?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.msnbc.msn.com/id/18538484/&#34;&gt;This article&lt;/a&gt; gives some quick facts on the costs of each:&lt;/p&gt;
&lt;blockquote&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;To make all the bags we use each year, it takes 14 million trees for paper and 12 million barrels of oil for plastic. The production of paper bags creates 70 percent more air pollution than plastic, but plastic bags create four times the solid waste — enough to fill the Empire State Building two and a half times. And they can last up to a thousand years.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.greenfeet.com/index.php/paper-vs-plastic-the-shopping-bag-debate/reducing-your-footprint/121&#34;&gt;Another great article&lt;/a&gt; suggests further proves that there is no consensus on the issue:&lt;/p&gt;
&lt;blockquote&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Both paper and plastic bags consume large amounts of natural resources and the majority will eventually end up in the landfill. Both bags can be recycled to some extent and can be utilized around the house. I’ve read several studies comparing the two choices and none of them agree.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Drats!  I hate issues with no clear answer.  The first article suggests that there are bio-degradable plastic bags that take only a few weeks to break down.  That would be the ideal solution, but they&#39;re rarely a choice.&lt;/p&gt;
&lt;p&gt;For now I think I&#39;m going to go with plastic on this one but with the intent to save the bags and recycle them.  The plastic uses less resources and polutes less.  Recycling them should reduce their significant impact which is in all the garbage they produce.  I&#39;m also going to continue to not take a bag when one is not required.  Too often I see people check out with one or two small items and walk off with them in a bag.  If you don&#39;t need the bag, don&#39;t use it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; My friend &lt;a href=&#34;http://socialbrowse.com/#url=http://socialbrowse.com/profile/view/140/&#34;&gt;Natalie&lt;/a&gt; recently shared this clever &lt;a href=&#34;http://www.youtube.com/watch?v=jSD21zp89zM&amp;amp;hl;=en&amp;amp;fs;=1&#34;&gt;video promoting careful use of your plastic bags&lt;/a&gt;.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">EC2 Elastic IPs SSH Error</title>
            <author><name>dave</name></author>
            <link href="/2009/03/25/ec2-elastic-ips-ssh-error/"/>
            <updated>2009-03-25</updated>
            <published>2009-03-25</published>
            <id>/2009/03/25/ec2-elastic-ips-ssh-error/</id>
            
            <content type="html">
                             &lt;p&gt;EC2 has a great feature in allowing you to associate an Elastic IP with different server instances.  This basically means that if you switch servers for whatever reason you can simply tell the old IP (that your domain is pointed to) to now refer to the new server.  This saves the need to change your DNS records and wait a few hours for it to propogate around the web.&lt;/p&gt;
&lt;p&gt;One somewhat annoying thing about the Elastic IP feature is that it also changes the access url and IP for the server.  It will kill your ssh session and you&#39;ll have to ssh in again using the new IP address.  Not a huge deal but for a while I was confused by the following error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
Someone could be eavesdropping on you right now (man-in-the-middle attack)!
It is also possible that the RSA host key has just been changed.
The fingerprint for the RSA key sent by the remote host is
xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx.
Please contact your system administrator.
Add correct host key in /Users/dave/.ssh/known_hosts to get rid of this message.
Offending key in /Users/dave/.ssh/known_hosts:25
RSA host key for xx.xxx.xxx.xxx has changed and you have requested strict checking.
Host key verification failed.
dave@~$ ssh -i ~/.ec2/id_rsa-your-name-keypair root@xx.xxx.xxx.xxx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I found the solution &lt;a href=&#34;http://developer.amazonwebservices.com/connect/thread.jspa;jsessionid=81CAD1F68BF6F5C626FC1AC429AF2C19?messageID=104781&amp;amp;#104781&#34;&gt;here&lt;/a&gt;.  At first glance it looks like a problem with EC2 but what&#39;s actually happening is that your ssh client knows that that IP address usually points to a different server and is warning you that someone might be messing with you. You know they&#39;re not however so you can fix it by simply clearing or editing the file that keeps a record of your past sessions.  On mac and I think most linux machines the file is:  ~/.ssh/known_hosts&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">How to Port Many Django Utilities Backwards</title>
            <author><name>dave</name></author>
            <link href="/2009/03/18/how-to-port-many-django-utilities-backwards/"/>
            <updated>2009-03-18</updated>
            <published>2009-03-18</published>
            <id>/2009/03/18/how-to-port-many-django-utilities-backwards/</id>
            
            <content type="html">
                             &lt;p&gt;&lt;a href=&#34;http://socialbrowse.com&#34;&gt;Socialbrowse&lt;/a&gt; is currently running on &lt;a href=&#34;http://djangoproject.com&#34;&gt;Django&lt;/a&gt; trunk revision 7859 which is sometime before Django released version 1.0 along with several backwards incompatibility changes.  We use several common Django utilities which often don&#39;t work at the moment with our version of Django.  We could port our whole app forward, which we&#39;ll of course eventually do but there are currently a few headaches in that that we&#39;re putting off.&lt;/p&gt;
&lt;p&gt;Usually its simple enough to look through the svn log and find out where the Django utils we&#39;re using made compatibility upgrades to fit with Django 1.0 and just revert to using that instance.  On occasion though we&#39;ve needed the latest functionality of the utility.  For example most recently we wanted the latest version of &lt;a href=&#34;http://code.google.com/p/django-compress/&#34;&gt;django-compress&lt;/a&gt; for its incorporation with &lt;a href=&#34;http://developer.yahoo.com/yui/compressor/&#34;&gt;YUI Compressor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Loading the latest will give an error claiming its unable to import Signal.  From what I&#39;ve seen this is the most common backwards incompatibility in Django modules and can be easily fixed.  Here are the indepth details on the &lt;a href=&#34;http://code.djangoproject.com/wiki/BackwardsIncompatibleChanges#Signalrefactoring&#34;&gt;Django Signals backwards incompatibility&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&#39;ve ported two different utilities back to pre-django using this method.  In the utility there is often a signals.py file.  Take a look at the file pre and post Django 1.0 support.  In django-compress the files look like this.&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;_signals&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;74&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;css_filtered&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;js_filtered&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;_signals&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;98&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HEAD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.dispatch&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Signal&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;css_filtered&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Signal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;js_filtered&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Signal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Python&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;In my experience you can simply revert back to the old signals.py and the import error will go away.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;svn up -r &amp;lt;pre django1.0 revision&amp;gt; signals.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you were using the signals for this utility, well they may very well be messed up.  You may also have other backwards incompatibility issues but so far this is the only one I&#39;ve run into.  All other issues should be listed in the page on &lt;a href=&#34;http://code.djangoproject.com/wiki/BackwardsIncompatibleChanges&#34;&gt;Backwards Incompatibility Changes&lt;/a&gt;.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Adding Custom Commands to manage.py and django-admin.py</title>
            <author><name>dave</name></author>
            <link href="/2009/03/13/adding-custom-commands-to-managepy-and-django-adminpy/"/>
            <updated>2009-03-13</updated>
            <published>2009-03-13</published>
            <id>/2009/03/13/adding-custom-commands-to-managepy-and-django-adminpy/</id>
                        <category   scheme="/blog/tags/"
                        term="django"
                        label="Django" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;In Django it is very straight forward to add extra commands to the manage.py and django-admin.py scripts.  The Django Documentation describes the &lt;a href=&#34;http://docs.djangoproject.com/en/dev/howto/custom-management-commands/&#34;&gt;process&lt;/a&gt; but gives no examples.  I like examples so I&#39;m writing this for others.&lt;/p&gt;
&lt;p&gt;In the past I&#39;d add these  to make stand alone scripts that used the Django libraries.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.conf import settings
from django.core.management import setup_environ
setup_environ(settings)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The method works well but I find it cleaner to add commands to the manage and django-admin scripts instead of having several stand alone scripts.  The desired effect is to be able to run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./manage.py your_command_name
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;instead of python your_command_name.py.  Big difference?  No...  But I think on a large project it adds organization and its some sort of a standard in the event that others will be using your code.&lt;/p&gt;
&lt;p&gt;In the app which the command is used for make the following directory structure:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;management/
    __init__.py
    commands/
        __init__.py
        your_command_name.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then in your file (&lt;em&gt;your_command_name.py&lt;/em&gt;) paste the following code, puting the functions to run in the handle_noargs function.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.core.management.base import NoArgsCommand

class Command(NoArgsCommand):
    help = &#34;Describe the Command Here&#34;
    def handle_noargs(self, **options):
        &amp;lt; your code here &amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&#39;s it!  You can also do some more complicated functionality with command options.  Take a look at commands listed in &lt;em&gt;/django/core/management/commands&lt;/em&gt; for examples there.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Wundrbar makes a Wundrful iPhone App</title>
            <author><name>dave</name></author>
            <link href="/2009/03/10/wundrbar-makes-a-wundrful-iphone-app/"/>
            <updated>2009-03-10</updated>
            <published>2009-03-10</published>
            <id>/2009/03/10/wundrbar-makes-a-wundrful-iphone-app/</id>
            
            <content type="html">
                             &lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://www.wundrbar.com/images/screenshot1.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I have a lot of cool friends and a lot of other friends who try to be cool by owning iPhones. To those people I want to advertise a cool new App that was released in the store today by a few friends of mine:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.wundrbar.com/static/iphone&#34;&gt;Wundrbar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Its called Wundrbar and basically gives you one click access and super easy usability for tons of web services out there. Using the web on a phone is super handy but super annoying. Wundrbar fixes the annoying parts.&lt;/p&gt;
&lt;p&gt;Here&#39;s a list of a few things it does easily.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;check airfairs and book tickets&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;easy buy on amazon&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;find low gas prices&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;public transport schedules&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lists top links of popular websites&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;etc. etc.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Read more about it at the link above on on &lt;a href=&#34;http://www.whatsoniphone.com/blogs/new-app-store-wundrbar&#34;&gt;this review&lt;/a&gt;. Its 70 apps in 1 at the low price of $1.99 which is like 3 cents per app so its for sure worth it!&lt;/p&gt;
&lt;p&gt;If you want to be cool you&#39;d better get it.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://itunes.apple.com/WebObjects/MZStore.woa/wa/viewSoftware?id=300879726&amp;amp;mt=8&#34;&gt;App Store Link&lt;/a&gt;&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Wordpress Domain Change</title>
            <author><name>dave</name></author>
            <link href="/2009/03/09/wordpress-domain-change/"/>
            <updated>2009-03-09</updated>
            <published>2009-03-09</published>
            <id>/2009/03/09/wordpress-domain-change/</id>
            
            <content type="html">
                             &lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;http://cre8tivecontrol.com/cre8tive3/images/stories/wordpress/wordpress-logo.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;For a long time I&#39;ve had this site at thingsilearned.wordpress.com and have had the domain thingsilearned.com simply re-directing to the blog.  Today I decided what the heck, I&#39;ll skip dinner and instead spend the 10 bucks to have thingsilearned.com be the actual blog domain.&lt;/p&gt;
&lt;p&gt;Wordpress makes this fairly straight forward though one step was confusing for me.  It seems that wordpress will not let you buy the 10 credits for using your own domain until it is sure that your domain is using the Wordpress nameservers.&lt;/p&gt;
&lt;p&gt;The first step is to visit the &lt;a href=&#34;http://thingsilearned.wordpress.com/wp-admin/paid-upgrades.php?page=domains&#34;&gt;Domains&lt;/a&gt; link under Upgrades in the left panel of your Wordpress Dashboard.  Enter in the domain you&#39;d like to register.&lt;/p&gt;
&lt;p&gt;If your domain is not using the wordpress nameservers it will ask you to direct your domain to these nameservers:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://NS1.WORDPRESS.COM/&#34;&gt;NS1.WORDPRESS.COM&lt;/a&gt;
&lt;a href=&#34;http://NS2.WORDPRESS.COM/&#34;&gt;NS2.WORDPRESS.COM&lt;/a&gt;
&lt;a href=&#34;http://NS3.WORDPRESS.COM/&#34;&gt;NS3.WORDPRESS.COM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It may take a few minutes to process, but when its done you can go through the same steps in the &lt;a href=&#34;http://thingsilearned.wordpress.com/wp-admin/paid-upgrades.php?page=domains&#34;&gt;Domains&lt;/a&gt; page but this time it will take you to a prompt to &#34;Buy Credits&#34;.&lt;/p&gt;
&lt;p&gt;After you&#39;ve purchased the credits you&#39;ll be taken back to the Domains page where you choose which of the domains (your new one, or the old wordpress one) to be the main domain of your blog.  Oddly, by default its still using the wordpress domain.  Make the change and you&#39;ll be done!&lt;/p&gt;
&lt;p&gt;On a side note, I haven&#39;t been blogging much lately.  There&#39;s a lot going on with Socialbrowse and I&#39;m still learning a ton but its unfortunately mostly confidential for a short while yet.  Most of the things I&#39;m learning are directly linked to what we&#39;re soon releasing and I don&#39;t want to let the cat out of the bag just yet!&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Tripeedo - Flight Search That&#39;s Actually a Search</title>
            <author><name>dave</name></author>
            <link href="/2009/03/03/tripeedo-flight-search-thats-actually-a-search/"/>
            <updated>2009-03-03</updated>
            <published>2009-03-03</published>
            <id>/2009/03/03/tripeedo-flight-search-thats-actually-a-search/</id>
            
            <content type="html">
                             &lt;p&gt;A couple brilliant friends of mine have recently launched a service called &lt;a href=&#34;http://tripeedo.com&#34;&gt;Tripeedo&lt;/a&gt;.  Its based off technology they built for &lt;a href=&#34;http://wundrbar.com&#34;&gt;Wundrbar.com&lt;/a&gt; and basically makes flight search actually a search.&lt;/p&gt;
&lt;p&gt;Current &#34;flight searches&#34; are less of a search and more of a painful process of filling out extensive forms.  You have to click and specify where you&#39;re coming from, going to, departure date, return date, how many passengers and other details you might want to throw in.&lt;/p&gt;
&lt;p&gt;With Tripeedo there&#39;s just a simple search interface and it just understands what you&#39;re trying to do.  Its really a new type of smart search that I think will revolutionize how we interact with the web and forms.&lt;/p&gt;
&lt;p&gt;I think its easiest just to show what&#39;s going on and then suggest that you try it out.  Here&#39;s how I could set up a few search results using Tripeedo.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;tripeedo1&#34; src=&#34;http://thingsilearned.files.wordpress.com/2009/03/tripeedo1.png&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;minneap to SF tomorrow return Sunday
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2 tickets Boston Miami June 12 return 7/15
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Its ridiculously smart.  I can put in dates or city names in a variety of different formats and it just understands automatically.  I don&#39;t even have to finish typing the city name!  Tirpeedo updates its understanding in real time and will tell you by the time you&#39;re done typing &#34;Min&#34; that it knows that you mean &#34;Minneapolis&#34;.&lt;/p&gt;
&lt;p&gt;After you type in what you&#39;re searching for you simply choose which airlines and 3rd party ticket vendors (kayak, orbits, expedia) you want to search, hit go, and it will open a new tab the ticket search in each of the chosen engines automatically.&lt;/p&gt;
&lt;p&gt;With their smart search technology they&#39;ve taken an incredible amount of steps out of the painful process of ordering flight tickets online.  I think they&#39;re on to something big.  They&#39;re new and I like them a lot so I thought I&#39;d spread the word!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://tripeedo.com&#34;&gt;Try it out.&lt;/a&gt;&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Traffic Trends: Negativity = More Traffic?</title>
            <author><name>dave</name></author>
            <link href="/2009/02/18/traffic-trends-negativity-more-traffic/"/>
            <updated>2009-02-18</updated>
            <published>2009-02-18</published>
            <id>/2009/02/18/traffic-trends-negativity-more-traffic/</id>
                        <category   scheme="/blog/tags/"
                        term="Blogroll"
                        label="Blogroll" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;Almost two years ago on a cranky afternoon I wrote this uninformed and poorly edited article:  &lt;a href=&#34;/2007/04/26/xcode-shortcuts/&#34;&gt;Xcode Editor Kinda sux&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since that day it has consistently been the top daily hit on my blog.  I did some Googlein&#39; and discovered that it is the top link (maybe just in my search context) when searching for &lt;a href=&#34;http://www.google.com/search?q=xcode+editor&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;aq=t&amp;amp;rls=org.mozilla:en-US:official&amp;amp;client=firefox-a&#34;&gt;&#34;xcode editor&#34;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This probably makes the team who works on the editor unpleased... Sorry gu&lt;img alt=&#34;&#34; src=&#34;http://www.printactivities.com/ColoringPages/Frankenstein-Coloring-Pages/Angry-Frankenstein-2.gif&#34; /&gt;ys.  Let me know if you&#39;ve made short cuts for that yet and I&#39;ll write an update.&lt;/p&gt;
&lt;p&gt;I looked at my stats and found this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/2007/04/26/xcode-shortcuts/&#34;&gt;Xcode Editor - Kinda Sucks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1,330&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/2007/08/14/zope3plone-to-django/&#34;&gt;Zope3/Plone to Django&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1,215&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/2007/07/09/the-dangers-of-a-startup/&#34;&gt;The Dangers of a Startup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;925&lt;/p&gt;
&lt;p&gt;Once you&#39;re done laughing at my piddly traffic you may notice that my top 2 blog highly trafficked blog posts of all time were also the most negatively critical.  The 3rd link isn&#39;t negative by nature, but does have a negative title.  I will chalk that one up as a fluke as most of its traffic came from a single day that it was on &lt;a href=&#34;http://news.ycombinator.com&#34;&gt;Hacker News&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&#39;m personally quite proud that in my few years of blogging the crankiest opinion based things I&#39;ve written about are those top two posts.  But, perhaps I would be more proud of greater traffic had I been less reserved.&lt;/p&gt;
&lt;p&gt;My blog is a small sampleset.  Has anyone noticed similar trends?&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Setup Safari Web Inspector</title>
            <author><name>dave</name></author>
            <link href="/2009/02/08/setup-safari-web-inspector/"/>
            <updated>2009-02-08</updated>
            <published>2009-02-08</published>
            <id>/2009/02/08/setup-safari-web-inspector/</id>
            
            <content type="html">
                             &lt;p&gt;A few months ago my friends at &lt;a href=&#34;http://280North.com&#34;&gt;280 North&lt;/a&gt; told me about &lt;a href=&#34;http://trac.webkit.org/wiki/Web%20Inspector&#34;&gt;Safari&#39;s Web Inspector&lt;/a&gt;.  Its quite simply Safari&#39;s version of Firebug.  Until recently I never had much of a reason to test it out but tonight I did.  To enable it simply run the following command in your Terminal.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;span style=&#34;text-decoration:line-through;&#34;&amp;gt;defaults write com.apple.Safari WebKitDeveloperExtras \
 -bool true&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; A better way to enable it is in the advanced tab in your preferences.  Thanks Rik&lt;/p&gt;
&lt;p&gt;More instructions for the rare windows users are &lt;a href=&#34;http://trac.webkit.org/wiki/Web%20Inspector&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After that brief setup you can right click on page elements and choose &#34;Inspect Element&#34;. It&#39;ll open up the Inspector window which has many of the same features as firebug including the option to dynamically edit css files and the following view showing load speeds for your pages.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;webinspecter1&#34; src=&#34;http://thingsilearned.files.wordpress.com/2009/02/webinspecter1.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I&#39;m looking forward to playing with this more.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Satchmo on Ubuntu</title>
            <author><name>dave</name></author>
            <link href="/2009/01/26/satchmo-on-ubuntu/"/>
            <updated>2009-01-26</updated>
            <published>2009-01-26</published>
            <id>/2009/01/26/satchmo-on-ubuntu/</id>
                        <category   scheme="/blog/tags/"
                        term="django"
                        label="Django" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
                        <category   scheme="/blog/tags/"
                        term="satchmo"
                        label="Satchmo" />
                        <category   scheme="/blog/tags/"
                        term="slicehost"
                        label="Slicehost" />
            
            <content type="html">
                             &lt;p&gt;I&#39;ve sadly spent the better part of the day getting Satchmo deployed on my slicehost.  It should&#39;ve been easy, as I&#39;ve already installed it on my mac.  Due to Satchmo backwards incompatibilities and some odd things with slicehost locale&#39;s its now a late night and I have a banged head and more than a few dents in the wall :).  &lt;/p&gt;
&lt;p&gt;Wanted to share the following post which I&#39;d wished I found much earlier.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;http://www.saltycrane.com/blog/2008/12/card-store-project-2-installing-satchmo-django-postgresql-and-apache-ubuntu-slicehost/&#34;&gt;Card store project #2: Installing Satchmo, Django, PostgreSQL, and Apache on Ubuntu at Slicehost&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Some keywords for the common error with the locale: bad settings.LANGUAGE_CODE satchmo&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Installing SVN on Ubuntu</title>
            <author><name>dave</name></author>
            <link href="/2009/01/22/installing-svn-on-ubuntu/"/>
            <updated>2009-01-22</updated>
            <published>2009-01-22</published>
            <id>/2009/01/22/installing-svn-on-ubuntu/</id>
            
            <content type="html">
                             &lt;p&gt;Today, for probably the 4th time I created an svn repository.  I find a different crappy tutorial every time as its the kind of setup its just not worth remembering.  I found this one right away though and it worked great!  Saving it for later and as a recomendation to others.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.howtogeek.com/howto/ubuntu/install-subversion-with-web-access-on-ubuntu/&#34;&gt;Install Subversion With Web Access On Ubuntu&lt;/a&gt;&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Javascript Relative and Absolute URLs</title>
            <author><name>dave</name></author>
            <link href="/2009/01/19/javascript-relative-and-absolute-urls/"/>
            <updated>2009-01-19</updated>
            <published>2009-01-19</published>
            <id>/2009/01/19/javascript-relative-and-absolute-urls/</id>
                        <category   scheme="/blog/tags/"
                        term="javascript"
                        label="Javascript" />
            
            <content type="html">
                             &lt;p&gt;I recently discovered a small oddity in javascript link elements.  Simply stated, if you access the &#39;href&#39; attribute using getAttribute(&#39;href&#39;) the result will be different than accessing it with simply &#39;href&#39;.  &lt;/p&gt;
&lt;p&gt;The getAttribute will return the relative link, where the direct call will return the absolute. &lt;/p&gt;
&lt;p&gt;Here&#39;s the test:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
  &amp;lt;body &amp;gt;
    &amp;lt;a href=&#34;/relative/link&#34; id=&#39;rellink&#39;&amp;gt;
      Relative Link&amp;lt;/a&amp;gt;
    &amp;lt;div id=&#39;answer1&#39;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div id=&#39;answer2&#39;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;script type=&#39;text/javascript&#39;&amp;gt;
      var link, a1,a2;
      link = document.getElementById(&#39;rellink&#39;);
      a1 = document.getElementById(&#39;answer1&#39;);
      a2 = document.getElementById(&#39;answer2&#39;);
      a1.innerHTML =  &#34;getAttribute(&#39;href&#39;): &#34;
      + link.getAttribute(&#39;href&#39;);
      a2.innerHTML = &#34;href: &#34; + link.href;
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the resulting page show:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&#34;///relative/link&#34; id=&#34;rellink&#34;&amp;gt;Relative Link
&amp;lt;/a&amp;gt;&amp;lt;span style=&#34;font-family:Georgia;line-height:19px;white-space:normal;&#34;&amp;gt;getAttribute(&#39;href&#39;): /relative/link

href: http://localhost/relative/link
 &amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;         
            </content>
        </entry>
            <entry>
            <title type="html"> Executed In Sequence of Page Load</title>
            <author><name>dave</name></author>
            <link href="/2009/01/17/executed-in-sequence-of-page-load/"/>
            <updated>2009-01-17</updated>
            <published>2009-01-17</published>
            <id>/2009/01/17/executed-in-sequence-of-page-load/</id>
                        <category   scheme="/blog/tags/"
                        term="javascript"
                        label="Javascript" />
            
            <content type="html">
                             &lt;p&gt;I was researching some javascript capabilities earlier and from a &lt;a href=&#34;http://en.wikipedia.org/wiki/Comet_(programming)&#34;&gt;wikipedia article on Comet&lt;/a&gt; learned this&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&#34;browsers render HTML pages incrementally, each &lt;/em&gt;&lt;code&gt;_script_&lt;/code&gt;&lt;em&gt; tag is executed as it is received.__&#34;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Awesome!  This means not just that you can execute javascript before and as the page is loading, but you choose WHEN/WHERE to run it.  To test it out I made the following example.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;div&amp;gt;Original&amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;Original&amp;lt;/div&amp;gt;
  &amp;lt;script&amp;gt;
    var link, links;
    links = document.getElementsByTagName( &#39;div&#39; );
    for (l in links) { links[l].innerHTML = &#39;Edited&#39;; }
  &amp;lt;/script&amp;gt;
  &amp;lt;div&amp;gt;Original&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The inserted script collects all &#39;div&#39; elements in the document and changes them to instead say &#34;Edited&#34;.  The code outputs the following result.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Edited
Edited
Original
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Because the script is executed in the order that the page is loaded, the first two divs get edited, but the last one which didn&#39;t exist at the time the script was run, was not edited.  Some clever things can be done with this.  I&#39;ll blog more about it later.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Django Email Admins Using Different Outgoing Email Address</title>
            <author><name>dave</name></author>
            <link href="/2009/01/06/django-email-admins-using-different-outgoing-email-address/"/>
            <updated>2009-01-06</updated>
            <published>2009-01-06</published>
            <id>/2009/01/06/django-email-admins-using-different-outgoing-email-address/</id>
                        <category   scheme="/blog/tags/"
                        term="django"
                        label="Django" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;&lt;a href=&#34;http://socialbrowse.com&#34;&gt;Socialbrowse&lt;/a&gt; is deployed on &lt;a href=&#34;http://aws.amazon.com/ec2/&#34;&gt;EC2&lt;/a&gt; using the &lt;a href=&#34;http://djangoproject.com&#34;&gt;Django&lt;/a&gt; framework.  Unfortunately, as we learned the hard way, EC2 has some serious issues with both reverseDNS and email blocklists and is a horrible place to send emails from.  For this reason we use &lt;a href=&#34;http://www.authsmtp.com/&#34;&gt;AuthSMTP&lt;/a&gt;, an email application that will has a much larger success rate for outgoing emails.  The one catch to this is that you pay (a small but significant amount) for each email that is sent out.  &lt;/p&gt;
&lt;p&gt;About 5 days into using AuthSMTP our database went down for 2 minutes and I received 4k error messages from Django!  This ate up my monthly AuthSMTP emails instantly and needless to say I was upset :).&lt;/p&gt;
&lt;p&gt;To prevent this from happening again, I configured the error messages to be sent using a different email address.  Error emails always go to my gmail account, which does not block EC2 emails so I don&#39;t have to worry about the success rate and there for there is no need to go through AuthSMTP.&lt;/p&gt;
&lt;p&gt;Here&#39;s the snippet to change your outgoing error message email address.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Change the mail_admins function in django/core/mail.py to the following.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit the EMAIL_HOST_USER and EMAIL_HOST_PASSWORD variables to be your email and password. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure &lt;a href=&#34;http://www.postfix.org/&#34;&gt;Postfix&lt;/a&gt; or some other application that comes with &lt;a href=&#34;http://www.sendmail.org/&#34;&gt;sendmail&lt;/a&gt; is installed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart your django server&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After those steps your error messages will come directly from your server and not go through AuthSMTP as your regular outgoing emails do.  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def mail_admins(subject, message, fail_silently=False):
    &#34;&#34;&#34;Sends a message to the admins, as defined by the ADMINS setting.&#34;&#34;&#34;
    EMAIL_HOST = &#39;smtp.gmail.com&#39; #&#39;127.0.0.1&#39; 
    EMAIL_HOST_USER = &#39;YOUREMAIL@YOURDOMAIN.COM&#39;
    EMAIL_HOST_PASSWORD = &#39;YOURPASSWORD&#39;
    EMAIL_PORT = 587
    EMAIL_USE_TLS = True

    connection = SMTPConnection(EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS)
    EmailMessage(settings.EMAIL_SUBJECT_PREFIX + subject, message,
                 settings.SERVER_EMAIL, [a[1] for a in settings.ADMINS], connection=connection,
                 ).send(fail_silently=fail_silently)
&lt;/code&gt;&lt;/pre&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">SSHFS for Developing on a Remote Server </title>
            <author><name>dave</name></author>
            <link href="/2009/01/06/sshfs-for-developing-on-a-remote-server/"/>
            <updated>2009-01-06</updated>
            <published>2009-01-06</published>
            <id>/2009/01/06/sshfs-for-developing-on-a-remote-server/</id>
            
            <content type="html">
                             &lt;p&gt;As I mentioned in my previous post there is often a reason, such as subdomains or configuration issues, that you cannot develop on localhost.  In this case you&#39;re going to have to develop on a remote server.  This can be horribly inefficient if you&#39;re constantly ftp&#39;ing new code or committing and updating through some revision control system.  &lt;/p&gt;
&lt;p&gt;I&#39;ve found that the least obnoxious and most secure way of developing remotely is by mounting a remote drive through SSH using  Secure SHell File System (SSHFS).  Basically it mounts a folder on your computer and then writing and reading from that folder actually happen on your remote server through SSH protocol.  Its incredibly secure and reasonably fast.  &lt;/p&gt;
&lt;p&gt;If you&#39;re on a mac you can use sshfs by installing Google&#39;s &lt;a href=&#34;http://code.google.com/p/macfuse/&#34;&gt;MacFuse.&lt;/a&gt; If you&#39;re on Windows try &lt;a href=&#34;http://dokan-dev.net/en/download/#sshfs&#34;&gt;this.&lt;/a&gt; Linux users will have to install FUSE.  Google for instructions specific to your distro.   The rest of this post will deal with MacFuse on OS X. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MacFuse&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After &lt;a href=&#34;http://code.google.com/p/macfuse/&#34;&gt;installing&lt;/a&gt; you should have an application called sshfs in your Applications directory.  Run sshfs and in the file menu select &#34;Connect to SSH Server&#34; or the shortcut ⌘O.   It will prompt you with the following display for your ip address (must be ip, domains don&#39;t work), username and the remote directory to mount.  If you leave it blank it will default to ~/.  &lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;sshfs&#34; src=&#34;http://thingsilearned.files.wordpress.com/2009/01/sshfs.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If all goes well it will prompt you for your password and a directory will be mounted for you in /Volumes/your.ip.address.here&lt;/p&gt;
&lt;p&gt;Open that directory and files in your favorite editor and your development experience will be the same as if you were editing the files locally, except with some additional load and save lag while editing.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Wildcard Subdomains with WebpageDomainNames.com/Godaddy.com</title>
            <author><name>dave</name></author>
            <link href="/2009/01/06/wildcard-subdomains-with-webpagedomainnamescomgodaddycom/"/>
            <updated>2009-01-06</updated>
            <published>2009-01-06</published>
            <id>/2009/01/06/wildcard-subdomains-with-webpagedomainnamescomgodaddycom/</id>
            
            <content type="html">
                             &lt;p&gt;The domain manager for WebpageDomainNames has a confusing way of doing wildcard subdomains.  Googling for this there seemed to be a lot of confusion and I eventually found the answer.  &lt;/p&gt;
&lt;p&gt;Usually you make a CNAME record of * to represent the wildcard subdomain.  Instead, with Godaddy make an A record with the name * and set the IP to your server.  Strange way of doing it, but it seems to work.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Relative URL Parser Snippet</title>
            <author><name>dave</name></author>
            <link href="/2009/01/05/relative-url-parser-snippet/"/>
            <updated>2009-01-05</updated>
            <published>2009-01-05</published>
            <id>/2009/01/05/relative-url-parser-snippet/</id>
                        <category   scheme="/blog/tags/"
                        term="django"
                        label="Django" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;Python 3.0 seems to come with fancy new features to urllib including &lt;a href=&#34;http://docs.python.org/dev/3.0/library/urllib.parse.html&#34;&gt;urllib.parse&lt;/a&gt; which is an excellent utility for parsing the different components of URLs.  I however don&#39;t use python 3.0 yet and needed a clean way to make full URLs given a base URL and relative URLs.&lt;/p&gt;
&lt;p&gt;This is helpful if you&#39;re scraping a webpage and need the full paths of any links.  Its not clean but here&#39;s the snippet:&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;safestarters_re&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;^(http|ftp|#)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;URLParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-6&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-7&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-8&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dirs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-9&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-10&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;base&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-11&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;(.*/).*$&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;\g&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-12&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;base&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-13&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;url_wo_get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-14&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;\?.*$&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-15&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_dirs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-16&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dirs&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-17&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;n&#34;&gt;dirs_re&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;(.+?/)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-18&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dirs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dirs_re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-19&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dirs&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-20&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;relURL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rel_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-21&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;sd&#34;&gt;&amp;quot;&amp;quot;&amp;quot; returns the joined url given a relative url  &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-22&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;safestarters_re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rel_url&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-23&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rel_url&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-24&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;n&#34;&gt;dirs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_dirs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-25&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-26&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;n&#34;&gt;rel_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-27&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rel_url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startswith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-28&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;n&#34;&gt;rel_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;\.\.\/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rel_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-29&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rel_url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startswith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-30&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dirs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-31&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;n&#34;&gt;rel_url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rel_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-32&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rel_url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startswith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-33&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;n&#34;&gt;rel_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url_wo_get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-34&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dirs&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-35&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;n&#34;&gt;repl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dirs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:])&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-36&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;n&#34;&gt;rel_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;repl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-37&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rel_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rel_url&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Python&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;And here&#39;s how you can use it.  Hope it helps, feel free to use.&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;http://example.com/some/base/url?with=get&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;URLParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;http://example.com/some/base/&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;relURL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;../relative/path?more=get&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;http://example.com/some/relative/path?more=get&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;relURL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;/another/relative/path&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;http://example.com/another/relative/path&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Python&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Using Subdomains in Django</title>
            <author><name>dave</name></author>
            <link href="/2009/01/05/using-subdomains-in-django/"/>
            <updated>2009-01-05</updated>
            <published>2009-01-05</published>
            <id>/2009/01/05/using-subdomains-in-django/</id>
                        <category   scheme="/blog/tags/"
                        term="django"
                        label="Django" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;Django&#39;s url dispatcher doesn&#39;t handle subdomains.  If you want/need to use subdomains you&#39;ve got to use session middleware.  If you haven&#39;t written any middleware yet don&#39;t freak out, is easy.&lt;/p&gt;
&lt;p&gt;There&#39;s some &lt;a href=&#34;http://docs.djangoproject.com/en/dev/topics/http/middleware/?from=olddocs&#34;&gt;easy documentation&lt;/a&gt; for extra information but for our needs all you need to do is make a Class with a function called process_request.  This function gets called on any request before it is processed by the url dispatcher.  It needs to return either nothing (None) or an HttpResponse object.  Here&#39;s the code used to get the subdomain.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class SubdomainMiddleware:
    def process_request(self, request):
        &#34;&#34;&#34;Parse out the subdomain from the request&#34;&#34;&#34;
        request.subdomain = None
        host = request.META.get(&#39;HTTP_HOST&#39;, &#39;&#39;)
        host_s = host.replace(&#39;www.&#39;, &#39;&#39;).split(&#39;.&#39;)
        if len(host_s) &amp;gt; 2:
            request.subdomain = &#39;&#39;.join(host_s[:-2])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now your request object has a &#39;subdomain&#39; attribute you can use in your views.  Alternatively you could return an HttpResponse of any sort including redirects directly from the process_request function.  Make sure to add this class to your middlware classes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MIDDLEWARE_CLASSES = (
    &#39;path.to.middlware.SubdomainMiddleware&#39;, )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using subdomains on localhost can be a pain.  To do so sudo edit your /etc/hosts file and add the following lines replacing test.com with whatever you want to call your test url and the subdomains with your site&#39;s subdomains.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;127.0.0.1     test.com
127.0.0.1     subdomain1.test.com
127.0.0.1     subdomain2.test.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This locally alters the DNS for test.com so you can use it as your localhost testing url.  Unfortunately the hosts file has no *.test.com functionality to handle redirecting all subdomains so this method only works if you have a known, finite set of subdomains.  If that&#39;s not the case you&#39;re going to have to use a development server or set up a proxy. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I also forgot to mention that if you want your login sessions to work across all subdomains you can change the SESSION_COOKIE_DOMAIN variable as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SESSION_COOKIE_DOMAIN = &#39;.mysite.com&#39;
&lt;/code&gt;&lt;/pre&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Installing CSSTidy and Scons on OS X or Linux</title>
            <author><name>dave</name></author>
            <link href="/2009/01/02/installing-csstidy-and-scons-on-os-x-or-linux/"/>
            <updated>2009-01-02</updated>
            <published>2009-01-02</published>
            <id>/2009/01/02/installing-csstidy-and-scons-on-os-x-or-linux/</id>
                        <category   scheme="/blog/tags/"
                        term="django"
                        label="Django" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;I&#39;m setting up &lt;a href=&#34;http://code.google.com/p/django-compress/&#34;&gt;django-compress&lt;/a&gt;, and incredibly helpful django tool for compressing media files.  By default it requires the installation of &lt;a href=&#34;http://csstidy.sourceforge.net/&#34;&gt;CSSTidy&lt;/a&gt; which was not as smooth of a task as most.  Here are my notes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Installing Scons&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To install CSSTidy you have to have &lt;a href=&#34;http://www.scons.org/&#34;&gt;Scons&lt;/a&gt; in order to install it.  Scons is similar to Make but uses python and probably has a ton of other differences as well.  The following will install scons.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://prdownloads.sourceforge.net/scons/scons-1.2.0.tar.gz
tar -xzvf scons-1.2.0.tar.gz
cd scons-1.2.0
sudo python setup.py install --standard-lib
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I took me a short while to discover the need to use the --standard-lib flag.  If you do not scons is not installed in the python path and you will get the following error when trying to install csstidy&lt;/p&gt;
&lt;p&gt;&lt;em&gt;scons: *** No SConstruct file found.
File &#34;/usr/local/lib/scons-1.2.0/SCons/Script/Main.py&#34;, line 826, in _main&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Install CSSTidy&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://downloads.sourceforge.net/csstidy/csstidy-source-1.4.zip?modtime=1184828155&amp;amp;big_mirror=0
unzip csstidy-source-1.4.zip
scons
sudo cp release/csstidy/csstidy /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the last command assumes /usr/local/bin is in your $PATH.  Change it if you would like to place it in another place.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Recap and New Years Resolutions</title>
            <author><name>dave</name></author>
            <link href="/2009/01/01/recap-and-new-years-resolutions/"/>
            <updated>2009-01-01</updated>
            <published>2009-01-01</published>
            <id>/2009/01/01/recap-and-new-years-resolutions/</id>
            
            <content type="html">
                             &lt;p&gt;Happy New Year!!  2008 was a huge year for me.  I quit IBM, moved to Palo Alto, went through Y Combinator, launched 2 big apps 8aweek (now temporarily shut down) and &lt;a href=&#34;http://socialbrowse.com&#34;&gt;SocialBrowse&lt;/a&gt;.  I lived the whole year in the expensive bay area off of a small investment and a small amount of personal savings all while working 14 hour days starting my new business. I spent nights sleeping on floors, and days with little or no sleep but immensely enjoyed every minute of it.  I learned and accomplished an immeasurable amount but have even higher expectations for the next year.&lt;/p&gt;
&lt;p&gt;New Years Resolutions are not like wishes.  They are more likely to come true if you tell people, so here is my list broadcast to the world.  Hold me to it!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;No TV (including HULU)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No illegal downloading&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pizza Hut no more than once a week (I just can&#39;t quit cold turkey :)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make something people want&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Escape the rat race (need for money).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some ambitious and strict rules!  I think I can hit them though.  The last one will be especially difficult, but that is after all the reason I do the things I do.  Its going to be a big year.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">&#34;I have a Startup&#34; Midwest vs. Bay Area</title>
            <author><name>dave</name></author>
            <link href="/2008/12/31/i-have-a-startup-midwest-vs-bay-area/"/>
            <updated>2008-12-31</updated>
            <published>2008-12-31</published>
            <id>/2008/12/31/i-have-a-startup-midwest-vs-bay-area/</id>
                        <category   scheme="/blog/tags/"
                        term="startup"
                        label="Startup" />
            
            <content type="html">
                             &lt;p&gt;Yesterday I posted my article to one of my other blogs, &lt;a href=&#34;http://LeavingCorporate.com&#34;&gt;LeavingCorporate.com&lt;/a&gt;. It is called&lt;/p&gt;
&lt;h3&gt;&lt;a href=&#34;http://leavingcorporate.com/2008/12/30/i-have-a-startup-midwest-vs-bay-area/&#34;&gt;&#34;I have a Startup&#34; Midwest vs. Bay Area&lt;/a&gt;&lt;/h3&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Django-admin.py startproject &gt; Unknown Command</title>
            <author><name>dave</name></author>
            <link href="/2008/12/28/django-adminpy-startproject-unknown-command/"/>
            <updated>2008-12-28</updated>
            <published>2008-12-28</published>
            <id>/2008/12/28/django-adminpy-startproject-unknown-command/</id>
                        <category   scheme="/blog/tags/"
                        term="django"
                        label="Django" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;This is hardly worth a post but I&#39;d found nothing on google for the fix and so I&#39;m documenting it here for others.  In Django v 1.0 django-admin.py has smartly been altered to behave the same as ./manage.py.  It seems that this has effected the startproject command in the event that your DJANGO_SETTINGS_MODULE environment variable is already set.  If it is you&#39;ll get something like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ django-admin.py startproject myproject
&lt;em&gt;Unknown command: &#39;startproject&#39;
Type &#39;django-admin.py help&#39; for usage.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;There&#39;s an easy fix.  Just blank out your DJANGO_SETTINGS_MODULE variable and startproject will then be recognized.&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;$ export DJANGO_SETTINGS_MODULE=&#34;&#34;&lt;/p&gt;
&lt;p&gt;$ django-admin.py startproject myproject&lt;/p&gt;
&lt;/blockquote&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Proportional Image Resize in JavaScript</title>
            <author><name>dave</name></author>
            <link href="/2008/12/27/proportional-image-resize-in-javascript/"/>
            <updated>2008-12-27</updated>
            <published>2008-12-27</published>
            <id>/2008/12/27/proportional-image-resize-in-javascript/</id>
            
            <content type="html">
                             &lt;p&gt;&lt;a href=&#34;http://Socialbrowse.com&#34;&gt;Socialbrowse&lt;/a&gt; currently shows summaries of shared links that have an ATOM or RSS feed.  The feeds come with images of all sizes and we have to change the height and width to fit within the alloted space.  CSS has max-width and max-height parameters but they have issues in IE and they don&#39;t keep original proportions of the image!  To resize and keep the proportions we use javascript.&lt;/p&gt;
&lt;p&gt;This javascript resize function will do a proportional resize to keep the given &lt;img&gt; within the given max height and max width (maxh and maxw).  Feel free to copy and use it in any way you like.&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;resize&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;maxh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;maxw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ratio&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;maxh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;maxw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ratio&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;     &lt;span class=&#34;c1&#34;&gt;// height is the problem&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;maxh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-6&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;maxh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-7&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;maxh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-8&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-9&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-10&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;c1&#34;&gt;// width is the problem&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-11&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;maxh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-12&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;maxw&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-13&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;maxw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-14&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-15&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;JavaScript&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Host Your Own Git Repository</title>
            <author><name>dave</name></author>
            <link href="/2008/12/22/host-your-own-git-repository/"/>
            <updated>2008-12-22</updated>
            <published>2008-12-22</published>
            <id>/2008/12/22/host-your-own-git-repository/</id>
            
            <content type="html">
                             &lt;p&gt;Today I set up a git repository on our dev server.  If you have some cash and don&#39;t want to deal with hosting and backing up the repo yourself I recomend you check hosting services such as &lt;a href=&#34;http://github.com/&#34;&gt;github&lt;/a&gt;.  But, if you are like me and have more servers than cache you&#39;ll want to set up your own git host.  &lt;/p&gt;
&lt;p&gt;I played with a few different tutorials and found this one by Garry Dolley to be the best.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://scie.nti.st/2007/11/14/hosting-git-repositories-the-easy-and-secure-way&#34;&gt;Hosting Git repositories, The Easy (and Secure) Way&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Its very straight forward and worked for me right away as instructed.  I have no additions/corrections of my own to make.  It uses a clever and secure hosting software called Gitosis.  From the article &#34;we&#39;re using Git to host the configuration file and keys that in turn define how our Git hosting behaves. That&#39;s just plain cool. &#34;  It is plain cool.  &lt;a href=&#34;http://scie.nti.st/2007/11/14/hosting-git-repositories-the-easy-and-secure-way&#34;&gt;Check it out&lt;/a&gt;.  &lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">How To Win Friends and Influence People</title>
            <author><name>dave</name></author>
            <link href="/2008/12/21/how-to-win-friends-and-influence-people/"/>
            <updated>2008-12-21</updated>
            <published>2008-12-21</published>
            <id>/2008/12/21/how-to-win-friends-and-influence-people/</id>
            
            <content type="html">
                             &lt;p&gt;Another book I finished reading recently is Dale Carnegie&#39;s &lt;a href=&#34;http://www.amazon.com/How-Win-Friends-Influence-People/dp/0671723650&#34;&gt;How To Win Friends and Influence People&lt;/a&gt;.  This book has a special meaning to me, and it was my 4th time reading it.  When I was in 6th grade, my grandpa, a very quiet man that I respect greatly, gave me the book and told me that every man needs to read it.  Written in 1938 and printed in the 50&#39;s it was probably the oldest book I&#39;d ever seen.  The stories reflect its age as more than a few are based on Abraham Lincoln or Teddy Roosevelt.  &lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;01&#34; src=&#34;http://thingsilearned.files.wordpress.com/2008/12/01.jpg?w=198&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Carnegie examines disagreements, negative criticisms, how we respond to them, and how to better make them.  If we all followed just our instincts when dealing with people we&#39;d have a mess of yelling and fighting that would lead nowhere over nothing.  It teaches the nature of people and the best methods of interacting.  As a 6th grader especially I learned a great deal from this book.  At that age I obviously had a lot of disagreements with my mother that we could not resolve.  This book opened my eyes to the futility of the disagreements and how we might have a shot of dealing with them.&lt;/p&gt;
&lt;p&gt;One of my favorite lessons from the book has gotten me out of several speeding tickets.  It works well both with the police or anyone who has caught you in a wrong.  The technique is unlike what you might instinctually do.  Instead of denying or playing dumb like most, admit your error right away and if you are indeed sorry apologize.  &#34;I&#39;m sorry officer, I just got off the highway and was not watching my speed.  Its 35 here and I must have been going over 40.&#34; Carnegie even goes so far as to recommend that you suggest a harsh punishment for yourself.  Often this results in surprise and a typical contrarian response.  The officer has much less incentive to punish someone who&#39;s made a mistake and has obviously learned their lesson.&lt;/p&gt;
&lt;p&gt;So does it work?  I&#39;ve been pulled over 12 times and gotten only 1 ticket which I blame on the 4 friends crammed in the back seat complaining that &#34;we&#39;re going to be late to the choir concert&#34; while I politely asked them to shut the hell up.  To this the officer&#39;s contrary response was of course &#34;Well you would have been there by now if you hadn&#39;t been speeding.&#34;&lt;/p&gt;
&lt;p&gt;Its easy to forget the lessons, so I read it every few years to keep them fresh in my mind.  Each time the lessons are more and more obvious which I take as a good sign that my nature is changing to naturally use the mentality.&lt;/p&gt;
&lt;p&gt;I had no idea when my grandfather had me read it, but the book is quite famous.  It was one of the first self-help books ever written and has sold over 15 million copies.  Our investor Paul Graham requested that we all read it before starting &lt;a href=&#34;http://ycombinator.com&#34;&gt;Y Combinator&lt;/a&gt;.  Its a great reference to teach nerds how to deal with people :).&lt;/p&gt;
&lt;p&gt;If you&#39;ve read it and are looking for something a bit on the next level I also highly recommend&lt;a href=&#34;http://www.amazon.com/Art-Loving-Erich-Fromm/dp/0060915943&#34;&gt; The Art of Loving&lt;/a&gt;, which actually mentions HTWFIP but gives more of the WHY than the HOW on dealing with people.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Man&#39;s Search For Meaning</title>
            <author><name>dave</name></author>
            <link href="/2008/12/18/mans-search-for-meaning-of-love/"/>
            <updated>2008-12-18</updated>
            <published>2008-12-18</published>
            <id>/2008/12/18/mans-search-for-meaning-of-love/</id>
            
            <content type="html">
                             &lt;p&gt;&lt;img alt=&#34;41mdsdah05l&#34; src=&#34;http://thingsilearned.files.wordpress.com/2008/12/41mdsdah05l.jpg?w=186&#34; /&gt;
I just finished reading Viktore E. Frank&#39;s &lt;a href=&#34;http://www.amazon.com/Mans-Search-Meaning-Viktor-Frankl/dp/080701429X/ref=pd_bbs_sr_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1229405975&amp;amp;sr=8-1&#34;&gt;Man&#39;s search for Meaning&lt;/a&gt; and highly recommend it.  It is by a psychologist who spent two years in concentration camps during WWII.  There are two parts: the first is an account and observations of the time he spent in the camps.  The second is an introduction to logotherapy, the school of therapy he created from his experiences.&lt;/p&gt;
&lt;p&gt;Of course as part of all of this he discusses the meaning of life, why we seek it, and whether the question &#34;What is the meaning to life?&#34; is what we should really be asking.&lt;/p&gt;
&lt;p&gt;I wanted to share this paragraph:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&#34;Love is the only way to grasp another human being in the innermost core of his personality.  No one can become fully aware of the very essence of another human being unless he loves him.  By his love he is enabled to see the essential traits and features in the beloved person; and even more, he sees that which is potential in him, which is not yet actualized but yet ought to be actualized.  Furthermore by his love, the loving person enables the beloved person to actualize these potentialities.  By making him aware of what he can be and of what he should become, he makes these potentialities come true.&#34;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you haven&#39;t read it yet go get it from your library or &lt;a href=&#34;http://www.amazon.com/Mans-Search-Meaning-Viktor-Frankl/dp/080701429X/ref=pd_bbs_sr_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1229405975&amp;amp;sr=8-1&#34;&gt;amazon&lt;/a&gt;.  Its a quick and important read.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Get Around Corporate Firewalls: Make Your Own Proxy</title>
            <author><name>dave</name></author>
            <link href="/2008/12/16/get-around-corporate-firewalls-make-your-own-proxy/"/>
            <updated>2008-12-16</updated>
            <published>2008-12-16</published>
            <id>/2008/12/16/get-around-corporate-firewalls-make-your-own-proxy/</id>
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;I&#39;ve been doing some research into all kinds of proxies lately.  One of the simple examples I tried out has a great working use case.  It is especially useful if you are in the following situation.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Your work blocks/firewalls certain websites and this bugs you.&lt;/li&gt;
&lt;li&gt;You have a server somewhere that you can load code onto.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That&#39;s everyone right?  I thought so.  You need to set up a twisted proxy on your server.  The benefits of running your own proxy are numerous: If only you are using it, your work will probably never block it, if they do its easy to change your IP, and you&#39;ll know that your browsing and login information are safe.  Its also pretty simple to set up; here&#39;s how.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Load the Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Log into your server and make a file called proxy.py with the following code in it [&lt;a href=&#34;http://wiki.python.org/moin/Twisted-Examples&#34;&gt;original source&lt;/a&gt;]&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;twisted.web&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;twisted.internet&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reactor&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;twisted.python&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startLogging&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-6&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ProxyFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HTTPFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-8&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-9&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HTTPFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-10&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;protocol&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Proxy&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-11&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-12&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;reactor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;listenTCP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8080&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ProxyFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;reactor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Python&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;Don&#39;t worry about what all that does.  I&#39;m still working on the details myself.   It is important to know however that &#39;8080&#39; is the port number.  If you would like to use a different port for some reason change the number in the code.  Now you need to get the twisted library and run the script:&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;sudo easy_install twisted&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;python proxy.py &amp;amp;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Bash&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;The proxy is now running.  Make sure that script keeps running while testing the following or skip to part 3 where you set this script up to run in the background on load.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Set Your Browser To Use the Proxy&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The next step is to setup your browser to use a proxy for its internet access.  In Firefox goto Preferences-&amp;gt;Advanced-&amp;gt;Network-&amp;gt;Settings.  You should get something that looks similar to this:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;ff-advanced1&#34; src=&#34;http://thingsilearned.files.wordpress.com/2008/12/ff-advanced1.png?w=300&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The Default Setting is &#34;No proxy&#34;.  You want to hook it up to your proxy so instead select &#34;Manual proxy configuration&#34;.  Now in the HTTP Proxy field paste the ip address of your server and in Port enter the port you set your script to use (default 8080).&lt;/p&gt;
&lt;p&gt;Press OK and start surfing the web!  You should now be able to access all the sites that your server can access, instead of just the ones that your boss decides are okay.&lt;/p&gt;
&lt;p&gt;If you use a browser other than Firefox here are external instructions for changing the proxy settings:  &lt;a href=&#34;http://support.microsoft.com/kb/135982&#34;&gt;Internet Explorer&lt;/a&gt;, &lt;a href=&#34;http://www.lib.msu.edu/proxy/safari.html&#34;&gt;Safari&lt;/a&gt;, &lt;a href=&#34;http://www.opera.com/support/kb/view/332/&#34;&gt;Opera &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Configure the Proxy To Load on Boot&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As a last step you have to setup your proxy script to load when your computer starts up and to continue running.  I will show you how to do it in ubuntu.  If you&#39;re using another OS you&#39;ll have to figure it out yourself.  When you do please leave instructions in the comments!&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;sudo mv proxy.py /usr/local/bin&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;python /usr/local/bin/proxy.py&amp;quot;&lt;/span&gt; &amp;gt; /etc/init.d/proxy&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;chmod +x /etc/init.d/proxy&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;update-rc.d proxy defaults&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;/etc/init.d/proxy &amp;amp;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Bash&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;That&#39;s it! Happy Browsing :)!&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Learning Again!</title>
            <author><name>dave</name></author>
            <link href="/2008/12/16/learning-again/"/>
            <updated>2008-12-16</updated>
            <published>2008-12-16</published>
            <id>/2008/12/16/learning-again/</id>
            
            <content type="html">
                             &lt;p&gt;I&#39;m revitalizing blog from of my former startup thingsilearned.com.  The startup unfortunately never got the launch stage but is a great url, and has made an excellent and well trafficked blog.  Lately I&#39;ve had the urge again to start writing about the things I learn.&lt;/p&gt;
&lt;p&gt;I am going to attempt the impossible goal of posting something new every day, in theme with the phrase &#34;you learn something new every day&#34; as this is a blog about the things I have learned.  I&#39;m a busy person and have other blogs, so in order to do this the writing isn&#39;t going to be great, and many of the post are going to be more questions than complete write-ups on topics.  This is the process of learning.  Its incremental and a complete understanding or description is usually never fully achieved.  This will be reflected in my writing.&lt;/p&gt;
&lt;p&gt;I hope I get a lot of interaction and additions/corrections to the topics in the comments!  If you&#39;d like to add a guest post, please contact me at dave@socialbrowse.com.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Christmas Tunes</title>
            <author><name>dave</name></author>
            <link href="/2007/11/16/christmas-tunes/"/>
            <updated>2007-11-16</updated>
            <published>2007-11-16</published>
            <id>/2007/11/16/christmas-tunes/</id>
            
            <content type="html">
                             &lt;p&gt;I like to get an early jump on the christmas music.  If I don&#39;t I tend not to get it out of my system till mid to late January (which people find weird).  Today I found this site.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.christmasmusic247.com/&#34;&gt;http://www.christmasmusic247.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you can&#39;t tell by the URL, it plays christmas music 24/7.  And also 365 days a year.  You can also find it oddly placed under the religious section of  your itunes radio library titled Christmas 24/7.  If only that applied to more than just the music!&lt;/p&gt;
&lt;p&gt;Also remember that a lot of people are still in the scrooge mood at this time of year.  Make sure to wear headphones while listening around these types.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Organized Printf&#39;s with Variadic Macros</title>
            <author><name>dave</name></author>
            <link href="/2007/10/05/organized-printfs-with-variadic-macros/"/>
            <updated>2007-10-05</updated>
            <published>2007-10-05</published>
            <id>/2007/10/05/organized-printfs-with-variadic-macros/</id>
            
            <content type="html">
                             &lt;p&gt;When I program, especially in C, I tend to have a lot of errors.  To debug those errors I use a massive amount of printfs.  Recently I discovered the joy of &lt;a href=&#34;http://gcc.gnu.org/onlinedocs/cpp/Variadic-Macros.html&#34;&gt;Variadic Macros&lt;/a&gt; which have since dramatically improved my life.&lt;/p&gt;
&lt;p&gt;I like to be able to turn on and off my printf&#39;s so I don&#39;t have to go through and delete them later when speed or lack of annoyance is important.  They&#39;re also nice to keep around for commenting purposes and use in future debugging attempts.  The way I used to do this was just go through and un-comment or comment the ones I wanted or didn&#39;t want.&lt;/p&gt;
&lt;p&gt;After the code starts getting big enough and all the manual commenting gets annoying you start to put ifdefs around certain groups of comments.&lt;/p&gt;
&lt;p&gt;_#ifdef FILE1_DEBUG
printf(&#34;FILE1: Error message relating to FILE1\n&#34;);&lt;/p&gt;
&lt;h1&gt;endif_&lt;/h1&gt;
&lt;p&gt;The above example will compile the printf if you define FILE1_DEBUG either in the code or compile with the flag -DFILE1_DEBUG.&lt;/p&gt;
&lt;p&gt;The extra lines get annoying after a while, so I upgraded to defining a function for the printf&#39;s.&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#ifdef FILE1_DEBUG&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define FILE1_ERR( x ) \&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;printf( &amp;quot;FILE1: %s\n&amp;quot;, x );&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#else&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define FILE1_ERR(x)&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#endif&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;C&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;Then each ifdef&#39;d printf can simply be implemented with&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;FILE1_ERR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Error message relating to FILE1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;C&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;What will happen is the pre-compiler will replace FILE1_ERR with printf if FILE1_DEBUG is enabled.  If it is not enabled, it will simply remove the whole line from what gets compiled.&lt;/p&gt;
&lt;p&gt;The only problem is/was it gets crazy complicated when you want to put more than just strings in your printf&#39;s.&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;FILE1: This address is not valid: %x&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;C&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;which can&#39;t be put into FILE1_ERR as it only allows one input.  Luckily some genius invented Variadic Macros.  Variadic macros can take an arbitrary number of inputs.  Here&#39;s our new variadic version of our fancy print function;&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#ifdef FILE1_DEBUG&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define FILE1_ERR( args... ) \&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;printf(&amp;quot;   FILE1:  &amp;quot;); printf( args ); printf(&amp;quot;\n&amp;quot;); }&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#else&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#define FILE1_ERR( args... )&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-6&#34;&gt;&lt;/a&gt;&lt;span class=&#34;cp&#34;&gt;#endif&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;C&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;Awesome Right?  Now we can get fancy, organized, multivariable printfs with just one function.  And again, we can also turn on and off these printfs by defining or not defining the _DEBUG flags.  This comes in incredibly handy when there are many files and sections of the code to debug.&lt;/p&gt;
&lt;p&gt;Also note, for visual studio hackers the syntax is a little different.  Check out &lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/ms177415(VS.80).aspx&#34;&gt;these docs&lt;/a&gt;.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Electric Fence on OS X</title>
            <author><name>dave</name></author>
            <link href="/2007/09/30/electric-fence-on-os-x/"/>
            <updated>2007-09-30</updated>
            <published>2007-09-30</published>
            <id>/2007/09/30/electric-fence-on-os-x/</id>
                        <category   scheme="/blog/tags/"
                        term="C"
                        label="C" />
                        <category   scheme="/blog/tags/"
                        term="os x"
                        label="Os X" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;I recently suspected the dreaded buffer overrun in a project I&#39;m hacking for work.  These can be a huge pain to find, especially if your code has a considerable amount of mallocs and fails irregularly.  After dismissing the urge to just write it all in python (wasn&#39;t practical for the application) I decided to learn a malloc debugging tool.&lt;/p&gt;
&lt;p&gt;I was excited to learn that macs come with their own malloc debuger, entitled Malloc Debugger.  How handy!  Through several attempts to use it on my application however I kept getting the same error.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Unable to read malloc information from (null)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I&#39;m probably just missing some libraries to include that would have been had I been using Xcode.  Instead I was compiling with g++ -g.&lt;/p&gt;
&lt;p&gt;Anyway, I eventually checked out &lt;a href=&#34;http://linux.softpedia.com/get/Programming/Debuggers/Electric-Fence-3305.shtml&#34;&gt;Electric Fence&lt;/a&gt; (efence) and had decent results.  It didn&#39;t compile right away, you have to comment out line 33 of page.c as stated in &lt;a href=&#34;http://lists.apple.com/archives/xcode-users/2005/Oct/msg00791.html&#34;&gt;this mailing list&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Copy the compiled library libefence.a to /usr/lib/ and re-compile your application with the flag -lefence.&lt;/p&gt;
&lt;p&gt;Upon execution it will spit out problems you have in your malloc code and die if there was a buffer overrun.  Its a great tool to turn on while you work as you&#39;ll be informed of any overwrites as you&#39;re developing.  Not after the whole thing is done and quitting at odd times :).&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Zope3/Plone to Django</title>
            <author><name>dave</name></author>
            <link href="/2007/08/14/zope3plone-to-django/"/>
            <updated>2007-08-14</updated>
            <published>2007-08-14</published>
            <id>/2007/08/14/zope3plone-to-django/</id>
                        <category   scheme="/blog/tags/"
                        term="django"
                        label="Django" />
                        <category   scheme="/blog/tags/"
                        term="plone"
                        label="Plone" />
                        <category   scheme="/blog/tags/"
                        term="startup"
                        label="Startup" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;I was going to write a brief summary/closer on our summer but ended up writing this lengthy article about our startup&#39;s decision to switch to &lt;a href=&#34;http://www.djangoproject.com&#34;&gt;Django&lt;/a&gt; from &lt;a href=&#34;http://www.zope.org&#34;&gt;Zope3&lt;/a&gt;/&lt;a href=&#34;http://www.plone.org&#34;&gt;Plone&lt;/a&gt; as it is the major reason we&#39;ve missed our previously projected release dates.  Its difficult for me to post this as it may appear to cast some negativity toward Zope3/Plone, a community and CMS for which I have a great deal of respect.  It is also difficult as it describes significant failure on my part.&lt;/p&gt;
&lt;p&gt;I continue to post though as this startup is all about sharing the things you learn and this was a big one this summer.  I wish I had found a post like this when I was first searching for Zope3/Plone experiences and hope others in my position find it in the future.A few months ago we made a huge team decision to scrap the month and a half we spent learning Zope3/Plone for our future content creation/collaboration site and switch to &lt;a href=&#34;http://www.djangoproject.com&#34;&gt;Django&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It was a really tough decision.  Plone is an awesome content management system.  Its built with python, has an amazing community, I had/have a Google Summer of Code in it, and the clincher: its already capable of doing 90% of what we want our site to do.  It manages users great, handles blogs, wikis, profiles.  It was mouth watering, and to be honest was my main source of confidence in the idea that we&#39;d be able to pull off such a complicated site.&lt;/p&gt;
&lt;p&gt;That confidence slowly deteriorated over our first month of learning Plone.  I bought every book on Plone and Zope3 and in that first month in my parent&#39;s basement Priyesh and I spent day and night learning the stuff. I read almost all of two Zope3 books and one on Plone.  They made no sense to me.  I kept re-reading them and going over examples.  I could develop the examples just fine but I couldn&#39;t figure out how to write my own.&lt;/p&gt;
&lt;p&gt;I couldn&#39;t get a feel for it.  The concepts of interfaces, utilities, adapters, viewlets, ZCML, etc just weren&#39;t meshing. This bothered me tremendously as I&#39;ve been programming since childhood and consider myself (perhaps falsely so) at least halfway skilled in python and web development.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: I later found out that some of my problem was that, though only a few years old the Zope3 Developer&#39;s Handbook has fairly outdated Zope3 methodology.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I looked around for classes as I decided its just the type of stuff you have to have a teacher for.  The Plone community has fairly regular 2-3 day classes but none lined up with our location or timeline.  I am almost certain that had I been able to take one of the Plone courses it would have come together fairly easy.  As an alternative I found that a Plone sprint being hosted at the Googleplex!  I went and tried helping out as I blogged about earlier.  I wanted to get a feel for Zope3 and thought that it might inspire that &#34;snap&#34; in fluency where it&#39;d suddenly be obvious how all of those components work in Zope3.&lt;/p&gt;
&lt;p&gt;During the sprint I got to talk with Alexander Limi, one of the founders of Plone, who explained that Plone is in a very transitional state, attempting the crazy but so far successful task of slowly merging between Zope2 and Zope3.  For those of you who aren&#39;t in the know Zope3 is almost a completely different framework from Zope2.  He explained that Plone will be incredibly difficult to learn for the next year or so as it completes its transition.  New comers would have to learn both the old as well as the new and all the crazy ways in which they bridge the gap.&lt;/p&gt;
&lt;p&gt;He was confident though, and rightfully so, that the Plone community was strong enough to make it through that year with very little new blood.  He very humbly recommended going with a different framework for our startup; advice that we were already considering and took soon after.  Plone may have already given us 90% of our site, but we decided that having to write the last 10% in Zope3 might take us longer than starting from zero.&lt;/p&gt;
&lt;p&gt;Having lost so much time by judging a book by its cover we decided to do a great deal of reading and research before choosing our next framework.  I had done a good deal of web development several years ago but a lot of fancy new and helpful frameworks have fortunately popped up since then!&lt;/p&gt;
&lt;p&gt;We took a week, each of us diving into one or two frameworks, sharing what we liked and didn&#39;t like about each.  Our benchmark for each framework was the ease and accuracy with which we could replicate &lt;a href=&#34;http://www.jared-lee.com&#34;&gt;Jared&#39;s One Blog.&lt;/a&gt; We&#39;re still intending on posting our sometimes humorous results but haven&#39;t had a public server up and running until recently.&lt;/p&gt;
&lt;p&gt;As was already spoiled, we went with &lt;a href=&#34;http://www.djangoproject.com&#34;&gt;Django&lt;/a&gt;.  I&#39;d heard a lot of good things and they&#39;ve so far been proven.  For the most part we really enjoy developing in Django, though it can be frustrating to replicate features we already know are implemented in Plone :).  There&#39;s no on the shelves book on it (I like buying lots of books), the documentation doesn&#39;t go very deep, and the community is significantly less active than Plone&#39;s.  The framework though, at least to me, just makes more sense.  It was ridiculously easy to replicate the &lt;a href=&#34;http://jared-lee.com&#34;&gt;One Blog&lt;/a&gt; and problems with missing documentation can usually be solved with looking at a little source code or whining in IRC.&lt;/p&gt;
&lt;p&gt;The change in game-plan has given us more work that we expected to do at the beginning of the summer.  As I said, we thought we were 90% there and pretty much lost a month of development.  Startups are all about obstacles though! Since the change we&#39;ve been making tremendous progress and will be opening an Alpha to a few friends/advisors within the week.&lt;/p&gt;
&lt;p&gt;Perhaps one day someone will open source a version of Plone in Django!  Maybe that will be us.  Djone? Glono?&lt;/p&gt;
&lt;p&gt;zoPE &amp;lt;-&amp;gt; PlonE as djanGO &amp;lt;-&amp;gt; GlonO&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Computers and Lemonade</title>
            <author><name>dave</name></author>
            <link href="/2007/07/26/computers-and-lemonade/"/>
            <updated>2007-07-26</updated>
            <published>2007-07-26</published>
            <id>/2007/07/26/computers-and-lemonade/</id>
                        <category   scheme="/blog/tags/"
                        term="JaredSIM"
                        label="Jaredsim" />
                        <category   scheme="/blog/tags/"
                        term="life"
                        label="Life" />
            
            <content type="html">
                             &lt;p&gt;It may not surprise some of you to know that JaredSIM is not my first company, but my fourth.  The first I started with my sister in elementary school.  We received a &lt;a href=&#34;http://www.landofnod.com/family.aspx?c=8095&amp;amp;f=3052&amp;amp;pc=5000&amp;amp;srccd=g091&#34;&gt;children&#39;s loom&lt;/a&gt; for christmas and started making custom fabric coasters for people at my mom&#39;s work.  We called them &#34;Mug Rugs&#34; (@copyright 1992) and profited a whopping 3 bucks a piece until we tried to scale and ran into some child labor issues.&lt;/p&gt;
&lt;p&gt;My second I started in middle school with my father. I was a trapper and&lt;strike&gt; fur&lt;/strike&gt; foot trader.  We trapped a lot of gophers in the fields around where I lived.  I spent a good 4 hours a week setting and collecting traps.  Our county paid a pretty good price per gopher and I estimate I collected about $300 worth of gophers one summer.&lt;/p&gt;
&lt;p&gt;My last business adventure was in the summer of 2004.  My friend Ryan was working a typical cubicled internship and was suffering from a mild case of cubical claustrophobia (sometimes referred to as &#34;Am I really going to do this for the rest of my life&#34; syndrome) and had to go on frequent walks to stay sane.  I was doing research in the cold dark basement of an optics lab and was really getting down about the lack of variety in the spectrum of light that I experienced throughout my day.  It was also a time in my life where I was experimenting with several different vocations trying to find where I belonged.&lt;/p&gt;
&lt;p&gt;Most people in technology have had to at one point decide whether to give up their love of the outdoors, or their love of technology.  Ryan and I rarely follow the path of those most people and decided we&#39;d get around that decision by making a rare company that does technology outdoors.  Our business plan: a Computers and Lemonade stand!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/07/sign.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/07/sign.jpg&#34;&gt;&lt;img alt=&#34;Computers and Lemonade Sign&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/07/sign.jpg&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We set up shop on my street and started fixing computers and selling lemonade.  We were open for a good 8 hours before it got dark.  Unfortunately my street is more like a county road and we only saw about 6 cars go by.  None of them apparently had their computers with them, or at least the ones they did have weren&#39;t broken.&lt;/p&gt;
&lt;p&gt;We did fix 3 computers.  Two were for friends we called during our telemarketing campaign.  They had much better bargaining techniques than us  (they were female) as they got our quality service for the price of two tacos and a chocolate frosty.  I&#39;m pretty sure it was all from the dollar menu.  The other we fixed for my parents in exchange for a pitcher of lemonade, an investment that didn&#39;t pay out as we never actually sold any lemonade.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/07/very-commited.jpg&#34;&gt;&lt;img alt=&#34;Setting up the stand&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/07/very-commited.jpg&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;One of the 6 cars stopped, backed up and said &#34;Do you guys really fix computers?&#34;  We answered yes and then she asked &#34;How much?&#34;  We hadn&#39;t planned that far ahead and looked at each-other and I blurted out &#34;20 dollars.&#34;  She said she&#39;d be back with her computer and we waited nervously hoping it wasn&#39;t an expensive hardware related problem.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/07/sign.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/07/100_1243.jpg&#34;&gt;&lt;img alt=&#34;Waiting for customers&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/07/100_1243.jpg&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;She never came back and by the time it got dark we knew we had some serious flaws in our business plan.  We decided to add a sound system to our outdoor computer setup and see if we could make it as an outdoor movie theater.  A few people showed up but they all just brought chips and soda instead of money.  We had problems legally monetizing that venture.&lt;/p&gt;
&lt;p&gt;After that day we discussed the flaws in the plan and decided that we had stupidly violated all three rules of business, which are each titled &#34;Location&#34;.  We decided to try it again someday in a better spot but were soon back to being wrapped up in our busy technology lives and that day has yet to come.  I hope to one day find another business plan that allows me to do computer work outdoors.  I think people need to be close to nature, and computer don&#39;t have to change that.&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Unconventional Motivation Techniques</title>
            <author><name>dave</name></author>
            <link href="/2007/07/18/unconventional-motivation-techniques/"/>
            <updated>2007-07-18</updated>
            <published>2007-07-18</published>
            <id>/2007/07/18/unconventional-motivation-techniques/</id>
            
            <content type="html">
                             &lt;p&gt;I&#39;ve read a few articles on motivation and procrastination lately.  Everyone in the bay area seems to be trying to be as optimized as possible.  I&#39;ve found most of what I&#39;ve read to be obvious or just plain crap however.  They usually involve things like &#34;just do it&#34;, or &#34;trick yourself into thinking you&#39;ll only spend five minutes on it&#34;.&lt;/p&gt;
&lt;p&gt;There are two obvious problems with these.  One, my mind somehow always finds out when it&#39;s trying to trick itself.  Second, if I could get myself to &#34;just do it&#34; I wouldn&#39;t be putting it off and reading your article for help would I?&lt;/p&gt;
&lt;p&gt;Anyway, I&#39;ve devised a few unconventional techniques to deal with my own procrastination and motivation issues. Through practicing these 5 techniques you&#39;re (not really) guaranteed to become the master of your motivation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Out-Lazy the Laziness&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can&#39;t get yourself to &#34;just do it&#34; because you&#39;re in a crappy, lazy mood.  At least, it&#39;s too crappy and too lazy for the task you&#39;re up against.  You could get up and run around a bit but that would also take that burst of motivation that you&#39;re just not feeling at the moment.  Fortunately, the lack of motivation has left you with an abundance of laziness!  (Just stick with me on this.)&lt;/p&gt;
&lt;p&gt;So you say to yourself, &#34;Alright self, you want to be lazy? I&#39;ll show you lazy,&#34; and force yourself to watch a horrible and especially boring movie.  Make sure it&#39;s not television or you&#39;ll be too tempted to change the channel.  I might suggest &lt;a href=&#34;http://www.imdb.com/title/tt0275022/&#34;&gt;Crossroads&lt;/a&gt; or anything else staring a teen idol.  Mediocre movies that you&#39;ve seen 100 times also work.&lt;/p&gt;
&lt;p&gt;Watching a movie is an easy thing to get yourself to do while you&#39;re lazy. Anything sounds better than actually doing your work.  The trick is, the movie&#39;s an especially boring one and you have to watch the entire thing in one sitting even though you know you have tons of stuff to get done.  After 93 minutes of &lt;em&gt;Not Yet a Woman,&lt;/em&gt; you&#39;ll jump at the opportunity to do anything, especially your work.  If there&#39;s still a significant amount of laziness left, press play and watch it again.  If after 2 watches you still find yourself content to sit in that chair and call a friend, you have some bigger problems.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.  Get Pissed&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This one&#39;s pretty self explanatory and can be very powerful though it&#39;s the dark side of motivation.  Make sure you don&#39;t use too much of the dark side.  Find a group, person, place, or any noun really that&#39;s keeping you down.  Maybe they don&#39;t believe you can&#39;t finish the task, maybe they&#39;re making it harder, or maybe they just think you&#39;re an ass because you for some reason get pissed all the time.  In any case, blame all of your problems and and more on that noun and then go about your work to prove that you&#39;re better than them.&lt;/p&gt;
&lt;p&gt;For a more dramatic effect, walk around with randomly tucked in clothing, never maintain your hair, keep an imaginary friend, and mumble things like &#34;I&#39;ll show you all!&#34; to yourself but loud enough for others to overhear.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.  One-Sided Love&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This method is the opposite of method 2 and only really works as long term motivation.  Set your sites and heart on a person who&#39;s a bit out of your league.  Make sure they are, by getting a few rejections or asking their friends, because if after a short while you find that they actually like you, the whole plan is dead.  Anyway, liking a person out of your league can be a very motivational factor as you attempt to get in their league.  It uses the same &#34;I&#39;ll show you&#34; mentality as getting pissed but with a positive spin.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.  Get in Shape&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I&#39;m not talking about physical shape. (That probably would help too. I wouldn&#39;t be the one to attest to it.)  I&#39;m talking about getting in shape with work, whether it&#39;s physical, mentally draining, or monotonous.  Work is a lot like running.  You can&#39;t sit on your butt for 3 years and expect that you&#39;ll suddenly be able to run a marathon.  You have to work yourself up to doing certain amounts of work and concentration a day.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.  Frank&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Listening to music can often be a big mood changer.  My weapon of choice is often a one Mr. Frank Sinatra.  Specifically &lt;a href=&#34;http://www.rhino.com/store/ProductDetail.lasso?Number=78295&#34;&gt;&#34;Let&#39;s Fall in Love&#34;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;_&#34;Weeeee might have been meant for each-other!  To be or not to be, let our hearts disc-cov-er! I have a feelin&#39; its a feelin&#39; I&#39;m concealin&#39; I don&#39;t know why.  Its just a mental, incidental, sentimental alibi....&#34; _&lt;/p&gt;
&lt;p&gt;Maybe it&#39;s my jazz band background but if you listen to that and don&#39;t feel classy and like dancing, again you have some problems beyond the scope of this article and need to call a friend.  It&#39;s almost guaranteed to move your grouchy butt from sitting in your lazy chair to sliding across your previously unappreciated wood floors.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">1-through-N Steps for Beginning a Novel</title>
            <author><name>dave</name></author>
            <link href="/2007/07/15/1-through-n-steps-for-beginning-a-novel/"/>
            <updated>2007-07-15</updated>
            <published>2007-07-15</published>
            <id>/2007/07/15/1-through-n-steps-for-beginning-a-novel/</id>
            
            <content type="html">
                             &lt;p&gt;I&#39;d like to relate something that has occurred not once but thrice after receiving a great idea for a novel. These ideas seem to come from some strange nether place, if not handed from on high, so I&#39;ll add: I&#39;m feeling pretty darn lucky if I get a good idea at all.&lt;/p&gt;
&lt;p&gt;Basically what would happen is this: I&#39;d plan and plan this novel for about two months. And then when the time finally comes and I have what I need to execute the novel, nothing happens. Sure, I&#39;ll have written the first few thousand words by this point, so as to admire those words and keep them in a drawer like a shiny Sacagawea dollar, ready to be redeemed for a complete novel at any time.&lt;/p&gt;
&lt;p&gt;But those first few thousand words always needed revising. Then, the outline itself has to be changed. Maybe I&#39;d add or delete one or two characters . . . And then, what if this idea I had could be retrofitted with schnazzy language, better villains, and a heart-thumping techno soundtrack?
Well, I&#39;ve wasted a grand total of a year on these miserable attempts, and I always know why:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A)&lt;/strong&gt; The idea wasn&#39;t that great to begin with, but I got attached.
&lt;strong&gt;B)&lt;/strong&gt; The first chapter was great, so I got attached to that. Too bad the idea was a snoozer.
&lt;strong&gt;C)&lt;/strong&gt; I got attached to something that was a snoozer. (Snore . . . )&lt;/p&gt;
&lt;p&gt;Anyway, I&#39;ve devised some steps that basically defeat all the mechanisms that have so far prevented stories from being written. These steps work on the basic principle that the Internal Editor has a short lifespan. I&#39;ve used these same steps to begin and complete my first novel, (still in revision) as well as every short story I&#39;ve written since Spring 2004, AKA, the &#34;impact point.&#34;
Without further ado, here&#39;s my 1-thru-N steps for beginning a novel:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Start writing words more or less randomly, without any advanced thinking. (Sometimes I&#39;m working off of some image I have. None of that&#39;s fully worked out. The story is basically pulled out of the void.) Usually the story sucks. It doesn&#39;t matter . . . just keep writing until about 500-to-2000 words have spewed forth. Write some more or start another story.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; About three-to-six months later, reread the stuff you&#39;ve put away. Usually, you&#39;ll think what you wrote is good, and you&#39;ll have a fresh enough perspective to finish it. Sometimes, it takes a very long time to finish. But when it&#39;s working, then it&#39;s working and you&#39;ll magically know a few things . . . like how long it&#39;ll take to finish it, what the ending will be like, and who the characters are. You&#39;ll know if this is novel-worthy, or simply a longish short story.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;N.&lt;/strong&gt; Before you get too heavily involved with the story you&#39;ve picked up, start up another couple of stories and put those away. The good ones become like magic eggs that you can pluck from the air at any time and redeem--only this time, for far more than what you can get with a Sacagawea dollar:
What you get is a sense of security. It&#39;s the exact same feeling some people get from having a million friends. You just aren&#39;t as attached as you used to be. Objectivity kicks in. I can&#39;t say if any given work of fiction can be objectively bad or good. But I would argue that objectivity is good for writing. (At least, when it comes from within the writer.)&lt;/p&gt;
&lt;p&gt;--Vu&lt;/p&gt;
&lt;p&gt;(This post was reproduced from my forum post at the &lt;a href=&#34;http://scifiwriting.meetup.com/2/boards/&#34;&gt;Twin Cities  Speculative Fiction Writers Network&lt;/a&gt;)&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">An energy drink recipe: Green Tea Pepsi</title>
            <author><name>dave</name></author>
            <link href="/2007/07/12/an-energy-drink-recipe-green-tea-pepsi/"/>
            <updated>2007-07-12</updated>
            <published>2007-07-12</published>
            <id>/2007/07/12/an-energy-drink-recipe-green-tea-pepsi/</id>
                        <category   scheme="/blog/tags/"
                        term="drinks"
                        label="Drinks" />
                        <category   scheme="/blog/tags/"
                        term="recipe"
                        label="Recipe" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;Vu here. For a pumped up energy-drink (without all the added amino acids), I like to prepare a green tea and Pepsi mixture that not only tastes good, but has all the caffeine I&#39;ll need (about 40mg) and all the benefits that green tea&lt;a href=&#34;http://en.wikipedia.org/wiki/Potential_effects_of_tea_on_health&#34;&gt; potentially offers.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here&#39;s how to make it:
Steep your favorite green tea in a quarter cup boiling water for 2 or 3 minutes . . . enough for a small amount of tea that&#39;s fairly concentrated (i.e. bitter). Add a spoonful of maple syrup. (Substitute: sugar.)&lt;/p&gt;
&lt;p&gt;Let the tea cool for a few minutes in the fridge. Once suitably cold, grab a can of Pepsi, (substitute Coke if preferred) and pour that into the tea. Makes 14 ounces. (Add more tea to get the proportion of a regular-sized energy drink.)&lt;/p&gt;
&lt;p&gt;Now you can have your tea polyphenols AND teeth-hurting sugar too.&lt;/p&gt;
&lt;p&gt;--Vu&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">The Dangers of a Startup</title>
            <author><name>dave</name></author>
            <link href="/2007/07/09/the-dangers-of-a-startup/"/>
            <updated>2007-07-09</updated>
            <published>2007-07-09</published>
            <id>/2007/07/09/the-dangers-of-a-startup/</id>
                        <category   scheme="/blog/tags/"
                        term="life"
                        label="Life" />
                        <category   scheme="/blog/tags/"
                        term="startup"
                        label="Startup" />
            
            <content type="html">
                             &lt;p&gt;All the women I meet lately ask me what it is that I do.  When I tell them I&#39;m doing a startup they look at me with their big doll eyes like a scared Lana Wood with the mysterious Sean Connery and say, &#34;Isn&#39;t that dangerous?&#34;  I usually respond with a simple &#34;Sometimes (dramatic pause) but a man&#39;s gotta do...&#34;  And with that she becomes putty in my hands and I&#39;ve pretty much acquired a VIP pass to her pants.&lt;/p&gt;
&lt;p&gt;The life of a founder is a dangerous but highly lucrative one.  It&#39;s a very fast and most often short path but the opportunities attract a certain type to the profession every year.  Women, to their inevitable downfall, are helplessly attracted to this type of person.  They picture me on the battle grounds of the startup front, typing as fast as my masculine hands will take me and reading as fast as my eagle eyes can pass over a page.  Knocking down book after book like a mad gunner in a prairie bunker, I absorb knowledge with an evil vengeance all to carve my own space among the tech giants of the corporate world.&lt;/p&gt;
&lt;p&gt;They see the amazing speed at which I develop Web 2.0 applications, all to gain the advantage of first on the hill so that I may become king and destroy those who climb alongside me. They gawk at the amazing amount of Pepsi&#39;s and carbohydrates I need to fuel me for the day and marvel at the boyish figure I&#39;m still able to maintain. They fear the current of novel ideas pulsing through my powerful mind and wonder all the while how it is that I deal with so much danger on a daily basis and still survive.&lt;/p&gt;
&lt;p&gt;The secret is something I discovered many years ago.  It&#39;s an awakening discovery and I&#39;m about to spill it so prepare yourselves:&lt;/p&gt;
&lt;p&gt;Danger Never Takes a Vacation.&lt;/p&gt;
&lt;p&gt;Bam! There it is. Now that you&#39;ve heard it you know it&#39;s true and you probably see life completely differently. It doesn&#39;t. It never vacates. While you put yourself to bed in your comfy home in the suburbs after your long day at your cushy corporate job that you got because of your fancy college degree and all of your sappy community service, you might think you&#39;ve got it all figured out and danger has left you for the allure of fresh tropical drinks on the beaches of Brazil, but you would be wrong.  Dead wrong, and maybe even dead.  It hasn&#39;t left, it&#39;s still there, it never, ever, in a billion years, vacates.&lt;/p&gt;
&lt;p&gt;After this realization two things may happen to you.  Your awareness to the surrounding danger cripples you with fear and you helplessly cling to men such as myself who are seemingly immune to it.  This is the path taken by the women I&#39;ve discussed.  In the other path, you will realize that the danger has been there all along and you&#39;ve been surviving just fine.  In this case you will be inspired to grab your metaphorical hatchet, tear off your suffocating clothing and run into the untamed forest looking for something to kill.  In either case your awareness of the danger will dramatically heighten your appreciation for life.&lt;/p&gt;
&lt;p&gt;Some readers might find what I&#39;ve written to be a little grandiose, but I assure you everything I&#39;ve said is completely true, or rather it probably would be if the life of a startup founder ever crossed paths with women...&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Organized Database Designing</title>
            <author><name>dave</name></author>
            <link href="/2007/07/06/organized-database-designing/"/>
            <updated>2007-07-06</updated>
            <published>2007-07-06</published>
            <id>/2007/07/06/organized-database-designing/</id>
                        <category   scheme="/blog/tags/"
                        term="databases"
                        label="Databases" />
                        <category   scheme="/blog/tags/"
                        term="JaredSIM"
                        label="Jaredsim" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;This isn&#39;t an article on good practices in database design.  We definitely wouldn&#39;t be the guys to ask about that.  However, after many days of deliberation, and by deliberation I mean yelling, calling each other various names, and wasting several tablets of paper we have finally completed and have some suggestions on how to keep organized in the designing process.  The suggestions are organized in the following steps.  Hopefully when you&#39;re done you&#39;ll have a database to be proud of like these nerdy guys here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/07/nerds.jpg&#34;&gt;&lt;img alt=&#34;nerds doing database design&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/07/nerds.jpg&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Realization: &lt;/strong&gt; First you need to realize that the database design is a lengthy task that grows exponentially with the complexity of your web app.  Make sure you allot yourself a large chunk of time and patience for the task.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Site Planning:&lt;/strong&gt;  Before making your tables you have to have your entire site organized.  Its best to draw out all of the viewable page types the viewer will see and get a concrete set of high level functions that the user will be able to do.  Its best to minimize these down to base functionality.  Forget about the million bells and whistles that you might attach on in a year or two, and concentrate on making just the bike .... err webapp.  After simplifying the main functionality you&#39;ll find the database design much simpler to keep in your head and its usually easy to attach on the extra stuff later.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Research:&lt;/strong&gt; If you&#39;re not too good at database design, know very little about how SQL servers work or don&#39;t know what manytomany relationships are you&#39;d do yourself a favor by reading up on it.  Here are a &lt;a href=&#34;http://www.google.com/search?q=database+design&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;aq=t&amp;amp;rls=org.mozilla:en-US:official&amp;amp;client=firefox-a&#34;&gt;few resources&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Divide and Conquer:&lt;/strong&gt;  Having a good grasp of what you&#39;re making and a feel for SQL servers its time to get to it!  We want to emphasize, that no matter how big or small your group is, no matter how smart or dumb they are, even if you have a pacifist on your team, its best to split up when designing the database.  Each of you go to your own corners and design what you think will work.  Then, after a day or however long it takes you, get back together and share what you&#39;ve got.  You&#39;ll find that each of you are missing a few things and many different ways of looking at the same thing.  Its best to merge these ideas at the end when everyone has a good grasp of what they&#39;ve designed.  Its bad to merge them as you build, sparking debates that go on way too long and make everything feel larger and more complicated than it really is.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. Cards:&lt;/strong&gt;  When designing your tables we found it worked best to write them on note cards and rearrange them on the table.  Its really easy to edit or throw out cards.  Its also easy to visualize the different components and rearrange them in-front of you to fit better in your brain.  When you&#39;re done, tape them to a piece of tag board and draw lines to visually demonstrate the relationships between the different tables.  It will also look much prettier when you go back and meet with the rest of your group.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. Celebrate:&lt;/strong&gt; You&#39;ve accomplished a large amount of work!  It might not seem so.  You were expecting to be well into your hacking by now, but hey, it takes a really long time and now you have a great platform to build from.  Make sure you listen to a happenin&#39; tune and do a little jig.  This part is best done with the group.&lt;/p&gt;
&lt;p&gt;Dave and Priyesh&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Plone Sprint at Google</title>
            <author><name>dave</name></author>
            <link href="/2007/07/05/plone-sprint-at-google/"/>
            <updated>2007-07-05</updated>
            <published>2007-07-05</published>
            <id>/2007/07/05/plone-sprint-at-google/</id>
                        <category   scheme="/blog/tags/"
                        term="life"
                        label="Life" />
                        <category   scheme="/blog/tags/"
                        term="plone"
                        label="Plone" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
            
            <content type="html">
                             &lt;p&gt;I had the privilege of spending last week at the &lt;a href=&#34;http://www.satellite-sightseer.com/id/1385/United_States/California/Mountain_View/Google_Campus&#34;&gt;google campus&lt;/a&gt; hacking at the &lt;a href=&#34;http://www.plonegetpaid.com/updates/archive/2007/05/09/additional-spots-available-at-doccom-sprint&#34;&gt;doccom Plone sprint&lt;/a&gt;.  It was an awesome experience both to work inside the area that justly has the reputation as one of the most awesome places to work, and to take part in Plone&#39;s excellent open source community.  Here&#39;s a cool picture, you can find &lt;a href=&#34;http://www.flickr.com/search/?q=doccom&#34;&gt;more here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/07/696573071_8c00a5dd75.jpg&#34;&gt;&lt;img alt=&#34;Plone Sprint&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/07/696573071_8c00a5dd75.jpg&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately I had class on the day we got the full google tour of the cafeteria and the campus center but my experience walking around the site and in our google building on the edge of campus was still awesome.  The buildings, landscaping, and streets aren&#39;t really anything too spectacular so the first impression is the same as any other office campus.  Soon though you notice all the not so little things that google does to make it such an awesome work environment.&lt;/p&gt;
&lt;p&gt;First, there are a ton of bikes going around.  The campus is fairly spread out so google provides a bunch of bikes.  There are also some scooters and its rumored to be a few segways and some sort of 6 person circular meeting bike.  Also there are a whole lot of limousine busses that google leases driving around helping the commuting google employees.  I never got to see inside of one but they have leather seats and you can bring food and even dogs onboard. I&#39;m jealous of people who can bring a dog to work.&lt;/p&gt;
&lt;p&gt;Ofcourse, as everyone talks about, the food and beverages there are free and amazing.  I think I drank about 100 smart waters over the course of the week but unfortunately noted no increase in brain activity.  Lastly, but most important, the toilets were unbelievable.  They had heated seats where you could choose your preferred temperature.  It would also wash you and other crazy stuff if you were bold enough.  The thing had 20 different settings and can take a while to set up just right.  I want to invent a mechanism for it somehow recognize your butt and change to your preferred settings.&lt;/p&gt;
&lt;p&gt;The Plone sprint was equally cool.  For those of you who don&#39;t know what &lt;a href=&#34;http://plone.org/&#34;&gt;Plone&lt;/a&gt; or a &lt;a href=&#34;http://plone.org/events/sprints/whatis/&#34;&gt;sprint&lt;/a&gt; is, Plone is an incredible open source content management system and a sprint is an event where a bunch of the people involved in the Plone open source community get together and work on a specific project.  This sprint had two projects.  There were about 30 people there, half were working on organizing the documentation for the upcoming Plone 3.0 release, and the other half were making &lt;a href=&#34;http://www.plonegetpaid.com/contact-info&#34;&gt;Plone GetPaid&lt;/a&gt;, an e-commerce product for Plone.&lt;/p&gt;
&lt;p&gt;The first half of the sprint I worked on doctests and the getpaid workflow and the second half I developed a python wrapper for the UPS online tools to make a shipment information utility.  I&#39;m 90% done with it, I just need to formalize it and write up some docs.  I should have a post on it soon, its been a crazy week.  Because I&#39;m new to Plone and was gone for the majority of 2 days for class I probably wasn&#39;t very helpful, but everyone was very nice and a lot of fun.&lt;/p&gt;
&lt;p&gt;The public transport commute to google takes 2 hours and $10 from my apt so I ended up just crashing at the hotels the sprint sponsors funded.   I got to meet and hang out with many of the awesome people of the incredibly active Plone community including the infamous &lt;a href=&#34;http://plonebootcamps.com/&#34;&gt;Joel Burton&lt;/a&gt; and one of the founders, &lt;a href=&#34;http://limi.net/&#34;&gt;Alexander Limi&lt;/a&gt;.  The week reminded me of the good life at IBM Rochester; hack all day, drink all night. Except all the food and beverages during the day were free!&lt;/p&gt;
&lt;p&gt;Thanks to google and the Plone community for making it all happen.  It was my first sprint and first contribution (though small) to an open source project!  Hopefully there will be many more to come.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Prevent Devices from Waking WinXP out of Standby Mode</title>
            <author><name>dave</name></author>
            <link href="/2007/07/01/prevent-devices-from-waking-winxp-out-of-standby-mode/"/>
            <updated>2007-07-01</updated>
            <published>2007-07-01</published>
            <id>/2007/07/01/prevent-devices-from-waking-winxp-out-of-standby-mode/</id>
                        <category   scheme="/blog/tags/"
                        term="windows XP"
                        label="Windows Xp" />
            
            <content type="html">
                             &lt;p&gt;I had the annoying problem of putting my computer on standby mode for the night, only to have it mysteriously come back on due to some device activity that I didn&#39;t know about!&lt;/p&gt;
&lt;p&gt;Here&#39;s how I investigated the issue and found a fix:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I opened a command window with start &amp;gt; run &amp;gt; cmd&lt;/li&gt;
&lt;li&gt;I typed in powercfg /devicequery wake_armed&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This brought up a list of devices capable of waking my computer from standby.&lt;/p&gt;
&lt;p&gt;I found the culprit almost immediately: the network card. (NVIDIA Nforce Networking Controller)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;I typed in powercfg /devicedisablewake &#34;NVIDIA Nforce Networking Controller)&#34;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Problem solved.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Apparently, there&#39;s an alternate way of shutting off this &#34;capability,&#34; using control panel &amp;gt; system &amp;gt; hardware &amp;gt; device manager &amp;gt; network adapters and then bringing up the properties &amp;gt; power management option of the network controller. There&#39;s also a way to enable devices, with the command /deviceenablewake. (Typing in /? Will bring up a help file with the interface syntax that&#39;s needed.)&lt;/p&gt;
&lt;p&gt;Just for safety, I disablewaked all the other devices on the list except the keyboard and mouse. One would think there&#39;s a single place in the control panel to find all these wake_armed devices (and even better, if it was in the Power Options), but there isn&#39;t.&lt;/p&gt;
&lt;p&gt;--Vu&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">ThingsILearned User Case</title>
            <author><name>dave</name></author>
            <link href="/2007/06/29/thingsilearned-user-case/"/>
            <updated>2007-06-29</updated>
            <published>2007-06-29</published>
            <id>/2007/06/29/thingsilearned-user-case/</id>
                        <category   scheme="/blog/tags/"
                        term="JaredSIM"
                        label="Jaredsim" />
                        <category   scheme="/blog/tags/"
                        term="os x"
                        label="Os X" />
                        <category   scheme="/blog/tags/"
                        term="startup"
                        label="Startup" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;I have a TON of things to post about this past week and the amazing amount of thingsilearned at the &lt;a href=&#34;http://www.plonegetpaid.com/updates/archive/2007/05/09/additional-spots-available-at-doccom-sprint&#34;&gt;doccom Plone sprint &lt;/a&gt;hosted by google.  I also want to share some stories about the awesomeness that is the google campus, but for now I just want to note my current feeling of awesomeness toward ThingsILearned.  I bought a new macbook (Jared3) yesterday.  I bought it one day too early and missed the iPhone release and all the &lt;a href=&#34;http://pownce.com/kevin/notes/1328/&#34;&gt;excitement&lt;/a&gt; that&#39;s going on with it here at the Palo Alto Apple store where its being covered by &lt;a href=&#34;http://pownce.com/kevin/notes/1328/&#34;&gt;diggnation&lt;/a&gt;.  I haven&#39;t checked it out yet, I&#39;m 4 blocks away at Pizza My Heart.&lt;/p&gt;
&lt;p&gt;Anyway, I&#39;m setting up my macbook and and have to change all of my settings and download my favorite apps.  Luckily, because of what I&#39;ve shared the thingsilearned on this blog the process has been incredibly easy.  I found my favorite version of &lt;a href=&#34;http://thingsilearned.wordpress.com/2007/05/07/emacs-for-macs/&#34;&gt;emacs&lt;/a&gt;, added&lt;a href=&#34;http://thingsilearned.wordpress.com/2007/06/10/xml-syntax-on-emacs/&#34;&gt; xml support&lt;/a&gt;, modified my &lt;a href=&#34;http://thingsilearned.wordpress.com/2007/06/07/os-x-terminal-prompt/&#34;&gt;terminal&lt;/a&gt;, altered my hosts file to &lt;a href=&#34;http://thingsilearned.wordpress.com/2007/05/04/combating-internet-addiction/&#34;&gt;combat my internet addiction&lt;/a&gt;, and dropped in my &lt;a href=&#34;http://thingsilearned.wordpress.com/2007/04/26/screw-you-a-python-example/&#34;&gt;screw script&lt;/a&gt; so Jared3 can curse back at me.&lt;/p&gt;
&lt;p&gt;It was just cool to utilize so much content, and its all still just 4 guys on a flat blog!  Soon everyone will be able and encouraged to share and with the improved tools we&#39;re building into JaredSIM.  JaredSIM will be an awesome storage place for the thingsilearned ... awesome.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">The Facebook addiction</title>
            <author><name>dave</name></author>
            <link href="/2007/06/26/the-facebook-addiction/"/>
            <updated>2007-06-26</updated>
            <published>2007-06-26</published>
            <id>/2007/06/26/the-facebook-addiction/</id>
                        <category   scheme="/blog/tags/"
                        term="JaredSIM"
                        label="Jaredsim" />
                        <category   scheme="/blog/tags/"
                        term="life"
                        label="Life" />
            
            <content type="html">
                             &lt;p&gt;Facebook has evolved as one of the most powerful way of social networking, sharing photographs, video, blogs as well as communicating with friends and networks. Fred Stutzman is a Ph.D. student at the University of North Carolina at Chapel Hill&#39;s who studied facebook and it&#39;s usage at his university. As he goes to describe his plan of the longitudinal study over a period of one semester, some of his assumptions are totally reestablished through the statistics. He basically studies the social behavior of freshman at University of North Carolina, Chapel Hill. Alarmingly, 85% of college freshman were already on the facebook as they joined as freshmen, and not only that, they also were already connected to on an avg 45 other freshmen coming in week one of the study itself. The increase in new users over the course of the semester came out to be up to 94% with student to student connections increased to about an avg of 100. Well ... this should definitely have been the initial assumption anyway. College does mitigate the social networking abilities of students :p These statistics however lead to the speculation of spreading of facebook through orientation sessions for the school. This is supported by the initial links and connections between the students coming in being about 144,000 friend network connection (week1) and increasing to 370,000 (at the end of sem) just for the freshman class of UNC.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://video.google.com/videoplay?docid=3910777240176719644&amp;amp;q=genre%3Aeducational&amp;amp;total=181251&amp;amp;start=20&amp;amp;num=10&amp;amp;so=0&amp;amp;type=search&amp;amp;plindex=7&#34;&gt;http://video.google.com/videoplay?docid=3910777240176719644&amp;amp;q=genre%3Aeducational&amp;amp;total=181251&amp;amp;start=20&amp;amp;num=10&amp;amp;so=0&amp;amp;type=search&amp;amp;plindex=7&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Facebook is an amazing way of interacting with acquaintances, friends, and learning about each other. Fred studies the personal information sharing tendencies of students along with privacy considerations. The users on facebook get to decide how much information to share and what type of information to share. Facebook provides a very flexible  approach to networks and their situational relevance which allows users to change their network relevance and relations with change of demographics at the same time being connected with the old friends from another network. Not only that, it provides a great way of managing social connections without too much time investment. At the same time, the study finds out that a lot of time ends up being wasted online on facebook. The fact that users stay connected with others easily all the time, also tends to become addictive thus degrading productivity. If the whole communication between users could be made more informative and useful, rather than just a description, the wasteful addiction could be transformed into an even more useful. It could change the way people look at information via other users themselves and gain knowledge out of their own social networks or expand their networks based on knowledge and information.&lt;/p&gt;
&lt;p&gt;Priyesh&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Jared.hockey - Air Hockey Robotic Opponent</title>
            <author><name>dave</name></author>
            <link href="/2007/06/25/jaredhockey-air-hockey-robotic-opponent/"/>
            <updated>2007-06-25</updated>
            <published>2007-06-25</published>
            <id>/2007/06/25/jaredhockey-air-hockey-robotic-opponent/</id>
                        <category   scheme="/blog/tags/"
                        term="JaredSIM"
                        label="Jaredsim" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
                        <category   scheme="/blog/tags/"
                        term="robotics"
                        label="Robotics" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                                      
            </content>
        </entry>
            <entry>
            <title type="html">Jared.hockey - Air Hockey Robotic Opponent</title>
            <author><name>dave</name></author>
            <link href="/projects/air-hockey-robot"/>
            <updated>2007-06-25</updated>
            <published>2007-06-25</published>
            <id>/projects/air-hockey-robot</id>
                        <category   scheme="/blog/tags/"
                        term="JaredSIM"
                        label="Jaredsim" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
                        <category   scheme="/blog/tags/"
                        term="robotics"
                        label="Robotics" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;I just ran into my files from one of the first JaredSIM sub-projects.  It was my senior design project with the goal of making a robot that would beat the real Jared at air hockey.  Naturally I called it Jared.hockey.  A lot of people unfamiliar with the current state of robotics might be unimpressed by the technical requirements of such a feat, but the task of air hockey is a difficult one in that it requires incredibly fast reactions from both the sensor and controls in order to compete with the reaction time of the real Jared.  Three senior design teams had previously attempted the task with no success.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/06/jaredhockey.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/06/jaredhockey.png&#34;&gt;&lt;img alt=&#34;Hockey Diagram&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/06/jaredhockey.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What gave us the advantage was we went with the &lt;a href=&#34;http://www.cs.cmu.edu/~cmucam2/&#34;&gt;CMUcam2&lt;/a&gt;, an awesome device that does color tracking and has an onboard controller for up to 5 servos or DAQ outputs.  The controller was a life saver for the guys making the robotic arm, and for me being able to easily use the camera and control the robotics through the same programing interface.  The CMUCam2 advertises color tracking at an exciting 50 frames per-second but in reality you can only get 25fps unless you&#39;re using only a quarter of the window size, which proved too small for our needs. However, with some extremely advanced *sarcasm prediction algorithms I designed and called the Dave Transform (DT as FT was already taken) we were able to get some awesome results.  Here&#39;s a diagram of the DT prediction algorithm...&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/06/davetransform.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/06/davetransform.png&#34;&gt;&lt;img alt=&#34;Dave Transform&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/06/davetransform.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can check out the &lt;a href=&#34;https://github.com/davefowler/jared.hockey&#34;&gt;jared source here&lt;/a&gt;.  It includes a nice python module for the serial interface with the CMUcam2 that might be useful to robotics or AI enthusiasts out there.  For more detail check out the &lt;a href=&#34;http://www.box.net/shared/0fez5m82ay&#34;&gt;powerpoint&lt;/a&gt; and &lt;a href=&#34;http://www.box.net/shared/a55cnezdrv&#34;&gt;final paper&lt;/a&gt;.  Unfortunately the group that took over the project after us decided that despite our impressive results and the excellent prediction, calibration, and testing code, learning python was much more difficult than just starting over with C++!  Our code is now wasted!  Gotta love Senior Design.&lt;/p&gt;
&lt;p&gt;So what were the results?  After 3 months of team work on the project (not a ton of work, it was only 2 credits) Jared.hockey could block almost everything chucked at it with incredible accuracy!  Unfortunately the arm offensive mechanism proved inadequate.  Though it was properly configured and timed to strike the puck at the right moment, it was not strong enough to return it with any force.  For future reference I personally think the two joint arm system (like humans) is better than one joint and a flicking device.  You need one serious solenoid to return a puck at 30 miles an hour.&lt;/p&gt;
&lt;p&gt;Anyway, we got it to block everything but were unable to get it to return any volleys.  All in all, I currently rank it at Jared.hockey v0.4, where v1.0 would mean it was skilled as the real Jared.  Check it out for yourself!&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;http://www.youtube.com/embed/YNbE-JMBF88&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">JaredSIM - The Adventure</title>
            <author><name>dave</name></author>
            <link href="/2007/06/20/jaredsim-the-adventure/"/>
            <updated>2007-06-20</updated>
            <published>2007-06-20</published>
            <id>/2007/06/20/jaredsim-the-adventure/</id>
                        <category   scheme="/blog/tags/"
                        term="JaredSIM"
                        label="Jaredsim" />
                        <category   scheme="/blog/tags/"
                        term="life"
                        label="Life" />
                        <category   scheme="/blog/tags/"
                        term="startup"
                        label="Startup" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;I get asked all the time about why I call all of my projects Jared.[project_name], what thingsilearned is about, and why we chose to call our company JaredSIM. The only way to explain it is to explain Jared, and the whole story, or adventure as I like to call it of JaredSIM. I thought I&#39;d write about it here to reduce some of the repetition, though I never mind telling  it as its a great story.&lt;/p&gt;
&lt;p&gt;Lets start from the beginning with the childhood of a one Mr. &lt;a href=&#34;http://www.jared-lee.com/blog&#34;&gt;Jared Lee&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;[The setting: a small private lake in northern Wisconsin. Camera zooms in from helicopter view on a young curious boy floating in an old tire tube reading an article on nimbostratus clouds in the N volume of the Encyclopedia Britanica. Que Narator]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Narator: &lt;/strong&gt;In a world of common people, going about their common tasks in their common everyday ordinary regular ways, a young boy was born and raised away from its influences...&lt;/p&gt;
&lt;p&gt;&lt;em&gt;[kill narator]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ok, I went a little overboard, back to regular story telling style. Jared was home schooled the majority of his childhood. His older brothers were moved away to college and he spent all of his time with his parents enjoying the frills of life that typical 50 year olds enjoy. Jared loved reading non-fiction, politics, religion, nature, radio, talking about the weather, photography, watching sports and other mature activities. It was during this time that, with the learning power of youth combined with the interests and intelligence of someone well beyond his years, Jared acquired almost all practical knowledge. Note: you might have to back over that last sentence, it was a big one.&lt;/p&gt;
&lt;p&gt;After graduating high school Jared decided to go to &lt;a href=&#34;http://www.gac.edu&#34;&gt;Gustavus Adolphus College&lt;/a&gt; and obtain a degree in physics, one of the few subjects he hadn&#39;t already learned. It was there in the dark rooms of &lt;a href=&#34;http://physics.gac.edu/Images/OLIN2.jpg&#34;&gt;Olin Hall&lt;/a&gt; that Jared and I, along with the other physics majors, would study all hours of the night. As would be expected with long periods of study tons of questions, both physics and non-physics related, were posed to the group: &#34;Who was the 8th president of the United States?&#34; &#34;How much does a pizza cost at the caf?&#34; &#34;What&#39;s the name of that girl that Cory made out with last week?&#34; &#34;Where are the beer specials today?&#34; &#34;What day is it?&#34; &#34;Is Jolene Right?&#34; &#34;When is our next frisbee game?&#34; etc.&lt;/p&gt;
&lt;p&gt;Some of those are easier to answer than others (Cory&#39;s dating habits have never been tough to follow and if it&#39;s not physics related, Jolene doesn&#39;t even get rhetorical questions right.), but miraculously, no matter the difficulty, Jared could answer all non-physics questions.&lt;/p&gt;
&lt;p&gt;It was a feat that remained unappreciated and even unnoticed until the semester Jared studied abroad in Australia. Suddenly when posing similar questions &#34;What will the weather be like in by the time i go outside?&#34; &#34;Who shot JFK?&#34;, the group wouldn&#39;t know. We were lost, and decided that we&#39;d have to start going downstairs to the computers and using a rising technology called the Internet and a search engine (Google) we had heard about others using to solve similar queries. After several unanswered searches (&#34;Is Jolene Right?&#34;), it was obvious that no technology existed that could adequately replace Jared. We had temporary hope that soon Jared would return but also realized the loss we would experience upon graduation.&lt;/p&gt;
&lt;p&gt;It was then put on me, the sole member of the group with computer programming skills, to simulate Jared so that we all, and the rest of the world, could have the advantages of those in his presence. The project/life task was called JaredSIM and is being carried out in several different sub projects. So far the following have been kicked off with varying successes: Jared.trader, Jared.survivor, Jared.hockey, and now Jared.learn. So you see the goal of JaredSIM is the mass production and distribution of the resources of Jared Lee and the goal of ThingsILearned.com is to acquire all of the things that Jared has learned in digital form.&lt;/p&gt;
&lt;p&gt;So you see there was a very simple explanation. I hope it got you excited to help teach!&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">California - Lets go!</title>
            <author><name>dave</name></author>
            <link href="/2007/06/19/california/"/>
            <updated>2007-06-19</updated>
            <published>2007-06-19</published>
            <id>/2007/06/19/california/</id>
                        <category   scheme="/blog/tags/"
                        term="JaredSIM"
                        label="Jaredsim" />
                        <category   scheme="/blog/tags/"
                        term="life"
                        label="Life" />
                        <category   scheme="/blog/tags/"
                        term="startup"
                        label="Startup" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;At 7:30 pm exactly 1 week ago today Priyesh, Vu and I packed up and left for the airport.  At 9:50 our plane departed and at 11:50pm we landed in San Francisco California ready to conquer the world that lay ahead of us!  ... By 12:15 Priyesh and I were lost somewhere in the city without our luggage, Vu, or a place to live.  It was a scary and lonely moment that definitely tested my confidence in our decision to move out here.  Like a small pond fish jumping into a waterfall, our budding Minnesota startup once full of limitless potential was tested against the fast moving big city scene of the Valley.  I like to think my survival instincts kicked in and I reacted calmly and decisively but Priyesh describes it more as freaking out.  Luckily due to the miracle of cellular technology Vu and James were able to find us an hour later and our startup, along with all of its members survived the first night!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/06/usagain1.jpg&#34;&gt;&lt;img alt=&#34;Leaving MN&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/06/usagain1.jpg&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The four of us along with Jame&#39;s girlfriend Anna are subletting a condo in Daly City, just 10 minutes south of San Francisco.  The place is big and the complex has two pools and a nice club house that I will make my office as soon as we can figure out a way to get our internet out that far.  We have few furnishings except for a kitchen table and a few things we brought and have collected: air mattresses, couches from bay area family, homemade computer desk from the side of the road, some lamps, a foosball table.  I was expecting a bit more hustle and bustle from the area but our complex happens to be in the middle of a mile of cemetery in each direction.  Seriously, check the &lt;a href=&#34;http://maps.google.com/maps?f=q&amp;amp;hl=en&amp;amp;q=368+Imperial+Way+Daly+City&amp;amp;sll=37.0625,-95.677071&amp;amp;sspn=33.352165,58.798828&amp;amp;ie=UTF8&amp;amp;ll=37.67268,-122.457047&amp;amp;spn=0.032541,0.057421&amp;amp;z=14&amp;amp;om=1&#34;&gt;map&lt;/a&gt;. In the case of any sort of zombie attack we&#39;re pretty much screwed.  James says that with our surplus of Cosco food we could hold out for quite a while, but especially after seeing &lt;a href=&#34;http://imdb.com/title/tt0463854/?fr=c2M9MXxsbT01MDB8ZnQ9MXxrdz0xfGZiPXV8dHQ9MXxteD0yMHxodG1sPTF8c2l0ZT1kZnxxPTI4IHdlZWtzIGxhdGVyfG5tPTF8Y289MXxwbj0w;fc=1;ft=21&#34;&gt;28 weeks later&lt;/a&gt; I&#39;m not naive enough to think they wouldn&#39;t fireball the whole place.&lt;/p&gt;
&lt;p&gt;Anyway, you can send us packages (hint: food) at that &lt;a href=&#34;http://maps.google.com/maps?f=q&amp;amp;hl=en&amp;amp;q=368+Imperial+Way+Daly+City&amp;amp;sll=37.0625,-95.677071&amp;amp;sspn=33.352165,58.798828&amp;amp;ie=UTF8&amp;amp;ll=37.67268,-122.457047&amp;amp;spn=0.032541,0.057421&amp;amp;z=14&amp;amp;om=1&#34;&gt;address&lt;/a&gt; though it probably only had a 50% chance of actually getting to us.  There seems to be a lot of problems with the way packages are delivered around here.&lt;/p&gt;
&lt;p&gt;The good thing about our location is that its only 2 miles from the &lt;a href=&#34;http://www.bart.gov/index.asp&#34;&gt;BART&lt;/a&gt; which goes all over the place.  I&#39;m going to have to take that and the Caltrain  to get to Stanford twice a week for my class.  I bought a bike today to make that trip a little shorter.  I rode the BART a couple times into San Francisco already to hang out with my friend &lt;a href=&#34;http://boomswaggerboom.wordpress.com/&#34;&gt;Josh Aas&lt;/a&gt; from Firefox.  Unfortunately we weren&#39;t out seeing Caroline Smith but he was in town for the amazing &lt;a href=&#34;http://developer.apple.com/wwdc/&#34;&gt;WWDC&lt;/a&gt; and invited me to hang out with some cool people afterward including some &lt;a href=&#34;http://www.caminobrowser.org/&#34;&gt;Camino&lt;/a&gt; developers, another GSoC student and Ben from the awesome startup &lt;a href=&#34;http://www.songbirdnest.com/&#34;&gt;Songbird.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&#39;ve also been to Stanford twice where we recruited our friend Zain for the team.  Zain is a super bright guy who&#39;s in the middle of his PhD at Stanford under Mark Horowitz, a founder of &lt;a href=&#34;http://news.zdnet.com/2100-9584_22-6064340.html&#34;&gt;Rambus&lt;/a&gt;.  Zain&#39;s hooking us up with a server on the insanely fast stanford network, the original ISP for google!  Stanford is an awesome awesome place.  They get tons of money from wealthy alumni and venture capital.  Their president is an EE professor supposedly worth over a billion dollars.  There are startup clubs, classes, and recruitment posters all over.  Its an incredibly exciting place.  I&#39;m glad I decided to take my summer course there instead of online.&lt;/p&gt;
&lt;p&gt;As you can see its been a crazy week, and somehow among all of that we still got quite a bit of work done.  More to come on the project soon.&lt;/p&gt;
&lt;p&gt;Oh, and a shoutout/congratulations to my friend and reader Zack Garbow.  Zack&#39;s been somewhat of a patent mentor to me at IBM and just became IBM&#39;s youngest Master Inventor breaking the previous record by 4 years!  Way to go Zack!  You may have 60 more patents than me but I&#39;m still racing you to 100.  He also wrote an awesome &lt;a href=&#34;http://apps.facebook.com/socialnews/&#34;&gt;facebook app&lt;/a&gt;.  If you&#39;re cool you&#39;ll add it.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/06/usagain1.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/06/usagain1.jpg&#34;&gt; &lt;/a&gt;&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Opening Tough Jars and Bottles for Tendonitis Sufferers</title>
            <author><name>dave</name></author>
            <link href="/2007/06/15/opening-tough-jars-and-bottles-for-tendonitis-sufferers/"/>
            <updated>2007-06-15</updated>
            <published>2007-06-15</published>
            <id>/2007/06/15/opening-tough-jars-and-bottles-for-tendonitis-sufferers/</id>
                        <category   scheme="/blog/tags/"
                        term="home remedies"
                        label="Home Remedies" />
                        <category   scheme="/blog/tags/"
                        term="life"
                        label="Life" />
                        <category   scheme="/blog/tags/"
                        term="tendonitis"
                        label="Tendonitis" />
            
            <content type="html">
                             &lt;p&gt;While I was dealing with tendonitis, I figured out how to open a variety of jars and bottles without too much strain. Here are some of the methods I&#39;ve acquired:&lt;/p&gt;
&lt;p&gt;Spaghetti jars:
Get a spoon. Wedge spoon slightly under jar lid and jimmy the rim. The safety button should pop. Lid comes off easily.&lt;/p&gt;
&lt;p&gt;Gatorade bottles. (This is great for wrist pain sufferers.):
Place a rubber dishwashing glove over the lid to provide grip and torsion. This reduces the force required to break the perforated seal on the lid rim. (Alternative: wear the glove.)&lt;/p&gt;
&lt;p&gt;Sauce bottles, frozen shut due to dried sauce:
Run the cap under hot water to loosen dried sauce. This will also dissolve some of the sauce that&#39;s closer to the rim. Next, apply either method described above.&lt;/p&gt;
&lt;p&gt;Stubborn jars with metal lids:
Find a doorstop, or any solid protrusion fixed to the ground, and with both hands, slam the jar lid against the protrusion until the dent is fairly deep. This pressurizes the air pocket below the jar lid, supplying extra force for the jar lid to com off. (Also, with additional force, the lid will be effectively destroyed.)&lt;/p&gt;
&lt;p&gt;Round cans with pull-keys:
Slip the tip of a screwdriver under the key from the side opposite the key hinge. With the tip of the screwdriver in place (a long flathead is better), pivot the screwdriver handle on the rim and press down hard on the handle.&lt;/p&gt;
&lt;p&gt;Square cans with pull-keys (sardines, Spam):
Unlike with round keys, the screwdriver should come in from the side of the key. Pull up the key to partially break the seal. With the tip inserted through the key and firmly on center of the seal, raise the handle to pop off a portion of the lid. Repeat this until the whole lid is off. If needed, work off the rest with a pair of needle-nose pliers.&lt;/p&gt;
&lt;p&gt;Soda pop cans:
Use needle nose pliers to raise the tab and pull it off, as you would normally with a thumb and index finger.&lt;/p&gt;
&lt;p&gt;All of these methods require some strain. Care should be taken to assess your level of ability before attempting any of these. If in doubt, ask a doctor or physical therapist before attempting any of these methods.&lt;/p&gt;
&lt;p&gt;--Vu&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Batch .jpg Image Resizer</title>
            <author><name>dave</name></author>
            <link href="/2007/06/11/batch-jpg-image-resizer/"/>
            <updated>2007-06-11</updated>
            <published>2007-06-11</published>
            <id>/2007/06/11/batch-jpg-image-resizer/</id>
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;Last night I was looking all over for a batch image resizer.  I needed to make a folder full of images smaller and didn&#39;t want to open &lt;a href=&#34;http://gimp.org/&#34;&gt;Gimp&lt;/a&gt; for each one.  I downloaded 2 that weren&#39;t what I wanted and just as I was about to get really frustrated I realized, hey, I&#39;ve taken two semesters of image processing.  I&#39;d been wanting to play around with the &lt;a href=&#34;http://www.pythonware.com/products/pil/&#34;&gt;Python Image Library (PIL)&lt;/a&gt; for a while and took this as my example problem.  It turned out to be real easy given their &lt;a href=&#34;http://www.pythonware.com/library/pil/handbook/image.htm&#34;&gt;thumbnail example&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I modified it to instead input a max width and max height that you wanted the batch of images to be converted to.  It then goes through and shrinks them to within the dimensions.   Here&#39;s a copy of their &lt;a href=&#34;http://www.box.net/shared/p0hipv3l72&#34;&gt;thumnails example&lt;/a&gt; and my &lt;a href=&#34;http://www.box.net/shared/m8qcxs7mj1&#34;&gt;resize source&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#! /usr/bin/env python

#A Batch Image Resizer
#By Dave Fowler 2007: davefowler@gmail.com

&#34;&#34;&#34;Image Resizer&#34;&#34;&#34;

from PIL import Image
import glob, os, sys

resize_folder = &#39;resized&#39;

maxW = float(sys.argv[1])
maxH = float(sys.argv[2])

for infile in glob.glob(&#34;*.jpg&#34;):
    file, ext = os.path.splitext(infile)
    if not os.path.exists( os.path.abspath(resize_folder) ):
    os.makedirs( os.path.abspath(resize_folder) )
    im = Image.open(infile)
    size = im.size
    if maxW/size[0] &amp;lt; maxH/size[1]:
    newsize = (int(maxW), int(maxW/size[0]*size[1]))
    else:
    newsize = (int(maxH/size[1]*size[0]), int(maxH))
    im = im.resize(newsize, Image.ANTIALIAS)
    im.save(resize_folder + &#39;/&#39; + infile, &#34;JPEG&#34;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run it you&#39;ll need &lt;a href=&#34;http://python.org&#34;&gt;python&lt;/a&gt; and &lt;a href=&#34;http://www.pythonware.com/products/pil/&#34;&gt;PIL&lt;/a&gt;.  Sorry, I haven&#39;t made an executable version yet.  Place the python file into the directory you want to resize or somewhere in your PATH and in the image folder use&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ python resize.py &amp;lt;max Width&amp;gt; &amp;lt;max Height&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A new directory will be made inside the folder called resized and will contain the resized versions of your image.  It currently only works for images ending in &#39;.jpg&#39;. Let me know if you make it fancier.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">On making business cards with Photoshop</title>
            <author><name>dave</name></author>
            <link href="/2007/06/10/40/"/>
            <updated>2007-06-10</updated>
            <published>2007-06-10</published>
            <id>/2007/06/10/40/</id>
                        <category   scheme="/blog/tags/"
                        term="JaredSIM"
                        label="Jaredsim" />
                        <category   scheme="/blog/tags/"
                        term="photoshop"
                        label="Photoshop" />
                        <category   scheme="/blog/tags/"
                        term="startup"
                        label="Startup" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;Vu here. Since signing onto this project, I&#39;ve had to figure out a thing or two about the program I&#39;d be using for the artwork, namely, Photoshop. (It&#39;s true that I&#39;ve only produced one or two works so far using the program. I also feel that &#34;winging it&#34; is the sine qua non of a successful startup . . . ^_^) Yesterday I spent the day learning shapes, text effects, and color to produce what you see here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/06/business_card1.png&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/06/business_card1.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Perhaps more could be said on best practices for business cards. I would not be the one to ask. Rather, here&#39;s what was used to make some of the effects seen above.&lt;/p&gt;
&lt;p&gt;The logo: A free font was used, with blending options set to inner shadow, gradient overlay, and stroke. In order to keep the logo consistent with any future color choices, I used transparent blend modes like overlay and multiply.&lt;/p&gt;
&lt;p&gt;Shapes: By keeping them as vector-type shapes in their own layer, I could quick edit the position of the vertices without loss of quality.&lt;/p&gt;
&lt;p&gt;The figure: Solid black lines over layers of solid colors with no dodge or burn layers, painted at 300% resolution and down-sampled for the business card, which was further down-sampled for web viewing.&lt;/p&gt;
&lt;p&gt;Color: A case study in trial and error. The color will probably be tweaked for a while to come. (It was suggested that bright colors would look friendly and personable, like our friend Jared.)&lt;/p&gt;
&lt;p&gt;Vu&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Food for Thought &amp; Thought about Food</title>
            <author><name>dave</name></author>
            <link href="/2007/06/10/food-for-thought-thought-about-food/"/>
            <updated>2007-06-10</updated>
            <published>2007-06-10</published>
            <id>/2007/06/10/food-for-thought-thought-about-food/</id>
                        <category   scheme="/blog/tags/"
                        term="art"
                        label="Art" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;For ages, cooking food has been considered to be an art perfected by few, and the rest of the people, just follow their footsteps. It has never before been seen as an experience. Why is it that hardly anyone goes into the kitchen and everytime, just try dfferent combinations and techniques with the same available food that they would eat everyday? Many remain content with adoring the same food and recipes for decades over and over again, without looking for a new style or technique.&lt;/p&gt;
&lt;p&gt;I have loved experimenting with combination of vegetables (no meat as I am vegetarian), spices, curries, and pastas and what not together. But that was about as far as I could go. This hobby is getting more encouragement and recipe additions this week with Vu and Dave when we experimented 2 random dishes which turned out pretty good. The first one was simply called &#34;Teriyaki Blend Noodles&#34; and second one is &#34;Coconut ChickPeas&#34;. However I never went further than exprimenting with combinations, partly due to the limitations of my student lifestyle and partly laziness.&lt;/p&gt;
&lt;p&gt;There hasn&#39;t been a change this great in American cuisine in decades ... &#34; is what Corby Kummer (Food Critic and Senior Editor, The Atlantic Monthly) had to say about Alinea Restaurent in Chicago. A Complete video called &#34;&lt;a href=&#34;http://link.brightcove.com/services/link/bcpid79489195/bclid60818931/bctid494918680&#34;&gt;The Elements of Taste&lt;/a&gt;&#34; is posted on MIT&#39;s &lt;a href=&#34;http://www.techreview.com&#34;&gt;TechReview&lt;/a&gt;.&lt;a href=&#34;http://link.brightcove.com/services/link/bcpid79489195/bclid60818931/bctid494918680&#34;&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chef Grant Achatz seems to have taken technology in food sciences to the extreme by putting amazing amounts of details into transforming food into forms and styles which pieces of art and present delicious experiences which is attracting people from all over the world to Alinea. Definitely worth a try and forces me to think beyond the conventional modes of producing textures, tastes and presentations for food.&lt;/p&gt;
&lt;p&gt;Priyesh&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">XML Syntax on Emacs</title>
            <author><name>dave</name></author>
            <link href="/2007/06/10/xml-syntax-on-emacs/"/>
            <updated>2007-06-10</updated>
            <published>2007-06-10</published>
            <id>/2007/06/10/xml-syntax-on-emacs/</id>
                        <category   scheme="/blog/tags/"
                        term="plone"
                        label="Plone" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;My Emacs editor unfortunately doesn&#39;t know that I&#39;m developing for Zope/Plone and that .zcml and .pt files are a form of XML.  I had to look up how to let it know so I could get some syntax highlighting and smart tabbing.  Without those, XML is really annoying.  This time &lt;a href=&#34;http://www.thaiopensource.com/nxml-mode/&#34;&gt;ThaiOpenSource.com&lt;/a&gt; had the solution with nXML.  It was surprisingly easy to setup.  Download the latest version of &lt;a href=&#34;http://www.thaiopensource.com/download/&#34;&gt;nxml-mode-YYYYMMDD.tar.gz&lt;/a&gt; and follow the README.  As always there are some modifications to the README to suit specific needs.  Here&#39;s what I did.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Untar the nxml-mode-YYYYMMDD into ~/emacs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open emacs and type&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;alt&amp;gt;-x load-file &amp;lt;ret&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;~/emacs/nxml-mode-YYYYMMDD/rng-auto.el &amp;lt;ret&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;alt&amp;gt;-x nxml-mode &amp;lt;ret&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now to get it to load every time open your~/.emacs file and add
&lt;code&gt;(load &#34;~/emacs/nxml-mode-YYYYMMDD/rng-auto.el&#34;)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Also add the following to get it to recognize common xml extensions including .zcml and .pt&lt;/p&gt;
&lt;p&gt;(setq auto-mode-alist
    (cons &#39;(&#34;.(xml|xsl|zcml|pt|rng|xhtml)&#39;&#34; . nxml-mode)
        auto-mode-alist))&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart Emacs&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That should do it.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">OS X Terminal - Prompt Format</title>
            <author><name>dave</name></author>
            <link href="/2007/06/07/os-x-terminal-prompt/"/>
            <updated>2007-06-07</updated>
            <published>2007-06-07</published>
            <id>/2007/06/07/os-x-terminal-prompt/</id>
                        <category   scheme="/blog/tags/"
                        term="os x"
                        label="Os X" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;As I&#39;ve alluded to &lt;a href=&#34;http://thingsilearned.wordpress.com/2007/04/26/screw-you-a-python-example/&#34;&gt;previously&lt;/a&gt; I like to customize my terminal as I spend plenty of time in it.  I typically go with an old school green on black, though sometimes I go with a simple black on white depending on my mood.  A lot of terminal settings unfortunately aren&#39;t customizable from the preferences.  One such setting is the format of the command prompt.  I was getting really anoyed with the wrapping length of mine today.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/06/longterminal.png&#34;&gt;&lt;img alt=&#34;Long Terminal&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/06/longterminal.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Just not acceptable.  Luckily &lt;a href=&#34;http://osxdaily.com/2006/12/11/how-to-customize-your-terminal-prompt/&#34;&gt;OS X Daily&lt;/a&gt; came through with the solution.   They use some non-default steps however so here are my recomendations.  I&#39;m assuming you&#39;re using a bash prompt which starts up running .profile (if you&#39;re not sure, you probably are).  Open your .profile file with the following&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ emacs ~/.profile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add the following command somewhere in the opened file.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export PS1=&#34;\u@\h-\W$ &#34;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now press &lt;em&gt;Ctl-X Ctl-S&lt;/em&gt; to save it and then &lt;em&gt;Ctl-X Ctl-C&lt;/em&gt; to close back to your terminal.  To load the settings re-source your .profile with&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ source ~/.profile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The setting will change your command prompt to [user name]@[host name]-[current dir].  It should look something like this...&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/06/shortterminal.png&#34;&gt;&lt;img alt=&#34;Short Terminal&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/06/shortterminal.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So much better now.  If you don&#39;t like mine you can make your own format by changing whatever&#39;s between the quotes.  The following variables can be used:
&lt;code&gt;\d - Current date
\t - Current time
\h - Host name
\# - Command number
\u - User name
\W - Current working directory
\w - full path&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;As you can see the default must have been &#34;\h:\w \u&#34;.  Thank god we&#39;re rid of that!  It was so long...&lt;/p&gt;
&lt;p&gt;As a bonus tip, if you don&#39;t like your host name for some reason like your computer still isn&#39;t smart enough to notice obvious typos like Dave-Fowers-Computer you can change it in &lt;em&gt;System Preferences &amp;gt; Sharing &amp;gt; Computer Name.&lt;/em&gt; Might I recommend the name Jared. For some reason it always makes me feel more safe.&lt;/p&gt;
&lt;p&gt;Hope you enjoyed one of the thingsilearned today.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Plone Blogging </title>
            <author><name>dave</name></author>
            <link href="/2007/06/04/blogging/"/>
            <updated>2007-06-04</updated>
            <published>2007-06-04</published>
            <id>/2007/06/04/blogging/</id>
                        <category   scheme="/blog/tags/"
                        term="plone"
                        label="Plone" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;Evolution is a journey which everything goes through. Yep everything. In fact I sometimes feel it would be much better to be in the shoes of a software framework instead of being a human when it comes to adventure and changing to adapt with the surrounding environment. I would like to just talk a little about one such small evolutionary process in the life of an Open Source Content Management System (CMS) - Plone. There are various contending add-on products for implementing blogging in Plone, and I hope Dave can assimilate the best of all the technologies during his GoogleSOC in order to implement commenting infrastructure for Plone.&lt;/p&gt;
&lt;p&gt;Some of the stable implemented add-ons for plone are Quills, EasyBlog, and qPloneBlog. EasyBlog provides the basic framework in order to make blogging possible, with plethora of security and visibility configurations for the user or group of users. It also provides some of the other basic utilities of blogging, such as archiving, trackback etc. but that is about as far as it can go. Some of the other add-ons - Quills and qPloneBlog go further and provide pinging support, Blogger API support, track back pings etc. However, some of the features stand apart in both Quills and qPloneBlog. While qPloneBlog provides RSS support to disseminate information, Quills provides blog aggregation support, which can be used for blog searches more easily and efficiently. Summarizing the features:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Quills:&lt;/em&gt;
Features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Archival entry paths. Access blog archives via standard paths such as http://example.com/myblog/archive/2004/04/06/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Topics with descriptions and images&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BloggerAPI support for remote posting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Track Back Pings&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Visitors can leave comments on blog entries, optionally require registration to limit &#34;Comment Spam&#34;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unlimited Authors, Blogs per Author, and Authors per Blog&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Site-wide blog aggregator&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blog Planets for groups&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multiple topics and advanced topic searching, with simple URIs such as http://example.com/myblog/topics/work/project/&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;EasyBlog:&lt;/em&gt;
Features&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Multiuser/Multiblogs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Categories&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Monthly archives&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Trackbacks&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Receiving&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;allow/disallow (per blog/entry)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;show/hide (per blog/entry)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;moderate yes/no&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;blacklist: always to be reviewed&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sending&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;autodetection (per blog/entry)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;logfile&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Comments&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;allow/disallow (per blog/entry)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;show/hide (per blog/entry)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;moderate yes/no&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;preview yes/no&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTML tags/attributes handling&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;blacklist: always to be reviewed&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;q Plone Blog:&lt;/em&gt;
Features :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pinging functionality with enhanced options.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RSS2 support altogether with audio and video enclosures&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Technorati tags&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TrackBack functionality&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google AdSense management included into blog layout&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;blogging APIs support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;trackbacks blacklisting control&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;included popular bookmarklets icons layout&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hopefully Dave can pull of integration off all such generic blogging utilities into one neat infrastructure to provide plone users another reason to rejoice. Right Dave?&lt;/p&gt;
&lt;p&gt;Priyesh&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">GSoC - Plone Comments</title>
            <author><name>dave</name></author>
            <link href="/2007/06/02/gsoc-plone-comments/"/>
            <updated>2007-06-02</updated>
            <published>2007-06-02</published>
            <id>/2007/06/02/gsoc-plone-comments/</id>
                        <category   scheme="/blog/tags/"
                        term="plone"
                        label="Plone" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
                        <category   scheme="/blog/tags/"
                        term="startup"
                        label="Startup" />
            
            <content type="html">
                             &lt;p&gt;A few posts ago I talked about our exploration into different frameworks and how we were going to give them all a fair and balanced analysis.  Well, I lied. My apologies to any web curious developers out there who I may have disappointed. About 4 months ago I ran into &lt;a href=&#34;http://www.plone.org&#34;&gt;Zope/Plone&lt;/a&gt; (yes, very late to the game) and thought it was pretty much the coolest thing out there.  Amazed that I hadn&#39;t heard of it before I thought it was something new, but no, its been out for a surprisingly long time and is used by &lt;a href=&#34;http://plone.net/sites&#34;&gt;a ton of sites&lt;/a&gt; including &lt;a href=&#34;http://www.nasa.gov&#34;&gt;NASA&lt;/a&gt; and the &lt;a href=&#34;http://www.cia.gov&#34;&gt;CIA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anyway, I applied for a &lt;a href=&#34;http://code.google.com/support/bin/answer.py?answer=60266&amp;amp;topic=10726&#34;&gt;Google Summer of Code&lt;/a&gt; (GSoC) grant.  For those of you who don&#39;t know what it is, Google is just such an awesome company that they sponsor, with real money, students to work on open source projects.  One of the projects they sponsor was &lt;a href=&#34;http://plone.org/news/google-summer-of-code-2007-projects/&#34;&gt;Plone&lt;/a&gt; who just so happen to need an &lt;a href=&#34;http://plone.org/products/plone/roadmap/179/?searchterm=improved%20commenting&#34;&gt;improved commenting infrastructure&lt;/a&gt;.  I&#39;m happy to say I got the opportunity and am now working with mentor Wichert Akkerman.  There seems to be a great interest/need in the community for the improvement.  Jon Stahl was nice enough to blog about his ideas and advice on &lt;a href=&#34;http://blogs.onenw.org/jon/archives/2007/05/16/improving-plone-comments/&#34;&gt;Improving Plone Comments&lt;/a&gt;.  I look forward to making a good product.&lt;/p&gt;
&lt;p&gt;So I guess that once we finally decided what our startup was going to do, I was already pretty bias toward what programing language and web framework I wanted to use :).  It will be great to work as part of the Plone community while using it for our startup.  The GSoC will also provide us with a little spending cash for the summer!  So far we&#39;ve just been climbing the steep learning curve of Zope/Plone and get more and more impressed with its current functionality.  One day, no doubt, I&#39;ll curse it for poor scalability or difficulty in expansion, but for building a prototype of a complicated web app there&#39;s nothing else like it.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">200 Page Views!</title>
            <author><name>dave</name></author>
            <link href="/2007/05/30/200-page-views/"/>
            <updated>2007-05-30</updated>
            <published>2007-05-30</published>
            <id>/2007/05/30/200-page-views/</id>
                        <category   scheme="/blog/tags/"
                        term="startup"
                        label="Startup" />
            
            <content type="html">
                             &lt;p&gt;Today at 8:12 ThingsILearned.com hit a milestone, 200 page views!  Okay, that&#39;s not too exciting, especially since we&#39;re still just a blog.  But I thought it&#39;d be good to get in some practice for when we&#39;ve got the site launched and get to 2 million or 200,000 users or something like that.  No budget for a big Silicon Valley milestone party but I&#39;ll slame a root beer with Priyesh.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;Celebrate&#34; src=&#34;http://news.bbc.co.uk/media/images/39121000/jpg/_39121164_costa_celebrate200x245afp.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Lets see, the site&#39;s been up a month or so now.  With 200 hits per month, if I added adsense we&#39;d pull in an estimated $.02 a month!   That&#39;s getting scarily close to profitability!For a progress report: we&#39;re still stuck in Minnesota for a week more.  Priyesh and I are working hard learning Zope/Plone in my parent&#39;s basement.  James is in California booking our summer sublet and Vu is home packing up his apartment for the summer trip.&lt;/p&gt;
&lt;p&gt;We&#39;ve ironed out all of the details of what we&#39;re making.  Its going to be really exciting!  We&#39;re mostly done with the executive summary and applied to the &lt;a href=&#34;http://www.breakthroughideas.org/&#34;&gt;Minnesota Cup&lt;/a&gt;. I&#39;ll be sure to post what exactly we&#39;re making as soon as I can :).&lt;/p&gt;
&lt;p&gt;Anyway, 200 page views!  Thanks for celebrating with us.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">CImgLib - A Simple Image Class for PNG Files.</title>
            <author><name>dave</name></author>
            <link href="/2007/05/29/cimglib-a-simple-image-class-for-png-files/"/>
            <updated>2007-05-29</updated>
            <published>2007-05-29</published>
            <id>/2007/05/29/cimglib-a-simple-image-class-for-png-files/</id>
                        <category   scheme="/blog/tags/"
                        term="os x"
                        label="Os X" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;I wrote a bit about it before but while working on the Seperation of Reflections project I needed a simple C++ image library.  I experimented with several over a few hours, most had just way too much stuff for me to quickly dive into so I ended up writing my own small image API.  All I wanted was a simple class that had some sort of 2D array of pixel values to work with.  Was that too much to ask?  The other libraries no doubt have some functionality like this but none that I ran into were intuitive enough for me to install and pick up in 30 minutes or even a few hours.  My images were in png format so I decided I&#39;d build something off of libpng.  I found some example code writen by &lt;a href=&#34;http://thingsilearned.wordpress.com/mandrakesoft.com&#34;&gt;Guillaume Cottenceau&lt;/a&gt;.  His code was simple enough, just read and wrote a png file using libpng, yet contained the necessary error handling functions. I put the functions into a class called Image that would hold the data.  I also added a few simple extras like a convolution function and then off of that a sobel function.  &lt;a href=&#34;http://www.box.net/shared/53strvcg92&#34;&gt;Download the code here.&lt;/a&gt;  Keep in mind that the makefile is for Mac osx 10.3.9.  You&#39;ll probably have to locate your png.h and libpng and adjust the INCLUDE and LIBPATH variables respectively for your system.  Then here&#39;s how to run the example once in the downloaded directory.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ make
$ ./Sample danandmegan.png
$ open sobel.png&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/05/sobel1.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/05/sobel1.png&#34;&gt;&lt;img alt=&#34;Danandmegan Sobel&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/05/sobel1.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The example simply runs a sobel edge detector algorithm on the input image danandmegan.png.  Lets look at what the example is doing.  Here&#39;s the source, of the example Main.cpp.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include &#34;Image.h&#34;
#include &#34;time.h&#34;

//testing main
int main(int argc, char **argv) {

Image img;
img.read_init(argv[1]);
img.pixels = (png_bytep*) malloc(sizeof(png_bytep) * img.height);
for (y=0; y&amp;lt; img.height; y++);
img.pixels[y] = (png_byte*) malloc(img.info_ptr-&amp;gt;rowbytes);
img.read();

Image sobel;
sobel.read_init(argv[1]);
sobel.pixels = (png_bytep*) malloc(sizeof(png_bytep) * sobel.height);
for (y=0; y &amp;lt; sobel.height; y++)
sobel.pixels[y] = (png_byte*) malloc(sobel.info_ptr-&amp;gt;rowbytes);
sobel.read();

//take the sobel of img (must start with a copy in sobel)
img.sobel(&amp;amp;sobel);

//for testing purposes write out a sobel!  Its fun!
sobel.write(&#34;sobel.png&#34;);

return 0;

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;em&gt;Image::read_init( [filename] )&lt;/em&gt; command initializes the read of the image at the path &lt;em&gt;[filename]&lt;/em&gt;.  It is used to initialize &lt;em&gt;Image::height, Image::width&lt;/em&gt;, and &lt;em&gt;Image::info_ptr&lt;/em&gt;.  You then need to allocate space for the image as the class just contains a pointer to arrays called pixels.  The allocation is done in the three lines following the read_init.  Then to get the image into the allocated array use the &lt;em&gt;Image::read()&lt;/em&gt; function.&lt;/p&gt;
&lt;p&gt;Next another Image instance called sobel is made, and allocated to be the same size as the other image.  This will be where the output of the sobel edge detector is stored.&lt;/p&gt;
&lt;p&gt;The sobel algorithm is then run with the &lt;em&gt;Image::sobel([pointer to output image])&lt;/em&gt;.  And finally the image is writen to sobel.png with &lt;em&gt;Image::write( [output filename] )&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Simple right?!  I think so.  To check out how pixel values are accessed view the conv and sobel functions in Image.cpp.  Its just simple 2D array access ( img.pixels[y][x]).  Keep in mind that they&#39;re stored as png_byte&#39;s, which are simply 8 bit integers.  Leave a comment with any questions or corrections.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Day 1 - Introduction</title>
            <author><name>dave</name></author>
            <link href="/2007/05/25/day-1-introduction/"/>
            <updated>2007-05-25</updated>
            <published>2007-05-25</published>
            <id>/2007/05/25/day-1-introduction/</id>
                        <category   scheme="/blog/tags/"
                        term="life"
                        label="Life" />
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
                        <category   scheme="/blog/tags/"
                        term="startup"
                        label="Startup" />
            
            <content type="html">
                             &lt;p&gt;Yesterday 3 guys moved with me into my parents basement.  I have amazingly supportive parents, though they often wonder whether they adopted me.  Most of us can&#39;t move to California for a week or two but we want to get started so we chose to do that here.  We&#39;re all set up on a collection of desks I&#39;ve accumulated over the years and along with the coffee shop my sister and I setup down here two days ago we have a pretty awesome mini startup hub.&lt;/p&gt;
&lt;p&gt;So far we&#39;ve just been setting up, fresh installing Ubuntu 7.04, shooting around ideas and testing out a variety of web frameworks we&#39;re considering.   We&#39;ve got some  really good ideas and in combination they&#39;re going to be  something amazing.  Am I sure exactly what yet?  No.  Am I sure it will be awesome?  Yes.  The web frameworks we&#39;re checking out are Django, Ruby on Rails, Zope/Plone, and PHP/MySQL.  I personally only have experience with the last, and am not a big fan.  I&#39;m a huge Python fan however so I&#39;m personally hoping Django or Zope/Plone win out.  I&#39;m learning the setup of Plone now, a process with a decent learning curve, though that&#39;s expected.  At the awesome &lt;a href=&#34;http://barcamp.org/MinneBar&#34;&gt;Barcamp Minnebar&lt;/a&gt; event a month ago I stayed longer than I was planning to check out a great discussion panel on web frameworks featuring the impressive &lt;a href=&#34;http://www.loudthinking.com&#34;&gt;David Heinemeier Hansson&lt;/a&gt;, the creator of Rails himself.  The discussion was helpful but I decided I still needed to try them all out myself.  I&#39;ll post later our results and maybe some discussion on our experience on the first day with each framework.&lt;/p&gt;
&lt;p&gt;If you noticed in the previous thread, I&#39;ve invited the other guys on the team to the blog.  Hopefully they&#39;ll also include their experiences and things they learned.  Here&#39;s an introduction to the whole team.  We all know each other through HKN, the Electrical Engineering Honor Society and recruited each other at various points over the past 2 months.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Vu Dang&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Vu has a bachelors in Electrical Engineering and has a variety of hobbies including writing and art.   Vu interestingly decided not to tackle a job after graduating this December.  Instead he&#39;s pursuing his own interests.  We recently (last week) talked him into joining the team and moving with us out to California.  He&#39;ll be an excellent addition with his artistic abilities and writing skill combined with his engineering knowhow.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dave Fowler &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Dave will receive his Masters in EE at the end of the summer and has a few undergrads.  He has a huge imagination and a good amount of technical abilities that&#39;ve landed him 10 patents so far.  He&#39;s extremely project oriented and looking forward to putting in the long hours like he did in his Physics days.  He is the only member that does not come from a background of entrepreneurs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Priyesh Jain&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Priyesh has an undergrad in Computer Engineering and will begin his Masters in Computer Science in the fall.  He&#39;s from India and spends what little free time he has volunteering for assistive engineering projects.  He was recruited to the team a few weeks ago when we found out he hadn&#39;t been swept up by an internship yet.  He&#39;s an intelligent and hard worker and will be an incredible addition to the technical aspects of the project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;James Skarie&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;James has a masters in EE with a thesis in Databases.  He comes from a background of entrepreneurs and refuses to take a regular job.  The team was first assembled when James contacted Dave to get lunch, and both showed up planning to talk the other into doing a startup.&lt;/p&gt;
&lt;p&gt;It&#39;s going to be an interesting summer.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Diversity! Differences! Mind!! Man this World in unequal!!</title>
            <author><name>dave</name></author>
            <link href="/2007/05/24/diversity-differences-this-world-is-full-of-them-sometimes-also-called-savants-there-are-a-few-extraordinary-people-around-us-who-have-amazing-ability-to-remember-things-daniel-is-one-such-e/"/>
            <updated>2007-05-24</updated>
            <published>2007-05-24</published>
            <id>/2007/05/24/diversity-differences-this-world-is-full-of-them-sometimes-also-called-savants-there-are-a-few-extraordinary-people-around-us-who-have-amazing-ability-to-remember-things-daniel-is-one-such-e/</id>
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;Sometimes also called savants, there are a few extraordinary people around us who have amazing ability to remember things. Daniel is one such extraordinarily gifted man born out of East London who suffered seizures at the age of four, after which life was never the same for him or the people around him. With the ability to perceive numbers as figures and colors, he can solve enormous calculations in his mind just by visualizing the shapes, colors, and sound in a jiffy. Not only that, he has also proven his ability to learn a new language in a shocking record time of one week. There are several people around the world who are known to have the ability to remember and learn, but unfortunately a lot of times such gifted people suffer lack of social skills. Daniel however, unlike his counterparts enjoys the best of both the worlds. He is funny, witty and a genius all at the same time, the perfect combination.&lt;/p&gt;
&lt;p&gt;[googlevideo=http://video.google.com/videoplay?docid=-3372301236664593143&amp;amp;q=genre%3Aeducational]&lt;/p&gt;
&lt;p&gt;I believe everyone would like to be the perfect man that Daniel portays with knowledge spanning all societies, generes and aspects of life, along with the ability to take advantage of all of them in real life. Only if there was a Daniel in everyones life to inspire to live the perfect life. Even with the pervasive spread of web 2.0 technology and Artificial intelligence in servers, every big enterprise seems to be striving to make it easier for people to know more about things they need, and striving to make a cure all for every requirement and need possible. I wish I could personally know a Daniel in my life, who would be able to mentor me in my life.&lt;/p&gt;
&lt;p&gt;Priyesh&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">First Grade and Robots</title>
            <author><name>dave</name></author>
            <link href="/2007/05/24/first-grade/"/>
            <updated>2007-05-24</updated>
            <published>2007-05-24</published>
            <id>/2007/05/24/first-grade/</id>
                        <category   scheme="/blog/tags/"
                        term="life"
                        label="Life" />
            
            <content type="html">
                             &lt;p&gt;Yesterday was my last day at IBM, and today I went back to first grade.  To most people that might sound backwards.  Personally I don&#39;t care what it sounds like, I think its the way to go.&lt;/p&gt;
&lt;p&gt;My sister is a first grade teacher and asked me to come into class and demonstrate my robot (yes I&#39;m that cool) and I also decided to bring in an old computer to show them what the inside looks like.  They&#39;d apparently been bugging her to have me visit ever since she told them that I had a robot.  I knew coming in that they&#39;d be horribly disappointed.  They were all imagining some android like warrior to follow me in the class and crush a few cars for them.  Instead they see my simple hobby machine that&#39;s only slightly more impressive and considerably more expensive than a remote control car.&lt;/p&gt;
&lt;p&gt;Here&#39;s a picture of it, though don&#39;t let it fool you.  As of yet the laptop isn&#39;t hooked up to actually control the robot (largely do to OS compatibility issues) and the arm that looks like its about to plug the robot has proven, after several cracked outlet plates, to be incapable of the task.  The goal of the shown robot is to eventually (when I have a year of free time) be the first self surviving, or &#39;wild&#39; robot.  I&#39;ve written a vision algorithm that detects outlets, what&#39;s left is the laptop to robot controls connection and significant work on the mechanics of the arm.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/05/jared_robot.jpg&#34;&gt;&lt;img alt=&#34;Jared Robot&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/05/jared_robot.jpg&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Anyway, it was a great time,  and they seemed to learn a lot about robotics and computers.  I gave them a very very high level explanation of how video games work, from putting those round things in to what you see on your screen.  I think a few of them kind of got it.  They were certainly very interested and thought it especially exciting that my robot was named Jared.  I got about a million questions some of the highlights were &#34;can it eat my breakfast?&#34;, &#34;can it do my laundry?&#34;, &#34;how big can you make a robot?&#34;, &#34;can you make one as big as a car?&#34;, &#34;can you make one as big as a bus?&#34;, &#34;can you make one as big as a school?&#34;, &#34;my dad can fix stuff really good.&#34;  They have a lot of fun in first grade.  I shouldn&#39;t have left, I should have just gone with them to recess.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Starting Toward Probable Failure</title>
            <author><name>dave</name></author>
            <link href="/2007/05/20/starting-toward-probable-failure/"/>
            <updated>2007-05-20</updated>
            <published>2007-05-20</published>
            <id>/2007/05/20/starting-toward-probable-failure/</id>
                        <category   scheme="/blog/tags/"
                        term="startup"
                        label="Startup" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;&lt;em&gt;Disclaimer: Several people have complained that the following article is negative or pesemistic refering to my discussion that the probable fate of our dot com is failure.  I would like any new or old readers to realize that I&#39;m merely having fun with that fact and am nothing less than overly optimistic about ThingsILearned.  The point of the article is to show that, the odds are slim, but the reward is great no matter what the outcome.  It was meant to explain myself to people who are pesemistic about the startup.  Instead it backfired as I have few pesemistic friends and family members and more amazingly supportive ones.   So to them I say thank you, and I&#39;m not going to lie, I&#39;m probably going to be worth a few billion.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Free at last!  Free at last!  I&#39;m officially done with the semester and ready to move to California and start my journey toward the probable fate of being yet another failed dot com!  In the heart of Minnesota, especially around non technical people, I get a lot of curiosity and doubts about doing something like a startup.  So I thought I&#39;d answer the FAQ in a self interviewing form to quench some curiosities and alter the perception of startups.&lt;/p&gt;
&lt;p&gt;Dave, what are you doing this summer?  I&#39;m moving to California to fail at a dot com.  What about IBM?  I caved and am starting there in the fall, but I&#39;ll be taking the summer off to do the .com.  Ok... what&#39;s your .com going to do?  No idea.  Isn&#39;t that bad?  Probably.  Aren&#39;t the odds of success really low?  Probably.  Will you lose a lot of money?  Probably.  Why california?  I had a dream that women there go nuts for mildly attractive nerdy guys with a few extra pounds. Who&#39;s going with you?  Two or three of my friends.  Do you have a place to live yet?  Probably.  Where?  Probably somewhere around Berkeley. Do you have any school left?  I need to take one more summer course to finish my masters, I&#39;m excited at the chance to take it at Stanford this summer.  What will you live off?  I have some savings from my work at IBM and my patents.  Wait, so you&#39;re not going to work 9 to 5, settle down and live the typical minnesota suburban life?  Um, stop freaking me out.  Are the people going out there with you crazy? Probably.  Are you going to fail?  ....&lt;/p&gt;
&lt;p&gt;Probably, but lets look at the positives.  I&#39;ve got 2 or 3 of my friends moving out to Cali for the summer to have a good time, experience some new things, and hack out a ton of code.  Worst case scenario, I&#39;m down a few thousand dollars, had a great summer and an awesome chapter in my life I can be proud of.  Sure the odds of anything working out and me becoming the next (insert weathy founder here) are slim, but how slim?  I&#39;m thinking (neiveley) that its one in ten.  Its impossible to make a statistic like this because it totally depends on your ideas, the people involved, luck, hard work, and a million other things.  But historically I&#39;ve had success with all of those.  So I give myself a one in ten chance of making it big, at the low cost of a few thousand dollars in living expenses for the summer.  Those are odds I worked hard for, and deserve to cash in on.  No better time to cache in on them than now.  Until just a couple weeks ago I was actualy planning on just doing the startup and turning down IBM.  I had already rejected a few places including Intel, an interview offer from Firefox, and other jobs at IBM.  But my current manager and boss came to me with an awesome offer, not monitarily, some of the others would have definitely paid a LOT more as Josh Aas from Firefox regrettably informed me last night.  But the offer is to take a huge role in a project I can&#39;t talk much about.  Its some really amazing technology however, and I&#39;d have a key role developing and making more patents.  I was also asked to intern on the patent review board, which would give me amazing experience and generate that skill I&#39;m seeking and slowly developing to be able to tell what ideas are novel and what aren&#39;t.  Its really amazing learning that, to be able to recognize what ideas are new and unique and valuable.  It totally expands the way you think and generate ideas.  Anyway, the offer is only for stuff that I have to do now and couldn&#39;t come back to in a year or however long it will take for my dot com to probably fail, and it seriously just made me too physically sick to turn down.&lt;/p&gt;
&lt;p&gt;For those of you still worried about me or interested in startups I suggest reading the &lt;a href=&#34;http://www.paulgraham.com/notnot.html&#34;&gt;Why to Not Not Start a Startup&lt;/a&gt; by Paul Graham.  He&#39;s written a ton of essays on the subject of startups and is an incredible resource.  Its almost cliche now but I have to give the man some due credit for his influence.  It was 3 months ago, while deciding what I really wanted to do with my life after I graduated that my buddy Al Watson sent me a link to Graham&#39;s site, because it had a video of the &lt;a href=&#34;http://paulgraham.com/anybots.html&#34;&gt;first dynamically balancing biped robot&lt;/a&gt;.  I&#39;d read a few of his essays over a year before when Bryce Johnson and I first applied to &lt;a href=&#34;http://ycombinator.com/&#34;&gt;Ycombinator&lt;/a&gt; but started taking another look.  In one of the essays he said that the best time to start a startup is when you&#39;re 24 and just finishing grad school.  I&#39;ve always wanted to do some sort of a startup, and that&#39;s when it hit me.  This is me now!  Now is the time to go for it!  And so I am.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Separating Reflections From a Single Image Using Local Features</title>
            <author><name>dave</name></author>
            <link href="/2007/05/15/separating-reflections-from-a-single-image-using-local-features/"/>
            <updated>2007-05-15</updated>
            <published>2007-05-15</published>
            <id>/2007/05/15/separating-reflections-from-a-single-image-using-local-features/</id>
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;I said a while ago that I&#39;d get around to slowly posting a few of the things I&#39;ve been working on.  A week ago I presented my final project for Image Processing along with my partner Jonathan Waltz.  It was to implement &lt;a href=&#34;http://ieeexplore.ieee.org/iel5/9183/29133/01315047.pdf&#34;&gt;Separating reflections from a single image using local features&lt;/a&gt;, a paper by A. Levin, A. Zomet and Y. Weiss.  For the presentation details check out &lt;a href=&#34;http://www.box.net/shared/g2br4of33t&#34;&gt;our slides here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The goal of the paper is to take a single image with reflections and separate it into two images without reflections.  The advantage?  When you take a picture from your car, tour bus or through the window at your office you can now remove the extra crap you get from the window reflections!  Sounds easy enough but its actually an incredibly difficult and computationally expensive task.  The problem can be represented by the equation&lt;/p&gt;
&lt;p&gt;I = I1 + I2&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/05/ii1i2.png&#34;&gt;&lt;img alt=&#34;Seperation Problem Description&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/05/ii1i2.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;where I is the original image and I1 and I2 are the desired separated images.  The image of the overlapping box and circle depict the equation.  Practically speaking there are an infinite number of different I1&#39;s and I2&#39;s that sum up to the original image!  Though its visually easy for us to pick apart the two images, a box and a circle, a computer has a much tougher time.&lt;/p&gt;
&lt;p&gt;But we can&#39;t let the large task keep us from trying.  Large tasks are what computers are made for right!?  Instead we break the image down into overlapping 7x7 pixel patches.  Then we use the benefits of a natural image database!  I learned a lot about these things but its still crazy to me how they work.  Basically a database of a bunch of &#34;natural&#34; or common images are used to gain further information on what our two images should look like.  I built our database by collecting all 7x7 patches in two photographs I stole from my friends on facebook.  Then with the use of derivative and directional filters the approximately 100k samples are compared to the derivatives of the original image patches.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/05/nidb.png&#34;&gt;&lt;img alt=&#34;Natural Image Database&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/05/nidb.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The goal is to solve the original problem equation for each patch, p = p1 + p2.  Advantaging the scarcity of the derivative we find a p1 that&#39;s closest to p, and then a p2 that best fits p2 = p - p1.  One set of p1&#39;s and p2&#39;s isn&#39;t enough.  Instead the best 10 sets are used, and scrambled into 40 different p1 and p2 combinations.  Finding the combinations is a very computationally expensive task, as for each of the original patches 11 patch compares must be done on each of the 100k samples in the database.  Note: don&#39;t do this in Matlab, it takes forever.  I&#39;d done all the other Image Processing assignments in Matlab just because it was familiar after taking Computer Vision last spring.  I quickly realized that I&#39;d have to find a C++ API.  I tried several out but I either had porting issues with my mac or found it to be way too much overhead with an annoying learning curve.  All I wanted was a simple program to read an image file into an array I could manipulate in C.  After a few impatient hours of trying other API&#39;s I ended up finding some sample code by &lt;a href=&#34;http://www.mandrakesoft.com&#34;&gt;Guillaume Cottenceau&lt;/a&gt; based on the png library and built my own.  Its just a simple Image class that handles reading and writing the image and contains the 2D array of the data.  It also has a convolution tool and the default example shows how to do a Sobel filter on an image.  Just &lt;a href=&#34;http://www.box.net/shared/53strvcg92&#34;&gt;download it here&lt;/a&gt; and run the following commands.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ make
$ ./Sample danandmegan.png
$ open sobel.png&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I&#39;ll write more on it later.&lt;/p&gt;
&lt;p&gt;Anyway, I built that simple API and then a bunch of tools for building and matching with the natural image database.  The matches are then compared to the surrounding probable patches using a technique called loopy belief propagation.  That&#39;s the part I sucked at and still don&#39;t get.  I was pretty upset about the fact that I had gotten so far, written so much code and wasn&#39;t able to finish.  This is the first project that, though I worked pretty hard at it and did some awesome stuff I still wasn&#39;t able to complete by the deadline.  I gave myself far too little time, dramatically underestimated the project which was more like 3 paper implementations than one, and had several time consuming hold ups.  Eighteen years of school and I&#39;m only now learning my lesson :).  I still got a decent grade and may come back to finish it sometime in the unprobable future where I have loads of free time.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Emacs for Macs</title>
            <author><name>dave</name></author>
            <link href="/2007/05/07/emacs-for-macs/"/>
            <updated>2007-05-07</updated>
            <published>2007-05-07</published>
            <id>/2007/05/07/emacs-for-macs/</id>
                        <category   scheme="/blog/tags/"
                        term="os x"
                        label="Os X" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;About 4 years ago at Gustavus I watched one of my professors in the only computer science class I took there completely rearange and edit a large text file in a matter of seconds using only the keyboard.  I was amazed and realized I was still in the dark ages of both programing and especially text editing skills.  I decided that I would have to learn whatever editor he was using.  The editor of course was Emacs.  As I&#39;d recently posted, I&#39;d lost my favorite version of it for Macs but I have now found it again.  I like it because its just a simple version of emacs with the GUI ported to a mac.  The publisher also shares two scripts that allow you to use apple-style shortcuts which I enjoy better for cutting and pasting.  Its just called &#34;Emacs for OS X&#34; by Ovidiu Predescu.  You can download the app and scripts here.  Here&#39;s a typical screen shot.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/05/emacs.png&#34;&gt;&lt;img alt=&#34;Emacs for Os X&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/05/emacs.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alternatives I found were &lt;a href=&#34;http://aquamacs.org/&#34;&gt;Aquamacs&lt;/a&gt; and &lt;a href=&#34;http://emacs-app.sourceforge.net/&#34;&gt;this version&lt;/a&gt; who&#39;s binary didn&#39;t work on my G4 and didn&#39;t come with the ./compile script it said it did, and ofcourse the default terminal version.  Aquamacs seems to be the choice for everyone, its alteast the most supported.  It advertises that it expands the usability of Emacs with a new Aqua interface.  When I tried it first two years ago I didn&#39;t like it at all.  My two largest problems were one, a personal distaste for the new icon (dumb I know) and the really annoying default setting of showing each buffer in a new window!  I think last time when installing I was trying out 3 different versions and just left this one behind after not finding the option to change that within the first 2 minutes.  This time before blogging about it and probably getting some people angry I thought I&#39;d look again.  It turns out to be a really simple setting to change: &lt;em&gt;Options &amp;gt; Display Buffers in Seperate Frames&lt;/em&gt;.  Then it turns out to be a pretty sweet version.  Its easier to configure and even looks a little prettier than the other.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/05/aquamacs.png&#34;&gt;&lt;img alt=&#34;Aquamacs&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/05/aquamacs.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Whichever one looks best to you I hope you give it a try.  Emacs can greatly improve your productivity in simple writing or coding.  Here are a &lt;a href=&#34;http://www.chris.spear.net/emacs/default.htm&#34;&gt;couple&lt;/a&gt; &lt;a href=&#34;http://steve.yegge.googlepages.com/effective-emacs&#34;&gt;sites&lt;/a&gt; &lt;a href=&#34;http://www-128.ibm.com/developerworks/edu/au-dw-au-emacs1-i.html&#34;&gt;on&lt;/a&gt; &lt;a href=&#34;http://www.math.utah.edu/computing/unix/emacs.html&#34;&gt;learning&lt;/a&gt; &lt;a href=&#34;http://ccrma.stanford.edu/guides/package/emacs/emacs.html&#34;&gt;Emacs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;An additional tip, to make it run from your terminal add an alias to your ~/.profile file.  For the first version use&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias emacs=&#34;/Applications/Emacs.app/Contents/MacOS/Emacs&#34;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;and for Aquamacs use&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias emacs=&#34;/Applications/Aquamacs Emacs.app/Contents/MacOS/Aquamacs Emacs&#34;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;and finally to reload your .profile without logging out use&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ source ~/.profile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;in your terminal.  Now I&#39;ve got my emacs and my computer feels like home again.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Combating Internet Addiction</title>
            <author><name>dave</name></author>
            <link href="/2007/05/04/combating-internet-addiction/"/>
            <updated>2007-05-04</updated>
            <published>2007-05-04</published>
            <id>/2007/05/04/combating-internet-addiction/</id>
                        <category   scheme="/blog/tags/"
                        term="os x"
                        label="Os X" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;I&#39;ve been insanely busy the past few weeks finishing up final projects, homeworks, and examinations.  I have some cool things to post when I get a chance but for now I&#39;m leaving a simple productivity tip.  My work revolves completely around computers which in my opinion have become more of a distraction than an assistant in the majority of work places.  The major culprit ... the internet.  Few people are actually distracted by the three exciting windows card games, or the exciting publications they could make with their text editor.  The real distraction lies in the limitless videos, articles, music and other forms of entertainment on the web.  To me, having access to the internet on the very machine that I&#39;m trying to do my work is like trying to read a book infront of the TV.  So often I&#39;m in the middle of coding or writing something and find myself subcontiously pulling up my web browser and typing in the name of my favorite sites.  Before I even realize it I&#39;m on &lt;a href=&#34;http://www.digg.com&#34;&gt;digg&lt;/a&gt;, &lt;a href=&#34;http://www.grupl.com&#34;&gt;grupl&lt;/a&gt;, &lt;a href=&#34;http://www.facebook.com&#34;&gt;facebook&lt;/a&gt;, or &lt;a href=&#34;http://www.collegehumor.com&#34;&gt;college humor&lt;/a&gt; and have 10 interesting articles to distract me.  I also get heavily distracted from the hard hitting action and news coming from &lt;a href=&#34;http://www.jared-lee.com&#34;&gt;Jared&#39;s One Blog&lt;/a&gt;.  Sometimes to prevent this I just turn off my wireless access, but most of the time I still need access to the network for files, coding references, or email, so I&#39;ve found a better solution.  With some easy edits to my hosts file I simply block the pages that are so problamatic for me.  Here&#39;s how:&lt;/p&gt;
&lt;p&gt;On a mac pull up your terminal: &lt;em&gt;Applications &amp;gt; Utilities &amp;gt; Terminal&lt;/em&gt;, and type the following.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo emacs /private/etc/hosts
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It will prompt you for your password and bring up something that looks like the following screen.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/05/hostsfile.png&#34;&gt;&lt;img alt=&#34;Hosts File&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/05/hostsfile.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then just add&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 127.0.0.1 www.distractingsite.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;at the end of the file for each of the sites you want to block, as shown in the example.  What its doing is redirecting requests to those sites to your home computer.  Unless you&#39;re serving a page from your computer you should get redirected to nothing.  Make sure to include different names for the site like www.facebook.com, www.thefacebook.com, and minnesota.facebook.com for example.  To save the file press &lt;em&gt;Ctrl-X Ctrl-S&lt;/em&gt; and then to close emacs use &lt;em&gt;Ctrl-X Ctrl-C&lt;/em&gt;.  Now its all setup, though it may take a restart before it starts blocking.&lt;/p&gt;
&lt;p&gt;The same can be done on windows.  &lt;a href=&#34;http://www.mvps.org/winhelp2002/hosts.htm&#34;&gt;This site&lt;/a&gt; tells me that the host files on windows are located at&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Windows Vista =   C:\WINDOWS\SYSTEM32\DRIVERS\ETC
Windows XP  =   C:\WINDOWS\SYSTEM32\DRIVERS\ETC
Windows 2K  =   C:\WINNT\SYSTEM32\DRIVERS\ETC
Win 98/ME   =   C:\WINDOWS&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now you&#39;re no longer victim to those horribly distracting pages and can get your work done!  Exciting?  I think so.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">About</title>
            <author><name>dave</name></author>
            <link href="/about/"/>
            <updated>2007-04-26 02:02:12</updated>
            <published>2007-04-26 02:02:12</published>
            <id>/about/</id>
            
            <content type="html">
                             &lt;p&gt;&lt;img src=&#34;/media/images/profile.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I&#39;m an entrepreneur currently serving as the Founder and CEO of &lt;a href=&#34;http://chartio.com&#34;&gt;Chartio&lt;/a&gt; where I&#39;m focused on bringing data visualization to a whole new group of people at an ease and price point that have never before been possible.  We&#39;re collecting data about everything around us and its time that people were able to harness that better.&lt;/p&gt;
&lt;p&gt;I&#39;ve founded 2 other companies, am an Alumni of the University of Minnesota, Gustavus Adolphus and Y Combinator.  After college, and before the startups I worked at IBM on the XBox360 processor where I lead 10 patents pending.&lt;/p&gt;
&lt;p&gt;I was listed in &lt;a href=&#34;http://www.forbes.com/pictures/lmf45kde/dave-fowler-founder-and-president-chart-io-28/&#34; title=&#34;Dave Fowler - Forbes 30 under 30 2011&#34;&gt;Forbes&#39; 30 under 30 in Technology for 2011&lt;/a&gt; and &lt;a href=&#34;http://www.forbes.com/pictures/lmf45fdij/dave-fowler/&#34; title=&#34;Dave Fowler - Forbes 30 under 30 2012&#34;&gt;2012&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can read more about me on my Chartio bio&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://chartio.com/about/dave&#34;&gt;http://chartio.com/about/dave&lt;/a&gt;&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">A Fresh New Blog</title>
            <author><name>dave</name></author>
            <link href="/2007/04/26/a-fresh-new-blog/"/>
            <updated>2007-04-26</updated>
            <published>2007-04-26</published>
            <id>/2007/04/26/a-fresh-new-blog/</id>
                        <category   scheme="/blog/tags/"
                        term="startup"
                        label="Startup" />
            
            <content type="html">
                             &lt;p&gt;I decided to start writing another blog, mostly because I&#39;ve been reading lots of other inspiring blogs and a lot of exciting stuff has been happening in my life.  I&#39;ve also realized how powerful an advertising tool a blog can be.  I started my first blog in 2002.  It was just some nicely designed HTML that I put together to get my job as a web developer at Gustavus.  In 2003 I&#39;d learned Cold Fusion for work but wanted to pick up PHP/MySQL so I wrote a blogging tool for my blog in it.  It was great and I had a lot of stuff on there, but I lost it all in 2005 on an unfortunate series of events involving two harddrives dying within a week of eachother.  Losing all of that took away my blogging steam.&lt;/p&gt;
&lt;p&gt;Hopefully this blog will be more informative than my last one as I share ThingsILearned.  The title refers to a startup I&#39;m doing with a friend of mine this summer.  I have two final projects to finish and then I&#39;m off to Silicon Valley for the summer to kick it off.  We&#39;re going to have to do an incredible amount of development as we have to get a beta out by the end of the summer.  Somehow I got lucky/unlucky and had incredible job offers to turn down to do this startup.  I kept my head low so it wouldn&#39;t be so bad but I still ended up with oportunities from Firefox, Intel, IBM and one or two others.  I was just feeling too sick about it to turn down IBM, they&#39;ve got me working on some incredibly incredibly cool stuff that I couldn&#39;t do anywhere else and the pay is really good.  So I was able to make a compromise and put off starting until September.  Hopefully by then the beta will be up and it will all need less of my attention?  Somehow I think it will only demand more :).  We will have to see how it all turns out.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Screw you! - A Python Example</title>
            <author><name>dave</name></author>
            <link href="/2007/04/26/screw-you-a-python-example/"/>
            <updated>2007-04-26</updated>
            <published>2007-04-26</published>
            <id>/2007/04/26/screw-you-a-python-example/</id>
                        <category   scheme="/blog/tags/"
                        term="python"
                        label="Python" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;So last night I was doing some dreaded debugging in C and it wasn&#39;t going well.  Its always tough to switch back and forth between such an intuitive language like Python to such a picky one like C.  Python just makes a developer&#39;s life sooo much easier.  I pride myself on a feat I performed this summer at IBM.  I had written, in Python, a fairly large program that does stuff I can&#39;t talk about.  The short version is I had to make major modifications to the program.  I sat down and hacked away for 5 hours.  At the end of the 5 hours I ran it to start debugging but I didn&#39;t have to, it worked on the first try!  That&#39;s exactly why I use Python.  It just make sense, so so does your code.&lt;/p&gt;
&lt;p&gt;Anyway, I was debugging C, getting angry, and started cursing at the terminal.&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;Illegal Instruction&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nv&#34;&gt;$ &lt;/span&gt;What the hell does that mean!?!?!&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nv&#34;&gt;$ &lt;/span&gt;Illegal f*#@ Instruction?&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nv&#34;&gt;$ &lt;/span&gt;That helps me none you f&amp;amp;&lt;span class=&#34;nv&#34;&gt;$*&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;nv&#34;&gt;$ &lt;/span&gt;screw you!!!!!!!&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Bash&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;Well that&#39;s the clean version anyway.  I get angry when its late and stuff doesn&#39;t work nor help me.  So then I decided that my computer should be able to defend itself from such insults.  I took the idea as an oportunity to procrastinate and feel better about my programing abilities by writing a Python script called screw.&lt;/p&gt;
&lt;div class=&#34;codebox&#34;&gt;&lt;figure class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;a name=&#34;line-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;c&#34;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-2&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-3&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-4&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-5&#34;&gt;&lt;/a&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-6&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-7&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;nouns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;monkey&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;fruit&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;nazi&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;butt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;crap&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;banana&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;mouth&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-8&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;house&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;clown&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;cat&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;dog&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;donkey&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;face&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;ass&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-9&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-10&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;adjectives&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;bitch&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;crazy&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;dick&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;hairy&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;ugly&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;flaming&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-11&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;smelly&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;feminine&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;lazy&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;crappy&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-12&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-13&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;verbs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;flying&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;screaming&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;jumping&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;dying&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;self pleasing&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-14&#34;&gt;&lt;/a&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;lying&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;dumping&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;humping&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-15&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-16&#34;&gt;&lt;/a&gt;&lt;span class=&#34;n&#34;&gt;vowels&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;aeiou&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-17&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-18&#34;&gt;&lt;/a&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-19&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-20&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;say&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-21&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;n&#34;&gt;isorare&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot; is&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-22&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot; a&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-23&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-24&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;n&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-25&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;me&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-26&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;n&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;You&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-27&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;n&#34;&gt;isorare&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot; are&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-28&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;you&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-29&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;n&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;No, screw you, you&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-30&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;n&#34;&gt;isorare&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-31&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-32&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-33&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-34&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;n&#34;&gt;cmd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-35&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;nosay&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-36&#34;&gt;&lt;/a&gt;            &lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;print only&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-37&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-38&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;n&#34;&gt;noun&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nouns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nouns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-39&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;n&#34;&gt;adjective&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adverbs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;adverbs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-40&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;n&#34;&gt;verb&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;verbs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-41&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-42&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vowels&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;verb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-43&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot; an&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-44&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-45&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;n&#34;&gt;saying&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;person&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isorare&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verb&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adjective&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;noun&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-46&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a name=&#34;line-47&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;saying&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-48&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;say&amp;#39;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;platform&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;darwin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;br /&gt;&lt;a name=&#34;line-49&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;say &amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;saying&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;n&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;figcaption&gt;Python&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;Copy the above code or download the &lt;a href=&#34;http://development.annabelledey.com/blog/screw&#34;&gt;source here.&lt;/a&gt; To run it yourself save code to a file named screw (no extension) in one of your path directories.  I&#39;m on a mac and saved it to /opt/local/bin.  Macs already have python installed so you don&#39;t have to worry about that.  Another advantage for macs is that I included the &#39;say&#39; command so it will also verbally defend itself.  If you&#39;re running windows and don&#39;t have python installed you can &lt;a href=&#34;http://code.enthought.com/enthon/#download&#34;&gt;download python for windows here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The code is pretty simple.  I made a list of nouns, adjectives and verbs.  Then I mix these together in the following insult format:&lt;/p&gt;
&lt;p&gt;[name] is a(n) [random verb] [random adjective] [random noun].&lt;/p&gt;
&lt;p&gt;Where [name] is the first input after the screw command and the rest of the variables are just randomly choses from the list I created.  So if you put something like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ screw Jared
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;you get things like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Jared is a self pleasing hairy donkey.
Jared is a dumping feminine monkey.
Jared is a jumping crappy banana.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;None of it makes sense but its still funny, especially when you&#39;re on a mac and its actually saying that stuff!  Hillarious...&lt;/p&gt;
&lt;p&gt;I also needed it to defend itself, the origional purpose right?  So it checks for the words &#39;you&#39; or &#39;me&#39; in the inputs.  If it finds &#39;me&#39;, like you say &#39;screw me&#39; it will change some parameters to insult you.  If you say &#39;screw you!!!&#39; or anything with the word &#39;you&#39; in it it&#39;ll flip it and start insulting you back.  Examples&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ screw you you butt!
No, screw you, you  humping crazy fruit.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So thought I&#39;d share that and hope a few of you try it out and have some fun and even learn a little python.  Its really easy to change the insults, just add or change words in the nouns, verbs, and adverbs lists!  Leave comments with questions or links to revised versions.  Have a good night and remember &#39;You are a lying crazy clown.&#39;&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
            <entry>
            <title type="html">Xcode Editor - Kinda Sucks</title>
            <author><name>dave</name></author>
            <link href="/2007/04/26/xcode-shortcuts/"/>
            <updated>2007-04-26</updated>
            <published>2007-04-26</published>
            <id>/2007/04/26/xcode-shortcuts/</id>
                        <category   scheme="/blog/tags/"
                        term="os x"
                        label="Os X" />
                        <category   scheme="/blog/tags/"
                        term="thingsilearned"
                        label="Thingsilearned" />
            
            <content type="html">
                             &lt;p&gt;Scince my harddrive died a month ago I haven&#39;t been able to find the mac version of emacs I installed 2 years ago and loved ever since.  So lately I&#39;ve been having to use Xcode a lot more.  Sure there are a lot of nice things about it that supposedly make building projects and debugging more simple but I&#39;m not a fan at all of the editor.  First, when I&#39;m just opening files from my finder they all open up new windows.  You have to drag each file individually (not as a group) into an already open window to get them all in the same editor.  Then its difficult to switch back and forth between files.  Until today I had to reach for the mouse and click the next arrow!  What?!  It sounds lame but its really a no brainer that any good code editor should have a quick way to switch back and forth between open files, like Ctrl-x b in emacs.  Anyway, I figured Xcode has to have this feature so I did some googling.  There&#39;s very little info on it, I found a clue on &lt;a href=&#34;http://inessential.com/?comments=1&amp;amp;postid=3216&#34;&gt;this guy&#39;s blog.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Aparently you can use Ctrl-1, and then use the arrows keys to choose which file you want.  That&#39;s a pretty crappy shortcut if you ask me.  You need to use both hands and each has to remove itself from the home row.  Luckily a submitter to that blog added&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can now add command keys to any menu item in any application that currently lacks them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;System Preferences &amp;gt; Keyboard &amp;amp; Mouse &amp;gt; Keyboard Shortcuts&lt;/p&gt;
&lt;p&gt;Scroll to the bottom of the list and you&#39;ll see &#34;Application Keyboard Shortcuts&#34;. Click the + sign to add a new one.&lt;/p&gt;
&lt;p&gt;That got me excited but the process of doing this wasn&#39;t intuitive. It asks for a Menu Title of the shortcut you&#39;re making.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://thingsilearned.files.wordpress.com/2007/04/shortcutadd1.png&#34;&gt;&lt;img alt=&#34;Adding a Keyboard Shortcut to Xcode&#34; src=&#34;http://thingsilearned.files.wordpress.com/2007/04/shortcutadd1.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What?  What&#39;s that? I found out &lt;a href=&#34;http://docs.info.apple.com/article.html?artnum=152140&amp;amp;coll=cp&#34;&gt;here.&lt;/a&gt; Apparently you have to use the exact command (including the ... if its there) listed in the file menu of the app you want the shortcut for.  Unfortunately at this point you can&#39;t open your app because it has to be closed during the process or the shortcutting won&#39;t work.  It&#39;d be nice if they put a nice pull down menu of your options here.  But it isn&#39;t there and either is the menu option in Xcode to switch between files.  I tried the command &#34;Go Back&#34; as that&#39;s what pops up when I hover my mouse over the button I want to short cut.  I even tried a few cuss words but none of it worked.  Xcode really needs to fix both how files are added to the editor, shortcuts for moving between files, and while they&#39;re at it it&#39;d be great to throw in the function hiding options in the gutter that are really handy in visual studio :).&lt;/p&gt;
&lt;p&gt;Like I said I&#39;m somewhat new to Xcode so if anyone knows how to fix any of these problems with some settings, or hacks that I haven&#39;t discovered please leave a comment.&lt;/p&gt;
&lt;p&gt;Dave&lt;/p&gt;         
            </content>
        </entry>
    </feed>